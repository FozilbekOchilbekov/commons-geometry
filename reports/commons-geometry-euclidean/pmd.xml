<?xml version="1.0" encoding="UTF-8"?>
<pmd xmlns="http://pmd.sourceforge.net/report/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd" version="6.55.0" timestamp="2024-07-13T15:24:51.936">
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\AbstractBounds.java">
<violation beginline="226" endline="226" begincolumn="37" endcolumn="52" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean" class="AbstractBounds$BoundsLinecaster" method="getBoundaryIntersections" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="274" endline="274" begincolumn="66" endcolumn="68" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean" class="AbstractBounds$BoundsLinecaster" method="addBoundaryIntersectionIfPresent" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="275" endline="275" begincolumn="66" endcolumn="68" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean" class="AbstractBounds$BoundsLinecaster" method="addBoundaryIntersectionIfPresent" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="299" endline="299" begincolumn="64" endcolumn="66" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean" class="AbstractBounds$BoundsLinecaster" method="updateNearFar" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="300" endline="300" begincolumn="64" endcolumn="66" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean" class="AbstractBounds$BoundsLinecaster" method="updateNearFar" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\AbstractLinecastPoint.java">
<violation beginline="31" endline="130" begincolumn="17" endcolumn="1" rule="AbstractClassWithoutAbstractMethod" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean" class="AbstractLinecastPoint" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#abstractclasswithoutabstractmethod" priority="3">
This abstract class does not have any abstract methods
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\PointMap1DImpl.java">
<violation beginline="167" endline="167" begincolumn="28" endcolumn="31" rule="NullAssignment" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean" class="PointMap1DImpl$NearToFarIterator" method="next" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
<violation beginline="170" endline="170" begincolumn="29" endcolumn="32" rule="NullAssignment" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean" class="PointMap1DImpl$NearToFarIterator" method="next" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
<violation beginline="240" endline="240" begincolumn="27" endcolumn="30" rule="NullAssignment" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean" class="PointMap1DImpl$FarToNearIterator" method="hasNext" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
<violation beginline="251" endline="251" begincolumn="28" endcolumn="31" rule="NullAssignment" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean" class="PointMap1DImpl$FarToNearIterator" method="hasNext" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
<violation beginline="271" endline="271" begincolumn="28" endcolumn="31" rule="NullAssignment" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean" class="PointMap1DImpl$FarToNearIterator" method="next" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
<violation beginline="274" endline="274" begincolumn="29" endcolumn="32" rule="NullAssignment" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean" class="PointMap1DImpl$FarToNearIterator" method="next" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\PointMap2DImpl.java">
<violation beginline="163" endline="163" begincolumn="21" endcolumn="24" rule="NullAssignment" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean" class="PointMap2DImpl$MapNode2D" method="makeLeaf" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\PointMap3DImpl.java">
<violation beginline="191" endline="191" begincolumn="21" endcolumn="24" rule="NullAssignment" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean" class="PointMap3DImpl$MapNode3D" method="makeLeaf" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\oned\Interval.java">
<violation beginline="35" endline="510" begincolumn="14" endcolumn="1" rule="CyclomaticComplexity" ruleset="Design" package="org.apache.commons.geometry.euclidean.oned" class="Interval" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The class 'Interval' has a total cyclomatic complexity of 93 (highest 15).
</violation>
<violation beginline="37" endline="37" begincolumn="26" endcolumn="66" rule="AvoidFieldNameMatchingMethodName" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.oned" class="Interval" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#avoidfieldnamematchingmethodname" priority="3">
Field FULL has the same name as a method
</violation>
<violation beginline="297" endline="330" begincolumn="12" endcolumn="5" rule="CyclomaticComplexity" ruleset="Design" package="org.apache.commons.geometry.euclidean.oned" class="Interval" method="split" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'split(Hyperplane)' has a cyclomatic complexity of 11.
</violation>
<violation beginline="409" endline="435" begincolumn="19" endcolumn="5" rule="CyclomaticComplexity" ruleset="Design" package="org.apache.commons.geometry.euclidean.oned" class="Interval" method="of" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'of(OrientedPoint, OrientedPoint)' has a cyclomatic complexity of 15.
</violation>
<violation beginline="409" endline="435" begincolumn="19" endcolumn="5" rule="NPathComplexity" ruleset="Design" package="org.apache.commons.geometry.euclidean.oned" class="Interval" method="of" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#npathcomplexity" priority="3">
The method 'of(OrientedPoint, OrientedPoint)' has an NPath complexity of 1200, current threshold is 200
</violation>
<violation beginline="433" endline="433" begincolumn="57" endcolumn="60" rule="NullAssignment" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.oned" class="Interval" method="of" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
<violation beginline="434" endline="434" begincolumn="57" endcolumn="60" rule="NullAssignment" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.oned" class="Interval" method="of" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\oned\OrientedPoint.java">
<violation beginline="239" endline="239" begincolumn="29" endcolumn="30" rule="InsufficientStringBufferDeclaration" ruleset="Performance" package="org.apache.commons.geometry.euclidean.oned" class="OrientedPoint" method="toString" variable="sb" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#insufficientstringbufferdeclaration" priority="3">
StringBuilder has been initialized with size 16, but has at least 22 characters appended.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\oned\RegionBSPTree1D.java">
<violation beginline="245" endline="245" begincolumn="17" endcolumn="38" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.oned" class="RegionBSPTree1D" method="visitInsideIntervals" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="253" endline="253" begincolumn="16" endcolumn="37" rule="AccessorClassGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.oned" class="RegionBSPTree1D" method="createNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessorclassgeneration" priority="3">
Avoid instantiation through private constructors from outside of the constructors class.
</violation>
<violation beginline="374" endline="399" begincolumn="17" endcolumn="9" rule="CyclomaticComplexity" ruleset="Design" package="org.apache.commons.geometry.euclidean.oned" class="RegionBSPTree1D$RegionNode1D" method="visitNodeInterval" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'visitNodeInterval(BiConsumer)' has a cyclomatic complexity of 10.
</violation>
<violation beginline="382" endline="382" begincolumn="20" endcolumn="87" rule="AssignmentInOperand" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.oned" class="RegionBSPTree1D$RegionNode1D" method="visitNodeInterval" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#assignmentinoperand" priority="3">
Avoid assignments in operands
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\oned\Vector1D.java">
<violation beginline="17" endline="484" begincolumn="1" endcolumn="3" rule="ExcessivePublicCount" ruleset="Design" package="org.apache.commons.geometry.euclidean.oned" class="Vector1D" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#excessivepubliccount" priority="3">
This class has a bunch of public methods and attributes
</violation>
<violation beginline="191" endline="191" begincolumn="16" endcolumn="39" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.oned" class="Vector1D" method="normalizeOrNull" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="327" endline="416" begincolumn="25" endcolumn="5" rule="ShortClassName" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.oned" class="Vector1D$Unit" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like Unit
</violation>
<violation beginline="424" endline="483" begincolumn="25" endcolumn="5" rule="ShortClassName" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.oned" class="Vector1D$Sum" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like Sum
</violation>
<violation beginline="433" endline="433" begincolumn="64" endcolumn="72" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.oned" class="Vector1D$Sum" method="Sum" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="439" endline="439" begincolumn="22" endcolumn="26" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.oned" class="Vector1D$Sum" method="add" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="446" endline="446" begincolumn="36" endcolumn="40" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.oned" class="Vector1D$Sum" method="addScaled" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\threed\AbstractConvexPolygon3D.java">
<violation beginline="296" endline="382" begincolumn="12" endcolumn="5" rule="CognitiveComplexity" ruleset="Design" package="org.apache.commons.geometry.euclidean.threed" class="AbstractConvexPolygon3D" method="split" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#cognitivecomplexity" priority="3">
The method 'split(Hyperplane)' has a cognitive complexity of 20, current threshold is 15
</violation>
<violation beginline="296" endline="382" begincolumn="12" endcolumn="5" rule="CyclomaticComplexity" ruleset="Design" package="org.apache.commons.geometry.euclidean.threed" class="AbstractConvexPolygon3D" method="split" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'split(Hyperplane)' has a cyclomatic complexity of 14.
</violation>
<violation beginline="441" endline="441" begincolumn="29" endcolumn="30" rule="InsufficientStringBufferDeclaration" ruleset="Performance" package="org.apache.commons.geometry.euclidean.threed" class="AbstractConvexPolygon3D" method="toString" variable="sb" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#insufficientstringbufferdeclaration" priority="3">
StringBuilder has been initialized with size 16, but has at least 22 characters appended.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\threed\AbstractEmbeddedRegionPlaneSubset.java">
<violation beginline="107" endline="107" begincolumn="29" endcolumn="30" rule="InsufficientStringBufferDeclaration" ruleset="Performance" package="org.apache.commons.geometry.euclidean.threed" class="AbstractEmbeddedRegionPlaneSubset" method="toString" variable="sb" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#insufficientstringbufferdeclaration" priority="3">
StringBuilder has been initialized with size 16, but has at least 27 characters appended.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\threed\Bounds3D.java">
<violation beginline="253" endline="253" begincolumn="16" endcolumn="28" rule="AccessorClassGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed" class="Bounds3D" method="builder" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessorclassgeneration" priority="3">
Avoid instantiation through private constructors from outside of the constructors class.
</violation>
<violation beginline="356" endline="356" begincolumn="20" endcolumn="41" rule="AccessorClassGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed" class="Bounds3D$Builder" method="build" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessorclassgeneration" priority="3">
Avoid instantiation through private constructors from outside of the constructors class.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\threed\ConvexVolume.java">
<violation beginline="37" endline="37" begincolumn="26" endcolumn="87" rule="AvoidFieldNameMatchingMethodName" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.threed" class="ConvexVolume" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#avoidfieldnamematchingmethodname" priority="3">
Field FULL has the same name as a method
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\threed\EmbeddingPlane.java">
<violation beginline="239" endline="239" begincolumn="29" endcolumn="30" rule="InsufficientStringBufferDeclaration" ruleset="Performance" package="org.apache.commons.geometry.euclidean.threed" class="EmbeddingPlane" method="toString" variable="sb" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#insufficientstringbufferdeclaration" priority="3">
StringBuilder has been initialized with size 16, but has at least 25 characters appended.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\threed\Plane.java">
<violation beginline="390" endline="390" begincolumn="29" endcolumn="30" rule="InsufficientStringBufferDeclaration" ruleset="Performance" package="org.apache.commons.geometry.euclidean.threed" class="Plane" method="toString" variable="sb" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#insufficientstringbufferdeclaration" priority="3">
StringBuilder has been initialized with size 16, but has at least 20 characters appended.
</violation>
<violation beginline="414" endline="414" begincolumn="15" endcolumn="45" rule="PrematureDeclaration" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.threed" class="Plane" method="intersection" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#prematuredeclaration" priority="3">
Avoid declaring a variable if it is unreferenced before a possible exit point.
</violation>
<violation beginline="419" endline="419" begincolumn="15" endcolumn="45" rule="PrematureDeclaration" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.threed" class="Plane" method="intersection" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#prematuredeclaration" priority="3">
Avoid declaring a variable if it is unreferenced before a possible exit point.
</violation>
<violation beginline="424" endline="424" begincolumn="15" endcolumn="45" rule="PrematureDeclaration" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.threed" class="Plane" method="intersection" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#prematuredeclaration" priority="3">
Avoid declaring a variable if it is unreferenced before a possible exit point.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\threed\RegionBSPTree3D.java">
<violation beginline="108" endline="123" begincolumn="13" endcolumn="5" rule="LinguisticNaming" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.threed" class="RegionBSPTree3D" method="toConvexRecursive" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The transform method 'toConvexRecursive' should not return void linguistically
</violation>
<violation beginline="136" endline="136" begincolumn="47" endcolumn="73" rule="AccessorClassGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed" class="RegionBSPTree3D" method="project" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessorclassgeneration" priority="3">
Avoid instantiation through private constructors from outside of the constructors class.
</violation>
<violation beginline="232" endline="232" begincolumn="16" endcolumn="47" rule="AccessorClassGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed" class="RegionBSPTree3D" method="partitionedRegionBuilder" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessorclassgeneration" priority="3">
Avoid instantiation through private constructors from outside of the constructors class.
</violation>
<violation beginline="256" endline="256" begincolumn="20" endcolumn="55" rule="AssignmentInOperand" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.threed" class="RegionBSPTree3D$RegionNode3D" method="getNodeRegion" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#assignmentinoperand" priority="3">
Avoid assignments in operands
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\threed\Vector3D.java">
<violation beginline="17" endline="901" begincolumn="1" endcolumn="3" rule="ExcessivePublicCount" ruleset="Design" package="org.apache.commons.geometry.euclidean.threed" class="Vector3D" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#excessivepubliccount" priority="3">
This class has a bunch of public methods and attributes
</violation>
<violation beginline="252" endline="252" begincolumn="16" endcolumn="39" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed" class="Vector3D" method="normalizeOrNull" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="358" endline="358" begincolumn="20" endcolumn="57" rule="AccessorClassGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed" class="Vector3D" method="orthogonal" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessorclassgeneration" priority="3">
Avoid instantiation through private constructors from outside of the constructors class.
</violation>
<violation beginline="361" endline="361" begincolumn="20" endcolumn="57" rule="AccessorClassGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed" class="Vector3D" method="orthogonal" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessorclassgeneration" priority="3">
Avoid instantiation through private constructors from outside of the constructors class.
</violation>
<violation beginline="364" endline="364" begincolumn="16" endcolumn="53" rule="AccessorClassGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed" class="Vector3D" method="orthogonal" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessorclassgeneration" priority="3">
Avoid instantiation through private constructors from outside of the constructors class.
</violation>
<violation beginline="512" endline="512" begincolumn="25" endcolumn="25" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.threed" class="Vector3D" method="of" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="664" endline="821" begincolumn="25" endcolumn="5" rule="ShortClassName" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.threed" class="Vector3D$Unit" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like Unit
</violation>
<violation beginline="829" endline="900" begincolumn="25" endcolumn="5" rule="ShortClassName" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.threed" class="Vector3D$Sum" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like Sum
</violation>
<violation beginline="841" endline="841" begincolumn="64" endcolumn="72" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed" class="Vector3D$Sum" method="Sum" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="842" endline="842" begincolumn="64" endcolumn="72" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed" class="Vector3D$Sum" method="Sum" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="843" endline="843" begincolumn="64" endcolumn="72" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed" class="Vector3D$Sum" method="Sum" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="849" endline="849" begincolumn="22" endcolumn="26" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed" class="Vector3D$Sum" method="add" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="850" endline="850" begincolumn="22" endcolumn="26" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed" class="Vector3D$Sum" method="add" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="851" endline="851" begincolumn="22" endcolumn="26" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed" class="Vector3D$Sum" method="add" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="858" endline="858" begincolumn="36" endcolumn="40" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed" class="Vector3D$Sum" method="addScaled" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="859" endline="859" begincolumn="36" endcolumn="40" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed" class="Vector3D$Sum" method="addScaled" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="860" endline="860" begincolumn="36" endcolumn="40" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed" class="Vector3D$Sum" method="addScaled" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\threed\line\EmbeddedTreeLineSubset3D.java">
<violation beginline="151" endline="151" begincolumn="29" endcolumn="30" rule="InsufficientStringBufferDeclaration" ruleset="Performance" package="org.apache.commons.geometry.euclidean.threed.line" class="EmbeddedTreeLineSubset3D" method="toString" variable="sb" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#insufficientstringbufferdeclaration" priority="3">
StringBuilder has been initialized with size 16, but has at least 41 characters appended.
</violation>
<violation beginline="153" endline="153" begincolumn="20" endcolumn="24" rule="ConsecutiveLiteralAppends" ruleset="Performance" package="org.apache.commons.geometry.euclidean.threed.line" class="EmbeddedTreeLineSubset3D" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#consecutiveliteralappends" priority="3">
StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\threed\line\Ray3D.java">
<violation beginline="161" endline="161" begincolumn="29" endcolumn="30" rule="InsufficientStringBufferDeclaration" ruleset="Performance" package="org.apache.commons.geometry.euclidean.threed.line" class="Ray3D" method="toString" variable="sb" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#insufficientstringbufferdeclaration" priority="3">
StringBuilder has been initialized with size 16, but has at least 27 characters appended.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\threed\line\ReverseRay3D.java">
<violation beginline="155" endline="155" begincolumn="29" endcolumn="30" rule="InsufficientStringBufferDeclaration" ruleset="Performance" package="org.apache.commons.geometry.euclidean.threed.line" class="ReverseRay3D" method="toString" variable="sb" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#insufficientstringbufferdeclaration" priority="3">
StringBuilder has been initialized with size 16, but has at least 25 characters appended.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\threed\line\Segment3D.java">
<violation beginline="160" endline="160" begincolumn="29" endcolumn="30" rule="InsufficientStringBufferDeclaration" ruleset="Performance" package="org.apache.commons.geometry.euclidean.threed.line" class="Segment3D" method="toString" variable="sb" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#insufficientstringbufferdeclaration" priority="3">
StringBuilder has been initialized with size 16, but has at least 26 characters appended.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\threed\mesh\Mesh.java">
<violation beginline="30" endline="114" begincolumn="8" endcolumn="1" rule="ShortClassName" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.threed.mesh" class="Mesh" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like Mesh
</violation>
<violation beginline="78" endline="113" begincolumn="5" endcolumn="5" rule="ShortClassName" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.threed.mesh" class="Mesh$Face" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like Face
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\threed\mesh\SimpleTriangleMesh.java">
<violation beginline="17" endline="747" begincolumn="1" endcolumn="3" rule="ExcessivePublicCount" ruleset="Design" package="org.apache.commons.geometry.euclidean.threed.mesh" class="SimpleTriangleMesh" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#excessivepubliccount" priority="3">
This class has a bunch of public methods and attributes
</violation>
<violation beginline="57" endline="57" begincolumn="19" endcolumn="42" rule="AvoidFieldNameMatchingMethodName" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.threed.mesh" class="SimpleTriangleMesh" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#avoidfieldnamematchingmethodname" priority="3">
Field vertices has the same name as a method
</violation>
<violation beginline="60" endline="60" begincolumn="19" endcolumn="36" rule="AvoidFieldNameMatchingMethodName" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.threed.mesh" class="SimpleTriangleMesh" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#avoidfieldnamematchingmethodname" priority="3">
Field faces has the same name as a method
</violation>
<violation beginline="199" endline="199" begincolumn="29" endcolumn="30" rule="InsufficientStringBufferDeclaration" ruleset="Performance" package="org.apache.commons.geometry.euclidean.threed.mesh" class="SimpleTriangleMesh" method="toString" variable="sb" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#insufficientstringbufferdeclaration" priority="3">
StringBuilder has been initialized with size 16, but has at least 38 characters appended.
</violation>
<violation beginline="229" endline="229" begincolumn="16" endcolumn="37" rule="AccessorClassGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed.mesh" class="SimpleTriangleMesh" method="builder" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessorclassgeneration" priority="3">
Avoid instantiation through private constructors from outside of the constructors class.
</violation>
<violation beginline="296" endline="296" begincolumn="34" endcolumn="46" rule="ArrayIsStoredDirectly" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed.mesh" class="SimpleTriangleMesh$SimpleTriangleFace" method="SimpleTriangleFace" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#arrayisstoreddirectly" priority="3">
The user-supplied array 'vertexIndices' is stored directly.
</violation>
<violation beginline="323" endline="323" begincolumn="20" endcolumn="31" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed.mesh" class="SimpleTriangleMesh$SimpleTriangleFace" method="getPoint1" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="329" endline="329" begincolumn="20" endcolumn="31" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed.mesh" class="SimpleTriangleMesh$SimpleTriangleFace" method="getPoint2" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="335" endline="335" begincolumn="20" endcolumn="31" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed.mesh" class="SimpleTriangleMesh$SimpleTriangleFace" method="getPoint3" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="345" endline="345" begincolumn="21" endcolumn="36" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed.mesh" class="SimpleTriangleMesh$SimpleTriangleFace" method="definesPolygon" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="355" endline="355" begincolumn="21" endcolumn="29" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed.mesh" class="SimpleTriangleMesh$SimpleTriangleFace" method="getPolygon" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="361" endline="361" begincolumn="33" endcolumn="34" rule="InsufficientStringBufferDeclaration" ruleset="Performance" package="org.apache.commons.geometry.euclidean.threed.mesh" class="SimpleTriangleMesh$SimpleTriangleFace" method="toString" variable="sb" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#insufficientstringbufferdeclaration" priority="3">
StringBuilder has been initialized with size 16, but has at least 38 characters appended.
</violation>
<violation beginline="397" endline="397" begincolumn="28" endcolumn="37" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed.mesh" class="SimpleTriangleMesh$FaceIterator" method="hasNext" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="416" endline="416" begincolumn="23" endcolumn="41" rule="LooseCoupling" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed.mesh" class="SimpleTriangleMesh$Builder" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'ArrayList'; use the interface instead
</violation>
<violation beginline="422" endline="422" begincolumn="23" endcolumn="38" rule="LooseCoupling" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed.mesh" class="SimpleTriangleMesh$Builder" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'ArrayList'; use the interface instead
</violation>
<violation beginline="666" endline="670" begincolumn="20" endcolumn="30" rule="AccessorClassGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed.mesh" class="SimpleTriangleMesh$Builder" method="build" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessorclassgeneration" priority="3">
Avoid instantiation through private constructors from outside of the constructors class.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\threed\mesh\TriangleMesh.java">
<violation beginline="33" endline="53" begincolumn="5" endcolumn="5" rule="ShortClassName" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.threed.mesh" class="TriangleMesh$Face" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like Face
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\threed\rotation\AxisAngleSequence.java">
<violation beginline="167" endline="167" begincolumn="29" endcolumn="30" rule="InsufficientStringBufferDeclaration" ruleset="Performance" package="org.apache.commons.geometry.euclidean.threed.rotation" class="AxisAngleSequence" method="toString" variable="sb" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#insufficientstringbufferdeclaration" priority="3">
StringBuilder has been initialized with size 16, but has at least 41 characters appended.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\threed\rotation\AxisSequence.java">
<violation beginline="90" endline="90" begincolumn="28" endcolumn="32" rule="NonSerializableClass" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.threed.rotation" class="AxisSequence" variable="axis1" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nonserializableclass" priority="3">
The field 'axis1' of serializable class 'org.apache.commons.geometry.euclidean.threed.rotation.AxisSequence' is of non-serializable type 'org.apache.commons.geometry.euclidean.threed.Vector3D'.
</violation>
<violation beginline="93" endline="93" begincolumn="28" endcolumn="32" rule="NonSerializableClass" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.threed.rotation" class="AxisSequence" variable="axis2" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nonserializableclass" priority="3">
The field 'axis2' of serializable class 'org.apache.commons.geometry.euclidean.threed.rotation.AxisSequence' is of non-serializable type 'org.apache.commons.geometry.euclidean.threed.Vector3D'.
</violation>
<violation beginline="96" endline="96" begincolumn="28" endcolumn="32" rule="NonSerializableClass" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.threed.rotation" class="AxisSequence" variable="axis3" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nonserializableclass" priority="3">
The field 'axis3' of serializable class 'org.apache.commons.geometry.euclidean.threed.rotation.AxisSequence' is of non-serializable type 'org.apache.commons.geometry.euclidean.threed.Vector3D'.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\threed\rotation\QuaternionRotation.java">
<violation beginline="403" endline="403" begincolumn="15" endcolumn="55" rule="PrematureDeclaration" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.threed.rotation" class="QuaternionRotation" method="getRelativeTaitBryanAngles" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#prematuredeclaration" priority="3">
Avoid declaring a variable if it is unreferenced before a possible exit point.
</violation>
<violation beginline="472" endline="472" begincolumn="15" endcolumn="55" rule="PrematureDeclaration" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.threed.rotation" class="QuaternionRotation" method="getRelativeEulerAngles" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#prematuredeclaration" priority="3">
Avoid declaring a variable if it is unreferenced before a possible exit point.
</violation>
<violation beginline="589" endline="589" begincolumn="15" endcolumn="50" rule="PrematureDeclaration" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.threed.rotation" class="QuaternionRotation" method="fromAxisAngle" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#prematuredeclaration" priority="3">
Avoid declaring a variable if it is unreferenced before a possible exit point.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\threed\shape\Parallelepiped.java">
<violation beginline="178" endline="178" begincolumn="16" endcolumn="37" rule="AccessorClassGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.threed.shape" class="Parallelepiped" method="builder" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessorclassgeneration" priority="3">
Avoid instantiation through private constructors from outside of the constructors class.
</violation>
<violation beginline="254" endline="257" begincolumn="16" endcolumn="9" rule="LinguisticNaming" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.threed.shape" class="Parallelepiped$Builder" method="setPosition" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The setter 'setPosition' should not return any type except void linguistically
</violation>
<violation beginline="264" endline="267" begincolumn="16" endcolumn="9" rule="LinguisticNaming" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.threed.shape" class="Parallelepiped$Builder" method="setScale" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The setter 'setScale' should not return any type except void linguistically
</violation>
<violation beginline="276" endline="278" begincolumn="16" endcolumn="9" rule="LinguisticNaming" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.threed.shape" class="Parallelepiped$Builder" method="setScale" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The setter 'setScale' should not return any type except void linguistically
</violation>
<violation beginline="285" endline="287" begincolumn="16" endcolumn="9" rule="LinguisticNaming" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.threed.shape" class="Parallelepiped$Builder" method="setScale" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The setter 'setScale' should not return any type except void linguistically
</violation>
<violation beginline="293" endline="296" begincolumn="16" endcolumn="9" rule="LinguisticNaming" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.threed.shape" class="Parallelepiped$Builder" method="setRotation" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The setter 'setRotation' should not return any type except void linguistically
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\twod\Bounds2D.java">
<violation beginline="240" endline="240" begincolumn="16" endcolumn="28" rule="AccessorClassGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.twod" class="Bounds2D" method="builder" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessorclassgeneration" priority="3">
Avoid instantiation through private constructors from outside of the constructors class.
</violation>
<violation beginline="332" endline="332" begincolumn="20" endcolumn="41" rule="AccessorClassGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.twod" class="Bounds2D$Builder" method="build" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessorclassgeneration" priority="3">
Avoid instantiation through private constructors from outside of the constructors class.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\twod\ConvexArea.java">
<violation beginline="44" endline="44" begincolumn="26" endcolumn="83" rule="AvoidFieldNameMatchingMethodName" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.twod" class="ConvexArea" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#avoidfieldnamematchingmethodname" priority="3">
Field FULL has the same name as a method
</violation>
<violation beginline="221" endline="271" begincolumn="19" endcolumn="5" rule="CyclomaticComplexity" ruleset="Design" package="org.apache.commons.geometry.euclidean.twod" class="ConvexArea" method="convexPolygonFromPath" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'convexPolygonFromPath(LinePath)' has a cyclomatic complexity of 11.
</violation>
<violation beginline="228" endline="228" begincolumn="31" endcolumn="31" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.twod" class="ConvexArea" method="convexPolygonFromPath" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\twod\EmbeddedTreeLineSubset.java">
<violation beginline="179" endline="179" begincolumn="15" endcolumn="68" rule="PrematureDeclaration" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.twod" class="EmbeddedTreeLineSubset" method="split" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#prematuredeclaration" priority="3">
Avoid declaring a variable if it is unreferenced before a possible exit point.
</violation>
<violation beginline="239" endline="239" begincolumn="29" endcolumn="30" rule="InsufficientStringBufferDeclaration" ruleset="Performance" package="org.apache.commons.geometry.euclidean.twod" class="EmbeddedTreeLineSubset" method="toString" variable="sb" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#insufficientstringbufferdeclaration" priority="3">
StringBuilder has been initialized with size 16, but has at least 41 characters appended.
</violation>
<violation beginline="241" endline="241" begincolumn="20" endcolumn="24" rule="ConsecutiveLiteralAppends" ruleset="Performance" package="org.apache.commons.geometry.euclidean.twod" class="EmbeddedTreeLineSubset" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#consecutiveliteralappends" priority="3">
StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\twod\Line.java">
<violation beginline="59" endline="545" begincolumn="14" endcolumn="1" rule="ShortClassName" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.twod" class="Line" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like Line
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\twod\Ray.java">
<violation beginline="31" endline="211" begincolumn="14" endcolumn="1" rule="ShortClassName" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.twod" class="Ray" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like Ray
</violation>
<violation beginline="168" endline="168" begincolumn="29" endcolumn="30" rule="InsufficientStringBufferDeclaration" ruleset="Performance" package="org.apache.commons.geometry.euclidean.twod" class="Ray" method="toString" variable="sb" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#insufficientstringbufferdeclaration" priority="3">
StringBuilder has been initialized with size 16, but has at least 27 characters appended.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\twod\RegionBSPTree2D.java">
<violation beginline="131" endline="145" begincolumn="13" endcolumn="5" rule="LinguisticNaming" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.twod" class="RegionBSPTree2D" method="toConvexRecursive" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The transform method 'toConvexRecursive' should not return void linguistically
</violation>
<violation beginline="265" endline="265" begincolumn="25" endcolumn="28" rule="NullAssignment" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.twod" class="RegionBSPTree2D" method="invalidate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
<violation beginline="271" endline="271" begincolumn="16" endcolumn="37" rule="AccessorClassGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.twod" class="RegionBSPTree2D" method="createNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessorclassgeneration" priority="3">
Avoid instantiation through private constructors from outside of the constructors class.
</violation>
<violation beginline="317" endline="317" begincolumn="16" endcolumn="47" rule="AccessorClassGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.twod" class="RegionBSPTree2D" method="partitionedRegionBuilder" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessorclassgeneration" priority="3">
Avoid instantiation through private constructors from outside of the constructors class.
</violation>
<violation beginline="341" endline="341" begincolumn="20" endcolumn="55" rule="AssignmentInOperand" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.twod" class="RegionBSPTree2D$RegionNode2D" method="getNodeRegion" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#assignmentinoperand" priority="3">
Avoid assignments in operands
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\twod\ReverseRay.java">
<violation beginline="163" endline="163" begincolumn="29" endcolumn="30" rule="InsufficientStringBufferDeclaration" ruleset="Performance" package="org.apache.commons.geometry.euclidean.twod" class="ReverseRay" method="toString" variable="sb" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#insufficientstringbufferdeclaration" priority="3">
StringBuilder has been initialized with size 16, but has at least 25 characters appended.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\twod\Segment.java">
<violation beginline="164" endline="164" begincolumn="29" endcolumn="30" rule="InsufficientStringBufferDeclaration" ruleset="Performance" package="org.apache.commons.geometry.euclidean.twod" class="Segment" method="toString" variable="sb" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#insufficientstringbufferdeclaration" priority="3">
StringBuilder has been initialized with size 16, but has at least 26 characters appended.
</violation>
<violation beginline="184" endline="184" begincolumn="15" endcolumn="35" rule="PrematureDeclaration" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.twod" class="Segment" method="splitOnIntersection" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#prematuredeclaration" priority="3">
Avoid declaring a variable if it is unreferenced before a possible exit point.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\twod\Vector2D.java">
<violation beginline="17" endline="817" begincolumn="1" endcolumn="3" rule="ExcessivePublicCount" ruleset="Design" package="org.apache.commons.geometry.euclidean.twod" class="Vector2D" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#excessivepubliccount" priority="3">
This class has a bunch of public methods and attributes
</violation>
<violation beginline="219" endline="219" begincolumn="16" endcolumn="39" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.twod" class="Vector2D" method="normalizeOrNull" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="448" endline="448" begincolumn="25" endcolumn="25" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.twod" class="Vector2D" method="of" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="596" endline="743" begincolumn="25" endcolumn="5" rule="ShortClassName" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.twod" class="Vector2D$Unit" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like Unit
</violation>
<violation beginline="751" endline="816" begincolumn="25" endcolumn="5" rule="ShortClassName" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.twod" class="Vector2D$Sum" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like Sum
</violation>
<violation beginline="761" endline="761" begincolumn="64" endcolumn="72" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.twod" class="Vector2D$Sum" method="Sum" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="762" endline="762" begincolumn="64" endcolumn="72" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.twod" class="Vector2D$Sum" method="Sum" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="768" endline="768" begincolumn="22" endcolumn="26" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.twod" class="Vector2D$Sum" method="add" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="769" endline="769" begincolumn="22" endcolumn="26" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.twod" class="Vector2D$Sum" method="add" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="776" endline="776" begincolumn="36" endcolumn="40" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.twod" class="Vector2D$Sum" method="addScaled" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
<violation beginline="777" endline="777" begincolumn="36" endcolumn="40" rule="AccessorMethodGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.twod" class="Vector2D$Sum" method="addScaled" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessormethodgeneration" priority="3">
Avoid autogenerated methods to access private fields and methods of inner / outer classes
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\twod\hull\ConvexHull2D.java">
<violation beginline="102" endline="102" begincolumn="31" endcolumn="31" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.twod.hull" class="ConvexHull2D" method="buildHullPath" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="188" endline="188" begincolumn="40" endcolumn="40" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.twod.hull" class="ConvexHull2D$Builder" method="append" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="225" endline="225" begincolumn="37" endcolumn="37" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.twod.hull" class="ConvexHull2D$Builder" method="build" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="294" endline="333" begincolumn="17" endcolumn="9" rule="CyclomaticComplexity" ruleset="Design" package="org.apache.commons.geometry.euclidean.twod.hull" class="ConvexHull2D$Builder" method="insideQuadrilateral" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'insideQuadrilateral(Vector2D)' has a cyclomatic complexity of 10.
</violation>
<violation beginline="325" endline="325" begincolumn="17" endcolumn="67" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.twod.hull" class="ConvexHull2D$Builder" method="insideQuadrilateral" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'signedArea' could be declared final
</violation>
<violation beginline="431" endline="431" begincolumn="24" endcolumn="24" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.twod.hull" class="ConvexHull2D$Builder" method="isConvex" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="438" endline="438" begincolumn="13" endcolumn="38" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.twod.hull" class="ConvexHull2D$Builder" method="isConvex" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'first' could be declared final
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\twod\path\AbstractLinePathConnector.java">
<violation beginline="259" endline="267" begincolumn="21" endcolumn="21" rule="AvoidDeeplyNestedIfStmts" ruleset="Design" package="org.apache.commons.geometry.euclidean.twod.path" class="AbstractLinePathConnector$ConnectableLineSubset" method="compareTo" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#avoiddeeplynestedifstmts" priority="3">
Deeply nested if..then statements are hard to read
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\twod\path\LinePath.java">
<violation beginline="47" endline="47" begincolumn="26" endcolumn="80" rule="AvoidFieldNameMatchingMethodName" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.twod.path" class="LinePath" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#avoidfieldnamematchingmethodname" priority="3">
Field EMPTY has the same name as a method
</violation>
<violation beginline="267" endline="267" begincolumn="16" endcolumn="49" rule="AccessorClassGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.twod.path" class="LinePath" method="simplify" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessorclassgeneration" priority="3">
Avoid instantiation through private constructors from outside of the constructors class.
</violation>
<violation beginline="454" endline="454" begincolumn="16" endcolumn="37" rule="AccessorClassGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.twod.path" class="LinePath" method="builder" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessorclassgeneration" priority="3">
Avoid instantiation through private constructors from outside of the constructors class.
</violation>
<violation beginline="497" endline="501" begincolumn="16" endcolumn="9" rule="LinguisticNaming" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.twod.path" class="LinePath$Builder" method="setPrecision" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The setter 'setPrecision' should not return any type except void linguistically
</violation>
<violation beginline="693" endline="732" begincolumn="16" endcolumn="9" rule="CyclomaticComplexity" ruleset="Design" package="org.apache.commons.geometry.euclidean.twod.path" class="LinePath$Builder" method="build" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'build(boolean)' has a cyclomatic complexity of 10.
</violation>
<violation beginline="725" endline="725" begincolumn="24" endcolumn="27" rule="NullAssignment" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.twod.path" class="LinePath$Builder" method="build" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
<violation beginline="726" endline="726" begincolumn="25" endcolumn="28" rule="NullAssignment" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.twod.path" class="LinePath$Builder" method="build" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\twod\rotation\Rotation2D.java">
<violation beginline="30" endline="30" begincolumn="26" endcolumn="65" rule="AvoidFieldNameMatchingMethodName" ruleset="Error Prone" package="org.apache.commons.geometry.euclidean.twod.rotation" class="Rotation2D" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#avoidfieldnamematchingmethodname" priority="3">
Field IDENTITY has the same name as a method
</violation>
</file>
<file name="C:\Users\ULUGBEK\IdeaProjects\commons-geometry\commons-geometry-euclidean\src\main\java\org\apache\commons\geometry\euclidean\twod\shape\Parallelogram.java">
<violation beginline="161" endline="161" begincolumn="16" endcolumn="37" rule="AccessorClassGeneration" ruleset="Best Practices" package="org.apache.commons.geometry.euclidean.twod.shape" class="Parallelogram" method="builder" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#accessorclassgeneration" priority="3">
Avoid instantiation through private constructors from outside of the constructors class.
</violation>
<violation beginline="196" endline="199" begincolumn="16" endcolumn="9" rule="LinguisticNaming" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.twod.shape" class="Parallelogram$Builder" method="setPosition" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The setter 'setPosition' should not return any type except void linguistically
</violation>
<violation beginline="207" endline="210" begincolumn="16" endcolumn="9" rule="LinguisticNaming" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.twod.shape" class="Parallelogram$Builder" method="setScale" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The setter 'setScale' should not return any type except void linguistically
</violation>
<violation beginline="219" endline="221" begincolumn="16" endcolumn="9" rule="LinguisticNaming" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.twod.shape" class="Parallelogram$Builder" method="setScale" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The setter 'setScale' should not return any type except void linguistically
</violation>
<violation beginline="228" endline="230" begincolumn="16" endcolumn="9" rule="LinguisticNaming" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.twod.shape" class="Parallelogram$Builder" method="setScale" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The setter 'setScale' should not return any type except void linguistically
</violation>
<violation beginline="236" endline="239" begincolumn="16" endcolumn="9" rule="LinguisticNaming" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.twod.shape" class="Parallelogram$Builder" method="setRotation" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The setter 'setRotation' should not return any type except void linguistically
</violation>
<violation beginline="248" endline="251" begincolumn="16" endcolumn="9" rule="LinguisticNaming" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.twod.shape" class="Parallelogram$Builder" method="setXDirection" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The setter 'setXDirection' should not return any type except void linguistically
</violation>
<violation beginline="260" endline="263" begincolumn="16" endcolumn="9" rule="LinguisticNaming" ruleset="Code Style" package="org.apache.commons.geometry.euclidean.twod.shape" class="Parallelogram$Builder" method="setYDirection" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The setter 'setYDirection' should not return any type except void linguistically
</violation>
</file>
</pmd>
