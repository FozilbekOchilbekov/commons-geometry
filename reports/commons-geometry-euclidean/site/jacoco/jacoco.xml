<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Apache Commons Geometry Euclidean"><sessioninfo id="DESKTOP-LP5B6O2-62035c1f" start="1720876827676" dump="1720877054202"/><package name="org/apache/commons/geometry/euclidean/threed"><class name="org/apache/commons/geometry/euclidean/threed/Planes" sourcefilename="Planes.java"><method name="fromPointAndPlaneVectors" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;" line="59"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromNormal" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/Plane;" line="75"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromPointAndNormal" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/Plane;" line="88"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromPoints" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/Plane;" line="108"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromPoints" desc="(Ljava/util/Collection;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/Plane;" line="125"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subsetFromConvexArea" desc="(Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;Lorg/apache/commons/geometry/euclidean/twod/ConvexArea;)Lorg/apache/commons/geometry/euclidean/threed/PlaneConvexSubset;" line="134"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convexPolygonFromVertices" desc="(Ljava/util/Collection;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/ConvexPolygon3D;" line="155"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="triangleFromVertices" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/Triangle3D;" line="182"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexedTriangles" desc="([Lorg/apache/commons/geometry/euclidean/threed/Vector3D;[[ILorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Ljava/util/List;" line="222"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexedTriangles" desc="(Ljava/util/List;[[ILorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Ljava/util/List;" line="240"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexedConvexPolygons" desc="([Lorg/apache/commons/geometry/euclidean/threed/Vector3D;[[ILorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Ljava/util/List;" line="300"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexedConvexPolygons" desc="(Ljava/util/List;[[ILorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Ljava/util/List;" line="318"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extrudeVertexLoop" desc="(Ljava/util/List;Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Ljava/util/List;" line="363"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extrude" desc="(Lorg/apache/commons/geometry/euclidean/twod/path/LinePath;Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Ljava/util/List;" line="382"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extrude" desc="(Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D;Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Ljava/util/List;" line="398"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersection" desc="(Lorg/apache/commons/geometry/euclidean/threed/PlaneSubset;Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="410"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersection" desc="(Lorg/apache/commons/geometry/euclidean/threed/PlaneSubset;Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="424"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validatePlanesEquivalent" desc="(Lorg/apache/commons/geometry/euclidean/threed/Plane;Lorg/apache/commons/geometry/euclidean/threed/Plane;)V" line="435"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subspaceSplit" desc="(Lorg/apache/commons/geometry/euclidean/threed/Plane;Lorg/apache/commons/geometry/euclidean/threed/PlaneSubset;Ljava/util/function/BiFunction;)Lorg/apache/commons/geometry/core/partitioning/Split;" line="451"><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNonIntersectingSplitResult" desc="(Lorg/apache/commons/geometry/euclidean/threed/Plane;Lorg/apache/commons/geometry/euclidean/threed/PlaneSubset;)Lorg/apache/commons/geometry/core/partitioning/Split;" line="492"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromConvexPlanarVertices" desc="(Lorg/apache/commons/geometry/euclidean/threed/Plane;Ljava/util/List;)Lorg/apache/commons/geometry/euclidean/threed/ConvexPolygon3D;" line="515"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convexPolygonToTriangleFan" desc="(Lorg/apache/commons/geometry/euclidean/threed/Plane;Ljava/util/List;)Ljava/util/List;" line="531"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$convexPolygonToTriangleFan$0" desc="(Lorg/apache/commons/geometry/euclidean/threed/Plane;Ljava/util/List;)Lorg/apache/commons/geometry/euclidean/threed/Triangle3D;" line="532"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="599"/><counter type="BRANCH" missed="0" covered="42"/><counter type="LINE" missed="0" covered="97"/><counter type="COMPLEXITY" missed="0" covered="44"/><counter type="METHOD" missed="0" covered="23"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D" sourcefilename="AffineTransformMatrix3D.java"><method name="&lt;init&gt;" desc="(DDDDDDDDDDDD)V" line="103"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="()[D" line="136"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="158"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyX" desc="(DDD)D" line="178"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyY" desc="(DDD)D" line="191"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyZ" desc="(DDD)D" line="204"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyVector" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="224"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyVectorX" desc="(DDD)D" line="237"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyVectorY" desc="(DDD)D" line="250"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyVectorZ" desc="(DDD)D" line="263"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyDirection" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Unit;" line="271"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="determinant" desc="()D" line="277"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linear" desc="()Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="296"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linearTranspose" desc="()Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="314"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="326"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(DDD)Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="337"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scale" desc="(D)Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="350"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scale" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="359"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scale" desc="(DDD)Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="370"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rotate" desc="(Lorg/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation;)Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="384"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rotate" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation;)Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="397"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;)Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="412"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="premultiply" desc="(Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;)Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="427"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inverse" desc="()Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="440"><counter type="INSTRUCTION" missed="0" covered="216"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="490"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="511"><counter type="INSTRUCTION" missed="0" covered="89"/><counter type="BRANCH" missed="0" covered="28"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="539"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyVector" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/core/internal/DoubleFunction3N;)Ljava/lang/Object;" line="584"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([D)Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="601"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/util/function/UnaryOperator;)Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="620"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromColumnVectors" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="650"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromColumnVectors" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="666"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="identity" desc="()Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="678"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTranslation" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="686"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTranslation" desc="(DDD)Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="696"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createScale" desc="(D)Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="708"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createScale" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="716"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createScale" desc="(DDD)Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="726"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createRotation" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation;)Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="741"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;)Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="755"><counter type="INSTRUCTION" missed="0" covered="193"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="1294"/><counter type="BRANCH" missed="0" covered="32"/><counter type="LINE" missed="0" covered="163"/><counter type="COMPLEXITY" missed="0" covered="57"/><counter type="METHOD" missed="0" covered="41"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/Vector3D" sourcefilename="Vector3D.java"><method name="&lt;init&gt;" desc="(DDD)V" line="89"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getX" desc="()D" line="99"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getY" desc="()D" line="106"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getZ" desc="()D" line="113"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="()[D" line="120"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDimension" desc="()I" line="126"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNaN" desc="()Z" line="132"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInfinite" desc="()Z" line="138"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFinite" desc="()Z" line="144"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getZero" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="150"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vectorTo" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="156"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="directionTo" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Unit;" line="162"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lerp" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;D)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="168"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="norm" desc="()D" line="176"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normSq" desc="()D" line="182"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withNorm" desc="(D)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="188"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="200"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(DLorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="210"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="220"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(DLorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="230"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negate" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="240"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalize" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Unit;" line="246"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalizeOrNull" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Unit;" line="252"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(D)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="258"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)D" line="264"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distanceSq" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)D" line="274"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dot" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)D" line="291"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="angle" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)D" line="306"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="project" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="326"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reject" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="332"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orthogonal" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Unit;" line="353"><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orthogonal" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Unit;" line="370"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cross" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="378"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Ljava/util/function/UnaryOperator;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="389"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eq" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Z" line="395"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="408"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="435"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="454"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComponent" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;ZLorg/apache/commons/geometry/core/internal/DoubleFunction3N;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="473"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(DDD)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="503"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([D)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="512"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/lang/String;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="525"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="max" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;[Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="534"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="max" desc="(Ljava/lang/Iterable;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="543"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMax" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Ljava/util/Iterator;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="557"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="min" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;[Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="579"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="min" desc="(Ljava/lang/Iterable;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="588"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMin" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Ljava/util/Iterator;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="602"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="centroid" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;[Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="625"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="centroid" desc="(Ljava/lang/Iterable;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="635"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeCentroid" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Ljava/util/Iterator;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="649"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)I" line="55"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="960"/><counter type="BRANCH" missed="0" covered="78"/><counter type="LINE" missed="0" covered="146"/><counter type="COMPLEXITY" missed="0" covered="92"/><counter type="METHOD" missed="0" covered="53"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/ConvexPolygon3D" sourcefilename="ConvexPolygon3D.java"/><class name="org/apache/commons/geometry/euclidean/threed/AbstractPlaneSubset" sourcefilename="AbstractPlaneSubset.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHyperplane" desc="()Lorg/apache/commons/geometry/euclidean/threed/Plane;" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersection" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="35"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersection" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$RegionNode3D" sourcefilename="RegionBSPTree3D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/core/partitioning/bsp/AbstractBSPTree;)V" line="242"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeRegion" desc="()Lorg/apache/commons/geometry/euclidean/threed/ConvexVolume;" line="251"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSelf" desc="()Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$RegionNode3D;" line="270"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/Vector3D$Sum" sourcefilename="Vector3D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)V" line="840"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Sum;" line="849"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addScaled" desc="(DLorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Sum;" line="858"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="867"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Sum;" line="877"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Sum;" line="885"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;[Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Sum;" line="894"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="109"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/BoundarySourceBoundsBuilder3D" sourcefilename="BoundarySourceBoundsBuilder3D.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBounds" desc="(Lorg/apache/commons/geometry/euclidean/threed/BoundarySource3D;)Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;" line="36"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/Planes$PlaneBuilder" sourcefilename="Planes.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="578"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/apache/commons/geometry/euclidean/threed/Plane;" line="588"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildForConvexPolygon" desc="(Ljava/util/List;)Lorg/apache/commons/geometry/euclidean/threed/Plane;" line="605"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processPoint" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)V" line="617"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processCrossProduct" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)V" line="648"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createPlane" desc="()Lorg/apache/commons/geometry/euclidean/threed/Plane;" line="678"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nonPlanar" desc="()Ljava/lang/IllegalArgumentException;" line="698"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nonConvex" desc="()Ljava/lang/IllegalArgumentException;" line="706"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="219"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="0" covered="21"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/SphericalCoordinates" sourcefilename="SphericalCoordinates.java"><method name="&lt;init&gt;" desc="(DDD)V" line="80"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRadius" desc="()D" line="101"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAzimuth" desc="()D" line="109"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPolar" desc="()D" line="117"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDimension" desc="()I" line="123"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNaN" desc="()Z" line="129"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInfinite" desc="()Z" line="135"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFinite" desc="()Z" line="141"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toVector" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="149"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="159"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="187"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="206"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(DDD)Lorg/apache/commons/geometry/euclidean/threed/SphericalCoordinates;" line="221"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromCartesian" desc="(DDD)Lorg/apache/commons/geometry/euclidean/threed/SphericalCoordinates;" line="231"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromCartesian" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/SphericalCoordinates;" line="245"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toCartesian" desc="(DDD)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="256"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/lang/String;)Lorg/apache/commons/geometry/euclidean/threed/SphericalCoordinates;" line="273"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalizeAzimuth" desc="(D)D" line="283"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalizePolar" desc="(D)D" line="297"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="262"/><counter type="BRANCH" missed="0" covered="40"/><counter type="LINE" missed="0" covered="52"/><counter type="COMPLEXITY" missed="0" covered="39"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/ConvexVolume" sourcefilename="ConvexVolume.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="boundaryStream" desc="()Ljava/util/stream/Stream;" line="50"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()D" line="56"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCentroid" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="80"><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Lorg/apache/commons/geometry/core/partitioning/Hyperplane;)Lorg/apache/commons/geometry/core/partitioning/Split;" line="123"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTree" desc="()Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D;" line="129"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trim" desc="(Lorg/apache/commons/geometry/core/partitioning/HyperplaneConvexSubset;)Lorg/apache/commons/geometry/euclidean/threed/PlaneConvexSubset;" line="135"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/threed/ConvexVolume;" line="143"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="full" desc="()Lorg/apache/commons/geometry/euclidean/threed/ConvexVolume;" line="150"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromBounds" desc="([Lorg/apache/commons/geometry/euclidean/threed/Plane;)Lorg/apache/commons/geometry/euclidean/threed/ConvexVolume;" line="165"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromBounds" desc="(Ljava/lang/Iterable;)Lorg/apache/commons/geometry/euclidean/threed/ConvexVolume;" line="180"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="203"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="0" covered="19"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$BoundaryProjector3D" sourcefilename="RegionBSPTree3D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)V" line="446"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="disambiguateClosestPoint" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="453"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/PlaneConvexSubset$Embedded" sourcefilename="PlaneConvexSubset.java"/><class name="org/apache/commons/geometry/euclidean/threed/EmbeddingPlane$SubspaceTransform" sourcefilename="EmbeddingPlane.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;)V" line="313"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPlane" desc="()Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;" line="322"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTransform" desc="()Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="330"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/Triangle3D" sourcefilename="Triangle3D.java"><method name="toTriangles" desc="()Ljava/util/List;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/Planes$PlaneRegionExtruder" sourcefilename="Planes.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="735"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extrude" desc="(Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D;)Ljava/util/List;" line="759"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEnds" desc="(Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D;Ljava/util/List;)V" line="774"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSides" desc="(Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D;Ljava/util/List;)V" line="805"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extrudeSideFinite" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/ConvexPolygon3D;" line="825"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extrudeSideInfinite" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Lorg/apache/commons/geometry/euclidean/threed/PlaneConvexSubset;" line="840"><counter type="INSTRUCTION" missed="0" covered="166"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="401"/><counter type="BRANCH" missed="0" covered="30"/><counter type="LINE" missed="0" covered="73"/><counter type="COMPLEXITY" missed="0" covered="21"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$RegionSizePropertiesVisitor" sourcefilename="RegionBSPTree3D.java"><method name="visit" desc="(Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$RegionNode3D;)Lorg/apache/commons/geometry/core/partitioning/bsp/BSPTreeVisitor$Result;" line="489"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRegionSizeProperties" desc="()Lorg/apache/commons/geometry/core/partitioning/bsp/AbstractRegionBSPTree$RegionSizeProperties;" line="508"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addBoundaryContribution" desc="(Lorg/apache/commons/geometry/core/partitioning/HyperplaneSubset;Z)V" line="536"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="152"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/BoundaryList3D" sourcefilename="BoundaryList3D.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toList" desc="()Lorg/apache/commons/geometry/euclidean/threed/BoundaryList3D;" line="45"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$PartitionedRegionBuilder3D" sourcefilename="RegionBSPTree3D.java"><method name="&lt;init&gt;" desc="()V" line="313"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertPartition" desc="(Lorg/apache/commons/geometry/euclidean/threed/Plane;)Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$PartitionedRegionBuilder3D;" line="322"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertPartition" desc="(Lorg/apache/commons/geometry/euclidean/threed/PlaneConvexSubset;)Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$PartitionedRegionBuilder3D;" line="331"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertAxisAlignedPartitions" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$PartitionedRegionBuilder3D;" line="348"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertAxisAlignedGrid" desc="(Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;ILorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$PartitionedRegionBuilder3D;" line="373"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertAxisAlignedGridRecursive" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;ILorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="386"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertBoundary" desc="(Lorg/apache/commons/geometry/euclidean/threed/PlaneConvexSubset;)Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$PartitionedRegionBuilder3D;" line="402"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertBoundaries" desc="(Ljava/lang/Iterable;)Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$PartitionedRegionBuilder3D;" line="412"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertBoundaries" desc="(Lorg/apache/commons/geometry/euclidean/threed/BoundarySource3D;)Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$PartitionedRegionBuilder3D;" line="424"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D;" line="435"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$insertBoundaries$0" desc="(Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$PartitionedRegionBuilder3D;Lorg/apache/commons/geometry/core/partitioning/HyperplaneConvexSubset;)V" line="425"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="116"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/Bounds3D" sourcefilename="Bounds3D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSize" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Z" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Z" line="64"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Z" line="79"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersects" desc="(Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;)Z" line="94"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersection" desc="(Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;)Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;" line="108"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersects" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)Z" line="140"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersects" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;)Z" line="151"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersection" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)Lorg/apache/commons/geometry/euclidean/threed/line/Segment3D;" line="164"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersection" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;)Lorg/apache/commons/geometry/euclidean/threed/line/Segment3D;" line="177"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecast" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;)Ljava/util/List;" line="183"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecastFirst" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;)Lorg/apache/commons/geometry/euclidean/threed/line/LinecastPoint3D;" line="189"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toRegion" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/shape/Parallelepiped;" line="199"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="205"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="211"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;[Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;" line="229"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/lang/Iterable;)Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;" line="242"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lorg/apache/commons/geometry/euclidean/threed/Bounds3D$Builder;" line="253"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="384"/><counter type="BRANCH" missed="0" covered="52"/><counter type="LINE" missed="0" covered="67"/><counter type="COMPLEXITY" missed="0" covered="44"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/EmbeddingPlane" sourcefilename="EmbeddingPlane.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Unit;Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Unit;Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Unit;DLorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getU" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Unit;" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getV" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Unit;" line="88"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getW" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Unit;" line="103"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEmbedding" desc="()Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;" line="110"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSubspace" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="120"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSpace" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="130"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pointAt" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;D)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="143"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="()Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;" line="163"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;" line="169"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;" line="192"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rotate" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation;)Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;" line="204"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="215"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="221"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="239"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subspaceTransform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane$SubspaceTransform;" line="277"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="365"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="73"/><counter type="COMPLEXITY" missed="2" covered="22"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/Bounds3D$Builder" sourcefilename="Bounds3D.java"><method name="&lt;init&gt;" desc="()V" line="261"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Bounds3D$Builder;" line="286"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Ljava/lang/Iterable;)Lorg/apache/commons/geometry/euclidean/threed/Bounds3D$Builder;" line="306"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;)Lorg/apache/commons/geometry/euclidean/threed/Bounds3D$Builder;" line="318"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasBounds" desc="()Z" line="328"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;" line="344"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="192"/><counter type="BRANCH" missed="3" covered="21"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/Bounds3D$BoundsLinecaster3D" sourcefilename="Bounds3D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;)V" line="374"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSegment" desc="(DD)Lorg/apache/commons/geometry/euclidean/threed/line/Segment3D;" line="384"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createBoundaryIntersection" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/line/LinecastPoint3D;" line="390"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addBoundaryIntersections" desc="(DLjava/util/List;)V" line="396"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeNearFar" desc="()Z" line="425"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBoundaryIntersectionComparator" desc="()Ljava/util/Comparator;" line="433"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLineDir" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="439"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLineOrigin" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="445"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceStart" desc="()D" line="451"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceEnd" desc="()D" line="457"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/RegionBSPTree3D" sourcefilename="RegionBSPTree3D.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Z)V" line="55"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="()Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D;" line="63"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="boundaries" desc="()Ljava/lang/Iterable;" line="72"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="boundaryStream" desc="()Ljava/util/stream/Stream;" line="78"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBoundaries" desc="()Ljava/util/List;" line="84"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toConvex" desc="()Ljava/util/List;" line="94"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toConvexRecursive" desc="(Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$RegionNode3D;Lorg/apache/commons/geometry/euclidean/threed/ConvexVolume;Ljava/util/List;)V" line="111"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Lorg/apache/commons/geometry/core/partitioning/Hyperplane;)Lorg/apache/commons/geometry/core/partitioning/Split;" line="128"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="project" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="136"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTree" desc="()Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D;" line="146"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecast" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;)Ljava/util/List;" line="152"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecastFirst" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;)Lorg/apache/commons/geometry/euclidean/threed/line/LinecastPoint3D;" line="161"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeRegionSizeProperties" desc="()Lorg/apache/commons/geometry/core/partitioning/bsp/AbstractRegionBSPTree$RegionSizeProperties;" line="171"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createNode" desc="()Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$RegionNode3D;" line="186"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="full" desc="()Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D;" line="193"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="empty" desc="()Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D;" line="200"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/lang/Iterable;)Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D;" line="210"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/lang/Iterable;Z)Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D;" line="221"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="partitionedRegionBuilder" desc="()Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$PartitionedRegionBuilder3D;" line="232"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="193"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="0" covered="24"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/BoundarySource3D" sourcefilename="BoundarySource3D.java"><method name="toList" desc="()Lorg/apache/commons/geometry/euclidean/threed/BoundaryList3D;" line="41"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTree" desc="()Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D;" line="56"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTriangleMesh" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/mesh/TriangleMesh;" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="triangleStream" desc="()Ljava/util/stream/Stream;" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecast" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;)Ljava/util/List;" line="85"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecastFirst" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;)Lorg/apache/commons/geometry/euclidean/threed/line/LinecastPoint3D;" line="91"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBounds" desc="()Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;" line="100"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([Lorg/apache/commons/geometry/euclidean/threed/PlaneConvexSubset;)Lorg/apache/commons/geometry/euclidean/threed/BoundarySource3D;" line="108"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/util/Collection;)Lorg/apache/commons/geometry/euclidean/threed/BoundarySource3D;" line="117"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$triangleStream$0" desc="(Lorg/apache/commons/geometry/euclidean/threed/PlaneConvexSubset;)Ljava/util/stream/Stream;" line="79"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/VertexListConvexPolygon3D" sourcefilename="VertexListConvexPolygon3D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/Plane;Ljava/util/List;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertices" desc="()Ljava/util/List;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTriangles" desc="()Ljava/util/List;" line="63"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/threed/VertexListConvexPolygon3D;" line="69"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="()Lorg/apache/commons/geometry/euclidean/threed/VertexListConvexPolygon3D;" line="80"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/Plane" sourcefilename="Plane.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Unit;DLorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOrigin" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="73"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOriginOffset" desc="()D" line="80"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNormal" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Unit;" line="87"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEmbedding" desc="()Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;" line="95"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)D" line="104"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)D" line="114"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="(Lorg/apache/commons/geometry/euclidean/threed/Plane;)D" line="127"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Z" line="139"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)Z" line="147"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lorg/apache/commons/geometry/euclidean/threed/Plane;)Z" line="156"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="project" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="166"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="project" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;" line="174"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="span" desc="()Lorg/apache/commons/geometry/euclidean/threed/PlaneConvexSubset;" line="187"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isParallel" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)Z" line="195"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isParallel" desc="(Lorg/apache/commons/geometry/euclidean/threed/Plane;)Z" line="205"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="similarOrientation" desc="(Lorg/apache/commons/geometry/core/partitioning/Hyperplane;)Z" line="211"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersection" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="220"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersection" desc="(Lorg/apache/commons/geometry/euclidean/threed/Plane;)Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;" line="248"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="()Lorg/apache/commons/geometry/euclidean/threed/Plane;" line="264"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/threed/Plane;" line="312"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Plane;" line="331"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rotate" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation;)Lorg/apache/commons/geometry/euclidean/threed/Plane;" line="342"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eq" desc="(Lorg/apache/commons/geometry/euclidean/threed/Plane;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Z" line="361"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="368"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="374"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="390"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersection" desc="(Lorg/apache/commons/geometry/euclidean/threed/Plane;Lorg/apache/commons/geometry/euclidean/threed/Plane;Lorg/apache/commons/geometry/euclidean/threed/Plane;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="411"><counter type="INSTRUCTION" missed="0" covered="172"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="652"/><counter type="BRANCH" missed="1" covered="41"/><counter type="LINE" missed="0" covered="104"/><counter type="COMPLEXITY" missed="1" covered="48"/><counter type="METHOD" missed="0" covered="28"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/EmbeddedAreaPlaneConvexSubset" sourcefilename="EmbeddedAreaPlaneConvexSubset.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;Lorg/apache/commons/geometry/euclidean/twod/ConvexArea;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEmbedded" desc="()Lorg/apache/commons/geometry/euclidean/threed/PlaneConvexSubset$Embedded;" line="51"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceRegion" desc="()Lorg/apache/commons/geometry/euclidean/twod/ConvexArea;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertices" desc="()Ljava/util/List;" line="63"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBounds" desc="()Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;" line="69"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTriangles" desc="()Ljava/util/List;" line="75"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/threed/EmbeddedAreaPlaneConvexSubset;" line="88"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="()Lorg/apache/commons/geometry/euclidean/threed/EmbeddedAreaPlaneConvexSubset;" line="97"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Lorg/apache/commons/geometry/core/partitioning/Hyperplane;)Lorg/apache/commons/geometry/core/partitioning/Split;" line="114"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$split$0" desc="(Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;Lorg/apache/commons/geometry/core/partitioning/HyperplaneBoundedRegion;)Lorg/apache/commons/geometry/euclidean/threed/PlaneConvexSubset;" line="115"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="113"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/PlaneSubset" sourcefilename="PlaneSubset.java"/><class name="org/apache/commons/geometry/euclidean/threed/Vector3D$Unit" sourcefilename="Vector3D.java"><method name="&lt;init&gt;" desc="(DDD)V" line="700"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="norm" desc="()D" line="706"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normSq" desc="()D" line="712"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalize" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Unit;" line="718"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalizeOrNull" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Unit;" line="724"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withNorm" desc="(D)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="730"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negate" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Unit;" line="736"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(DDD)Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Unit;" line="748"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Unit;" line="758"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryCreateNormalized" desc="(DDDZ)Lorg/apache/commons/geometry/euclidean/threed/Vector3D$Unit;" line="780"><counter type="INSTRUCTION" missed="0" covered="109"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="666"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="204"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/AbstractEmbeddedRegionPlaneSubset" sourcefilename="AbstractEmbeddedRegionPlaneSubset.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPlane" desc="()Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHyperplane" desc="()Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFull" desc="()Z" line="55"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="61"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()D" line="67"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCentroid" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="73"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSpace" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="83"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSubspace" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classify" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/core/RegionLocation;" line="95"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closest" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="101"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBoundsFromSubspace" desc="(Lorg/apache/commons/geometry/euclidean/twod/BoundarySource2D;)Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;" line="124"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="116"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="33"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/BoundarySourceLinecaster3D" sourcefilename="BoundarySourceLinecaster3D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/BoundarySource3D;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecast" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;)Ljava/util/List;" line="49"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecastFirst" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;)Lorg/apache/commons/geometry/euclidean/threed/line/LinecastPoint3D;" line="61"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIntersectionStream" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;)Ljava/util/stream/Stream;" line="73"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeIntersection" desc="(Lorg/apache/commons/geometry/euclidean/threed/PlaneConvexSubset;Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;)Lorg/apache/commons/geometry/euclidean/threed/line/LinecastPoint3D;" line="87"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getIntersectionStream$0" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;Lorg/apache/commons/geometry/euclidean/threed/PlaneConvexSubset;)Lorg/apache/commons/geometry/euclidean/threed/line/LinecastPoint3D;" line="74"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/PlaneSubset$Embedded" sourcefilename="PlaneSubset.java"/><class name="org/apache/commons/geometry/euclidean/threed/SimpleTriangle3D" sourcefilename="SimpleTriangle3D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/Plane;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPoint1" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPoint2" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="63"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPoint3" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertices" desc="()Ljava/util/List;" line="75"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()D" line="81"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCentroid" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="89"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="()Lorg/apache/commons/geometry/euclidean/threed/SimpleTriangle3D;" line="95"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/threed/SimpleTriangle3D;" line="103"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="122"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/PlaneConvexSubset" sourcefilename="PlaneConvexSubset.java"><method name="toConvex" desc="()Ljava/util/List;" line="71"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/EmbeddedTreePlaneSubset" sourcefilename="EmbeddedTreePlaneSubset.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;Z)V" line="56"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEmbedded" desc="()Lorg/apache/commons/geometry/euclidean/threed/PlaneSubset$Embedded;" line="72"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceRegion" desc="()Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D;" line="78"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toConvex" desc="()Ljava/util/List;" line="84"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTriangles" desc="()Ljava/util/List;" line="98"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBounds" desc="()Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;" line="118"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Lorg/apache/commons/geometry/core/partitioning/Hyperplane;)Lorg/apache/commons/geometry/core/partitioning/Split;" line="133"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/threed/EmbeddedTreePlaneSubset;" line="140"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/apache/commons/geometry/euclidean/threed/PlaneConvexSubset;)V" line="156"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/apache/commons/geometry/euclidean/threed/EmbeddedTreePlaneSubset;)V" line="176"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEmbeddedRegionRotation" desc="(Lorg/apache/commons/geometry/euclidean/threed/PlaneSubset$Embedded;)Lorg/apache/commons/geometry/euclidean/twod/rotation/Rotation2D;" line="203"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$split$0" desc="(Lorg/apache/commons/geometry/euclidean/threed/EmbeddingPlane;Lorg/apache/commons/geometry/core/partitioning/HyperplaneBoundedRegion;)Lorg/apache/commons/geometry/euclidean/threed/EmbeddedTreePlaneSubset;" line="134"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="239"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="60"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/AbstractConvexPolygon3D" sourcefilename="AbstractConvexPolygon3D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/Plane;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPlane" desc="()Lorg/apache/commons/geometry/euclidean/threed/Plane;" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFull" desc="()Z" line="59"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="68"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()D" line="75"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCentroid" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="99"><counter type="INSTRUCTION" missed="0" covered="117"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBounds" desc="()Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;" line="155"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classify" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/core/RegionLocation;" line="161"><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closest" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="216"><counter type="INSTRUCTION" missed="0" covered="118"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEmbedded" desc="()Lorg/apache/commons/geometry/euclidean/threed/PlaneConvexSubset$Embedded;" line="286"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Lorg/apache/commons/geometry/core/partitioning/Hyperplane;)Lorg/apache/commons/geometry/core/partitioning/Split;" line="297"><counter type="INSTRUCTION" missed="0" covered="163"/><counter type="BRANCH" missed="1" covered="25"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildPolygonSplitVertexList" desc="(ILorg/apache/commons/geometry/euclidean/threed/Vector3D;ILorg/apache/commons/geometry/euclidean/threed/Vector3D;Ljava/util/List;)Ljava/util/List;" line="407"><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="441"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="702"/><counter type="BRANCH" missed="1" covered="65"/><counter type="LINE" missed="0" covered="174"/><counter type="COMPLEXITY" missed="1" covered="45"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$LinecastVisitor" sourcefilename="RegionBSPTree3D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;Z)V" line="574"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstResult" desc="()Lorg/apache/commons/geometry/euclidean/threed/line/LinecastPoint3D;" line="594"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResults" desc="()Ljava/util/List;" line="606"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitOrder" desc="(Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$RegionNode3D;)Lorg/apache/commons/geometry/core/partitioning/bsp/BSPTreeVisitor$Order;" line="614"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$RegionNode3D;)Lorg/apache/commons/geometry/core/partitioning/bsp/BSPTreeVisitor$Result;" line="627"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeLinecastPoint" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$RegionNode3D;)Lorg/apache/commons/geometry/euclidean/threed/line/LinecastPoint3D;" line="663"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="168"/><counter type="BRANCH" missed="0" covered="28"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Planes.java"><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="9" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="0"/><line nr="108" mi="0" ci="18" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="2"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="8" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="2"/><line nr="162" mi="0" ci="7" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="2"/><line nr="166" mi="0" ci="17" mb="0" cb="0"/><line nr="168" mi="0" ci="6" mb="0" cb="0"/><line nr="182" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="8" mb="0" cb="0"/><line nr="222" mi="0" ci="6" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="7" mb="0" cb="2"/><line nr="245" mi="0" ci="4" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="2"/><line nr="247" mi="0" ci="11" mb="0" cb="0"/><line nr="249" mi="0" ci="13" mb="0" cb="0"/><line nr="252" mi="0" ci="8" mb="0" cb="0"/><line nr="253" mi="0" ci="6" mb="0" cb="0"/><line nr="254" mi="0" ci="6" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="0" ci="2" mb="0" cb="0"/><line nr="300" mi="0" ci="6" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="0"/><line nr="319" mi="0" ci="5" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="323" mi="0" ci="7" mb="0" cb="2"/><line nr="324" mi="0" ci="4" mb="0" cb="0"/><line nr="325" mi="0" ci="4" mb="0" cb="2"/><line nr="326" mi="0" ci="11" mb="0" cb="0"/><line nr="328" mi="0" ci="13" mb="0" cb="0"/><line nr="331" mi="0" ci="16" mb="0" cb="2"/><line nr="332" mi="0" ci="7" mb="0" cb="0"/><line nr="335" mi="0" ci="6" mb="0" cb="0"/><line nr="340" mi="0" ci="2" mb="0" cb="0"/><line nr="343" mi="0" ci="2" mb="0" cb="0"/><line nr="363" mi="0" ci="4" mb="0" cb="0"/><line nr="364" mi="0" ci="6" mb="0" cb="0"/><line nr="382" mi="0" ci="7" mb="0" cb="0"/><line nr="398" mi="0" ci="9" mb="0" cb="0"/><line nr="410" mi="0" ci="5" mb="0" cb="0"/><line nr="411" mi="0" ci="10" mb="0" cb="4"/><line nr="424" mi="0" ci="5" mb="0" cb="0"/><line nr="425" mi="0" ci="10" mb="0" cb="4"/><line nr="435" mi="0" ci="6" mb="0" cb="2"/><line nr="436" mi="0" ci="18" mb="0" cb="0"/><line nr="439" mi="0" ci="1" mb="0" cb="0"/><line nr="451" mi="0" ci="4" mb="0" cb="0"/><line nr="453" mi="0" ci="4" mb="0" cb="0"/><line nr="454" mi="0" ci="2" mb="0" cb="2"/><line nr="455" mi="0" ci="4" mb="0" cb="0"/><line nr="457" mi="0" ci="4" mb="0" cb="0"/><line nr="460" mi="0" ci="3" mb="0" cb="0"/><line nr="461" mi="0" ci="4" mb="0" cb="0"/><line nr="462" mi="0" ci="7" mb="0" cb="0"/><line nr="464" mi="0" ci="6" mb="0" cb="0"/><line nr="466" mi="0" ci="1" mb="0" cb="0"/><line nr="467" mi="0" ci="5" mb="0" cb="0"/><line nr="468" mi="0" ci="3" mb="0" cb="0"/><line nr="470" mi="0" ci="3" mb="0" cb="2"/><line nr="471" mi="0" ci="6" mb="0" cb="0"/><line nr="472" mi="0" ci="3" mb="0" cb="2"/><line nr="473" mi="0" ci="6" mb="0" cb="0"/><line nr="476" mi="0" ci="12" mb="0" cb="2"/><line nr="477" mi="0" ci="12" mb="0" cb="2"/><line nr="479" mi="0" ci="6" mb="0" cb="0"/><line nr="492" mi="0" ci="3" mb="0" cb="0"/><line nr="494" mi="0" ci="4" mb="0" cb="0"/><line nr="495" mi="0" ci="6" mb="0" cb="0"/><line nr="497" mi="0" ci="2" mb="0" cb="2"/><line nr="498" mi="0" ci="6" mb="0" cb="0"/><line nr="499" mi="0" ci="2" mb="0" cb="2"/><line nr="500" mi="0" ci="6" mb="0" cb="0"/><line nr="502" mi="0" ci="6" mb="0" cb="0"/><line nr="515" mi="0" ci="3" mb="0" cb="0"/><line nr="517" mi="0" ci="3" mb="0" cb="2"/><line nr="518" mi="0" ci="17" mb="0" cb="0"/><line nr="521" mi="0" ci="6" mb="0" cb="0"/><line nr="531" mi="0" ci="5" mb="0" cb="0"/><line nr="532" mi="0" ci="17" mb="0" cb="0"/><line nr="578" mi="0" ci="2" mb="0" cb="0"/><line nr="579" mi="0" ci="3" mb="0" cb="0"/><line nr="580" mi="0" ci="3" mb="0" cb="0"/><line nr="581" mi="0" ci="1" mb="0" cb="0"/><line nr="588" mi="0" ci="5" mb="0" cb="2"/><line nr="589" mi="0" ci="3" mb="0" cb="0"/><line nr="592" mi="0" ci="5" mb="0" cb="0"/><line nr="594" mi="0" ci="3" mb="0" cb="0"/><line nr="605" mi="0" ci="3" mb="0" cb="0"/><line nr="606" mi="0" ci="3" mb="0" cb="0"/><line nr="608" mi="0" ci="3" mb="0" cb="0"/><line nr="617" mi="0" ci="3" mb="0" cb="2"/><line nr="618" mi="0" ci="3" mb="0" cb="0"/><line nr="619" mi="0" ci="3" mb="0" cb="0"/><line nr="621" mi="0" ci="3" mb="0" cb="2"/><line nr="622" mi="0" ci="6" mb="0" cb="0"/><line nr="625" mi="0" ci="7" mb="0" cb="2"/><line nr="626" mi="0" ci="5" mb="0" cb="0"/><line nr="628" mi="0" ci="3" mb="0" cb="2"/><line nr="629" mi="0" ci="6" mb="0" cb="0"/><line nr="632" mi="0" ci="3" mb="0" cb="2"/><line nr="633" mi="0" ci="5" mb="0" cb="0"/><line nr="636" mi="0" ci="3" mb="0" cb="0"/><line nr="637" mi="0" ci="3" mb="0" cb="0"/><line nr="639" mi="0" ci="1" mb="0" cb="0"/><line nr="648" mi="0" ci="7" mb="0" cb="0"/><line nr="649" mi="0" ci="7" mb="0" cb="0"/><line nr="650" mi="0" ci="7" mb="0" cb="0"/><line nr="652" mi="0" ci="3" mb="0" cb="0"/><line nr="654" mi="0" ci="5" mb="0" cb="2"/><line nr="656" mi="0" ci="3" mb="0" cb="2"/><line nr="658" mi="0" ci="5" mb="0" cb="0"/><line nr="660" mi="0" ci="7" mb="0" cb="0"/><line nr="664" mi="0" ci="7" mb="0" cb="2"/><line nr="665" mi="0" ci="3" mb="0" cb="0"/><line nr="666" mi="0" ci="7" mb="0" cb="4"/><line nr="667" mi="0" ci="3" mb="0" cb="0"/><line nr="671" mi="0" ci="1" mb="0" cb="0"/><line nr="678" mi="0" ci="3" mb="0" cb="2"/><line nr="679" mi="0" ci="3" mb="0" cb="0"/><line nr="683" mi="0" ci="13" mb="0" cb="2"/><line nr="684" mi="0" ci="5" mb="0" cb="0"/><line nr="688" mi="0" ci="7" mb="0" cb="0"/><line nr="690" mi="0" ci="9" mb="0" cb="0"/><line nr="698" mi="0" ci="13" mb="0" cb="0"/><line nr="706" mi="0" ci="13" mb="0" cb="0"/><line nr="735" mi="0" ci="2" mb="0" cb="0"/><line nr="737" mi="0" ci="3" mb="0" cb="0"/><line nr="740" mi="0" ci="4" mb="0" cb="0"/><line nr="742" mi="0" ci="4" mb="0" cb="2"/><line nr="743" mi="0" ci="16" mb="0" cb="0"/><line nr="748" mi="0" ci="3" mb="0" cb="0"/><line nr="749" mi="0" ci="12" mb="0" cb="2"/><line nr="751" mi="0" ci="3" mb="0" cb="0"/><line nr="752" mi="0" ci="1" mb="0" cb="0"/><line nr="759" mi="0" ci="4" mb="0" cb="0"/><line nr="762" mi="0" ci="4" mb="0" cb="0"/><line nr="763" mi="0" ci="4" mb="0" cb="0"/><line nr="765" mi="0" ci="2" mb="0" cb="0"/><line nr="774" mi="0" ci="3" mb="0" cb="0"/><line nr="776" mi="0" ci="6" mb="0" cb="0"/><line nr="777" mi="0" ci="6" mb="0" cb="0"/><line nr="779" mi="0" ci="4" mb="0" cb="0"/><line nr="782" mi="0" ci="10" mb="0" cb="2"/><line nr="783" mi="0" ci="5" mb="0" cb="0"/><line nr="784" mi="0" ci="3" mb="0" cb="2"/><line nr="785" mi="0" ci="3" mb="0" cb="0"/><line nr="788" mi="0" ci="4" mb="0" cb="0"/><line nr="789" mi="0" ci="7" mb="0" cb="0"/><line nr="790" mi="0" ci="1" mb="0" cb="0"/><line nr="792" mi="0" ci="4" mb="0" cb="0"/><line nr="793" mi="0" ci="4" mb="0" cb="0"/><line nr="794" mi="0" ci="1" mb="0" cb="0"/><line nr="805" mi="0" ci="11" mb="0" cb="2"/><line nr="806" mi="0" ci="11" mb="0" cb="2"/><line nr="807" mi="0" ci="3" mb="0" cb="0"/><line nr="808" mi="0" ci="3" mb="0" cb="0"/><line nr="810" mi="0" ci="4" mb="0" cb="4"/><line nr="811" mi="0" ci="11" mb="0" cb="0"/><line nr="812" mi="0" ci="4" mb="0" cb="0"/><line nr="814" mi="0" ci="4" mb="0" cb="0"/><line nr="815" mi="0" ci="1" mb="0" cb="0"/><line nr="816" mi="0" ci="1" mb="0" cb="0"/><line nr="817" mi="0" ci="1" mb="0" cb="0"/><line nr="825" mi="0" ci="5" mb="0" cb="0"/><line nr="826" mi="0" ci="5" mb="0" cb="0"/><line nr="828" mi="0" ci="3" mb="0" cb="2"/><line nr="829" mi="0" ci="20" mb="0" cb="0"/><line nr="830" mi="0" ci="20" mb="0" cb="0"/><line nr="832" mi="0" ci="5" mb="0" cb="0"/><line nr="840" mi="0" ci="4" mb="0" cb="0"/><line nr="841" mi="0" ci="4" mb="0" cb="0"/><line nr="843" mi="0" ci="5" mb="0" cb="0"/><line nr="844" mi="0" ci="9" mb="0" cb="0"/><line nr="847" mi="0" ci="3" mb="0" cb="2"/><line nr="848" mi="0" ci="9" mb="0" cb="0"/><line nr="850" mi="0" ci="8" mb="0" cb="0"/><line nr="853" mi="0" ci="4" mb="0" cb="0"/><line nr="854" mi="0" ci="8" mb="0" cb="0"/><line nr="856" mi="0" ci="7" mb="0" cb="0"/><line nr="858" mi="0" ci="7" mb="0" cb="0"/><line nr="859" mi="0" ci="2" mb="0" cb="0"/><line nr="862" mi="0" ci="4" mb="0" cb="0"/><line nr="865" mi="0" ci="3" mb="0" cb="2"/><line nr="866" mi="0" ci="8" mb="0" cb="0"/><line nr="867" mi="0" ci="10" mb="0" cb="0"/><line nr="869" mi="0" ci="9" mb="0" cb="0"/><line nr="870" mi="0" ci="8" mb="0" cb="0"/><line nr="874" mi="0" ci="3" mb="0" cb="0"/><line nr="875" mi="0" ci="3" mb="0" cb="0"/><line nr="876" mi="0" ci="2" mb="0" cb="2"/><line nr="877" mi="0" ci="9" mb="0" cb="0"/><line nr="878" mi="0" ci="2" mb="0" cb="0"/><line nr="879" mi="0" ci="9" mb="0" cb="2"/><line nr="881" mi="0" ci="2" mb="0" cb="2"/><line nr="882" mi="0" ci="8" mb="0" cb="0"/><line nr="883" mi="0" ci="2" mb="0" cb="0"/><line nr="884" mi="0" ci="9" mb="0" cb="2"/><line nr="888" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="1219"/><counter type="BRANCH" missed="0" covered="98"/><counter type="LINE" missed="0" covered="216"/><counter type="COMPLEXITY" missed="0" covered="86"/><counter type="METHOD" missed="0" covered="37"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="SimpleTriangle3D.java"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="19" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="16" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="11" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="122"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmbeddedAreaPlaneConvexSubset.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="2"/><line nr="76" mi="0" ci="12" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="8" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="9" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="113"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AffineTransformMatrix3D.java"><line nr="52" mi="0" ci="17" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="63" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="9" mb="0" cb="0"/><line nr="191" mi="0" ci="9" mb="0" cb="0"/><line nr="204" mi="0" ci="9" mb="0" cb="0"/><line nr="224" mi="0" ci="6" mb="0" cb="0"/><line nr="237" mi="0" ci="11" mb="0" cb="0"/><line nr="250" mi="0" ci="11" mb="0" cb="0"/><line nr="263" mi="0" ci="11" mb="0" cb="0"/><line nr="271" mi="0" ci="6" mb="0" cb="0"/><line nr="277" mi="0" ci="20" mb="0" cb="0"/><line nr="296" mi="0" ci="25" mb="0" cb="0"/><line nr="314" mi="0" ci="25" mb="0" cb="0"/><line nr="326" mi="0" ci="9" mb="0" cb="0"/><line nr="337" mi="0" ci="34" mb="0" cb="0"/><line nr="350" mi="0" ci="6" mb="0" cb="0"/><line nr="359" mi="0" ci="9" mb="0" cb="0"/><line nr="370" mi="0" ci="52" mb="0" cb="0"/><line nr="384" mi="0" ci="5" mb="0" cb="0"/><line nr="397" mi="0" ci="6" mb="0" cb="0"/><line nr="412" mi="0" ci="4" mb="0" cb="0"/><line nr="427" mi="0" ci="4" mb="0" cb="0"/><line nr="440" mi="0" ci="4" mb="0" cb="0"/><line nr="443" mi="0" ci="4" mb="0" cb="0"/><line nr="444" mi="0" ci="4" mb="0" cb="0"/><line nr="445" mi="0" ci="4" mb="0" cb="0"/><line nr="450" mi="0" ci="4" mb="0" cb="0"/><line nr="452" mi="0" ci="12" mb="0" cb="0"/><line nr="453" mi="0" ci="13" mb="0" cb="0"/><line nr="454" mi="0" ci="12" mb="0" cb="0"/><line nr="456" mi="0" ci="13" mb="0" cb="0"/><line nr="457" mi="0" ci="12" mb="0" cb="0"/><line nr="458" mi="0" ci="13" mb="0" cb="0"/><line nr="460" mi="0" ci="12" mb="0" cb="0"/><line nr="461" mi="0" ci="13" mb="0" cb="0"/><line nr="462" mi="0" ci="12" mb="0" cb="0"/><line nr="464" mi="0" ci="23" mb="0" cb="0"/><line nr="469" mi="0" ci="22" mb="0" cb="0"/><line nr="474" mi="0" ci="23" mb="0" cb="0"/><line nr="480" mi="0" ci="16" mb="0" cb="0"/><line nr="490" mi="0" ci="2" mb="0" cb="0"/><line nr="491" mi="0" ci="2" mb="0" cb="0"/><line nr="493" mi="0" ci="12" mb="0" cb="0"/><line nr="494" mi="0" ci="8" mb="0" cb="0"/><line nr="495" mi="0" ci="12" mb="0" cb="0"/><line nr="496" mi="0" ci="8" mb="0" cb="0"/><line nr="497" mi="0" ci="12" mb="0" cb="0"/><line nr="498" mi="0" ci="8" mb="0" cb="0"/><line nr="500" mi="0" ci="2" mb="0" cb="0"/><line nr="511" mi="0" ci="3" mb="0" cb="2"/><line nr="512" mi="0" ci="2" mb="0" cb="0"/><line nr="514" mi="0" ci="3" mb="0" cb="2"/><line nr="515" mi="0" ci="2" mb="0" cb="0"/><line nr="518" mi="0" ci="3" mb="0" cb="0"/><line nr="520" mi="0" ci="11" mb="0" cb="2"/><line nr="521" mi="0" ci="6" mb="0" cb="2"/><line nr="522" mi="0" ci="6" mb="0" cb="2"/><line nr="523" mi="0" ci="6" mb="0" cb="2"/><line nr="525" mi="0" ci="6" mb="0" cb="2"/><line nr="526" mi="0" ci="6" mb="0" cb="2"/><line nr="527" mi="0" ci="6" mb="0" cb="2"/><line nr="528" mi="0" ci="6" mb="0" cb="2"/><line nr="530" mi="0" ci="6" mb="0" cb="2"/><line nr="531" mi="0" ci="6" mb="0" cb="2"/><line nr="532" mi="0" ci="6" mb="0" cb="2"/><line nr="533" mi="0" ci="5" mb="0" cb="2"/><line nr="539" mi="0" ci="4" mb="0" cb="0"/><line nr="541" mi="0" ci="5" mb="0" cb="0"/><line nr="543" mi="0" ci="2" mb="0" cb="0"/><line nr="544" mi="0" ci="3" mb="0" cb="0"/><line nr="545" mi="0" ci="2" mb="0" cb="0"/><line nr="546" mi="0" ci="3" mb="0" cb="0"/><line nr="547" mi="0" ci="2" mb="0" cb="0"/><line nr="548" mi="0" ci="3" mb="0" cb="0"/><line nr="549" mi="0" ci="2" mb="0" cb="0"/><line nr="550" mi="0" ci="3" mb="0" cb="0"/><line nr="552" mi="0" ci="2" mb="0" cb="0"/><line nr="553" mi="0" ci="3" mb="0" cb="0"/><line nr="554" mi="0" ci="2" mb="0" cb="0"/><line nr="555" mi="0" ci="3" mb="0" cb="0"/><line nr="556" mi="0" ci="2" mb="0" cb="0"/><line nr="557" mi="0" ci="3" mb="0" cb="0"/><line nr="558" mi="0" ci="2" mb="0" cb="0"/><line nr="559" mi="0" ci="3" mb="0" cb="0"/><line nr="561" mi="0" ci="2" mb="0" cb="0"/><line nr="562" mi="0" ci="3" mb="0" cb="0"/><line nr="563" mi="0" ci="2" mb="0" cb="0"/><line nr="564" mi="0" ci="3" mb="0" cb="0"/><line nr="565" mi="0" ci="2" mb="0" cb="0"/><line nr="566" mi="0" ci="3" mb="0" cb="0"/><line nr="567" mi="0" ci="2" mb="0" cb="0"/><line nr="569" mi="0" ci="2" mb="0" cb="0"/><line nr="571" mi="0" ci="3" mb="0" cb="0"/><line nr="584" mi="0" ci="3" mb="0" cb="0"/><line nr="585" mi="0" ci="3" mb="0" cb="0"/><line nr="586" mi="0" ci="3" mb="0" cb="0"/><line nr="588" mi="0" ci="7" mb="0" cb="0"/><line nr="589" mi="0" ci="5" mb="0" cb="0"/><line nr="590" mi="0" ci="5" mb="0" cb="0"/><line nr="591" mi="0" ci="1" mb="0" cb="0"/><line nr="601" mi="0" ci="4" mb="0" cb="2"/><line nr="602" mi="0" ci="17" mb="0" cb="0"/><line nr="605" mi="0" ci="40" mb="0" cb="0"/><line nr="620" mi="0" ci="5" mb="0" cb="0"/><line nr="621" mi="0" ci="5" mb="0" cb="0"/><line nr="622" mi="0" ci="5" mb="0" cb="0"/><line nr="623" mi="0" ci="5" mb="0" cb="0"/><line nr="625" mi="0" ci="4" mb="0" cb="0"/><line nr="626" mi="0" ci="4" mb="0" cb="0"/><line nr="627" mi="0" ci="4" mb="0" cb="0"/><line nr="629" mi="0" ci="6" mb="0" cb="0"/><line nr="631" mi="0" ci="3" mb="0" cb="0"/><line nr="632" mi="0" ci="3" mb="0" cb="2"/><line nr="633" mi="0" ci="12" mb="0" cb="0"/><line nr="636" mi="0" ci="2" mb="0" cb="0"/><line nr="650" mi="0" ci="6" mb="0" cb="0"/><line nr="666" mi="0" ci="4" mb="0" cb="0"/><line nr="667" mi="0" ci="8" mb="0" cb="0"/><line nr="668" mi="0" ci="8" mb="0" cb="0"/><line nr="669" mi="0" ci="8" mb="0" cb="0"/><line nr="678" mi="0" ci="2" mb="0" cb="0"/><line nr="686" mi="0" ci="8" mb="0" cb="0"/><line nr="696" mi="0" ci="16" mb="0" cb="0"/><line nr="708" mi="0" ci="5" mb="0" cb="0"/><line nr="716" mi="0" ci="8" mb="0" cb="0"/><line nr="726" mi="0" ci="16" mb="0" cb="0"/><line nr="741" mi="0" ci="5" mb="0" cb="0"/><line nr="742" mi="0" ci="2" mb="0" cb="0"/><line nr="743" mi="0" ci="1" mb="0" cb="0"/><line nr="755" mi="0" ci="14" mb="0" cb="0"/><line nr="756" mi="0" ci="14" mb="0" cb="0"/><line nr="757" mi="0" ci="14" mb="0" cb="0"/><line nr="758" mi="0" ci="17" mb="0" cb="0"/><line nr="760" mi="0" ci="14" mb="0" cb="0"/><line nr="761" mi="0" ci="14" mb="0" cb="0"/><line nr="762" mi="0" ci="14" mb="0" cb="0"/><line nr="763" mi="0" ci="17" mb="0" cb="0"/><line nr="765" mi="0" ci="14" mb="0" cb="0"/><line nr="766" mi="0" ci="14" mb="0" cb="0"/><line nr="767" mi="0" ci="14" mb="0" cb="0"/><line nr="768" mi="0" ci="17" mb="0" cb="0"/><line nr="770" mi="0" ci="16" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="1294"/><counter type="BRANCH" missed="0" covered="32"/><counter type="LINE" missed="0" covered="163"/><counter type="COMPLEXITY" missed="0" covered="57"/><counter type="METHOD" missed="0" covered="41"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmbeddingPlane.java"><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="10" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="16" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="10" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="9" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="6" mb="0" cb="0"/><line nr="206" mi="0" ci="6" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="7" mb="0" cb="0"/><line nr="215" mi="0" ci="30" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="2"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="6" mb="0" cb="4"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="8" mb="0" cb="2"/><line nr="230" mi="0" ci="9" mb="0" cb="2"/><line nr="231" mi="0" ci="6" mb="1" cb="1"/><line nr="232" mi="0" ci="3" mb="1" cb="1"/><line nr="233" mi="0" ci="8" mb="0" cb="2"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="240" mi="0" ci="6" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="279" mi="0" ci="5" mb="0" cb="0"/><line nr="280" mi="0" ci="8" mb="0" cb="0"/><line nr="281" mi="0" ci="8" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="4" mb="0" cb="0"/><line nr="290" mi="0" ci="6" mb="0" cb="0"/><line nr="291" mi="0" ci="6" mb="0" cb="0"/><line nr="293" mi="0" ci="3" mb="0" cb="0"/><line nr="294" mi="0" ci="2" mb="0" cb="0"/><line nr="296" mi="0" ci="6" mb="0" cb="0"/><line nr="313" mi="0" ci="2" mb="0" cb="0"/><line nr="314" mi="0" ci="3" mb="0" cb="0"/><line nr="315" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="1" mb="0" cb="0"/><line nr="322" mi="0" ci="3" mb="0" cb="0"/><line nr="330" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="380"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="79"/><counter type="COMPLEXITY" missed="2" covered="25"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Bounds3D.java"><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="2"/><line nr="57" mi="0" ci="5" mb="0" cb="2"/><line nr="58" mi="0" ci="6" mb="0" cb="2"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="13" mb="0" cb="4"/><line nr="72" mi="0" ci="10" mb="0" cb="4"/><line nr="73" mi="0" ci="11" mb="0" cb="4"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="16" mb="0" cb="4"/><line nr="87" mi="0" ci="12" mb="0" cb="4"/><line nr="88" mi="0" ci="12" mb="0" cb="4"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="14" mb="0" cb="4"/><line nr="101" mi="0" ci="12" mb="0" cb="4"/><line nr="102" mi="0" ci="14" mb="0" cb="4"/><line nr="108" mi="0" ci="4" mb="0" cb="2"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="7" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="8" mb="0" cb="0"/><line nr="183" mi="0" ci="7" mb="0" cb="0"/><line nr="189" mi="0" ci="8" mb="0" cb="0"/><line nr="199" mi="0" ci="9" mb="0" cb="0"/><line nr="205" mi="0" ci="14" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="2"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="2"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="9" mb="0" cb="2"/><line nr="220" mi="0" ci="9" mb="0" cb="2"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="276" mi="0" ci="3" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="6" mb="0" cb="0"/><line nr="291" mi="0" ci="6" mb="0" cb="0"/><line nr="292" mi="0" ci="6" mb="0" cb="0"/><line nr="294" mi="0" ci="6" mb="0" cb="0"/><line nr="295" mi="0" ci="6" mb="0" cb="0"/><line nr="296" mi="0" ci="6" mb="0" cb="0"/><line nr="298" mi="0" ci="2" mb="0" cb="0"/><line nr="306" mi="0" ci="10" mb="0" cb="2"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="0" ci="1" mb="0" cb="0"/><line nr="310" mi="0" ci="2" mb="0" cb="0"/><line nr="318" mi="0" ci="6" mb="0" cb="0"/><line nr="319" mi="0" ci="6" mb="0" cb="0"/><line nr="321" mi="0" ci="2" mb="0" cb="0"/><line nr="328" mi="0" ci="7" mb="0" cb="2"/><line nr="329" mi="0" ci="4" mb="0" cb="2"/><line nr="330" mi="0" ci="4" mb="0" cb="2"/><line nr="331" mi="0" ci="4" mb="1" cb="1"/><line nr="332" mi="0" ci="4" mb="0" cb="2"/><line nr="333" mi="0" ci="5" mb="1" cb="1"/><line nr="344" mi="0" ci="8" mb="0" cb="0"/><line nr="345" mi="0" ci="8" mb="0" cb="0"/><line nr="347" mi="0" ci="3" mb="0" cb="2"/><line nr="348" mi="0" ci="11" mb="0" cb="4"/><line nr="349" mi="0" ci="7" mb="1" cb="3"/><line nr="350" mi="0" ci="5" mb="0" cb="0"/><line nr="353" mi="0" ci="16" mb="0" cb="0"/><line nr="356" mi="0" ci="7" mb="0" cb="0"/><line nr="374" mi="0" ci="3" mb="0" cb="0"/><line nr="375" mi="0" ci="6" mb="0" cb="0"/><line nr="377" mi="0" ci="3" mb="0" cb="0"/><line nr="378" mi="0" ci="4" mb="0" cb="0"/><line nr="379" mi="0" ci="1" mb="0" cb="0"/><line nr="384" mi="0" ci="6" mb="0" cb="0"/><line nr="390" mi="0" ci="8" mb="0" cb="0"/><line nr="396" mi="0" ci="6" mb="0" cb="2"/><line nr="397" mi="0" ci="5" mb="0" cb="0"/><line nr="399" mi="0" ci="7" mb="0" cb="0"/><line nr="406" mi="0" ci="7" mb="0" cb="0"/><line nr="413" mi="0" ci="7" mb="0" cb="0"/><line nr="420" mi="0" ci="1" mb="0" cb="0"/><line nr="425" mi="0" ci="7" mb="0" cb="2"/><line nr="426" mi="0" ci="4" mb="0" cb="2"/><line nr="427" mi="0" ci="5" mb="0" cb="2"/><line nr="433" mi="0" ci="2" mb="0" cb="0"/><line nr="439" mi="0" ci="4" mb="0" cb="0"/><line nr="445" mi="0" ci="4" mb="0" cb="0"/><line nr="451" mi="0" ci="4" mb="0" cb="0"/><line nr="457" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="674"/><counter type="BRANCH" missed="3" covered="81"/><counter type="LINE" missed="0" covered="126"/><counter type="COMPLEXITY" missed="3" covered="73"/><counter type="METHOD" missed="0" covered="34"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ConvexPolygon3D.java"/><sourcefile name="ConvexVolume.java"><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="2"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="11" mb="0" cb="2"/><line nr="63" mi="0" ci="3" mb="0" cb="2"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="9" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="11" mb="0" cb="2"/><line nr="87" mi="0" ci="3" mb="0" cb="2"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="0" ci="7" mb="0" cb="0"/><line nr="101" mi="0" ci="7" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="2"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="11" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="7" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="8" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="10" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="203"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="0" covered="19"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RegionBSPTree3D.java"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="8" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="2"/><line nr="113" mi="0" ci="3" mb="0" cb="2"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="9" mb="0" cb="0"/><line nr="121" mi="0" ci="9" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="2"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="2"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="1" mb="0" cb="0"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="6" mb="0" cb="2"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="259" mi="0" ci="11" mb="0" cb="2"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="1" mb="0" cb="0"/><line nr="322" mi="0" ci="5" mb="0" cb="0"/><line nr="331" mi="0" ci="3" mb="0" cb="0"/><line nr="333" mi="0" ci="2" mb="0" cb="0"/><line nr="348" mi="0" ci="7" mb="0" cb="0"/><line nr="349" mi="0" ci="7" mb="0" cb="0"/><line nr="350" mi="0" ci="7" mb="0" cb="0"/><line nr="352" mi="0" ci="2" mb="0" cb="0"/><line nr="373" mi="0" ci="10" mb="0" cb="0"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="2" mb="0" cb="2"/><line nr="387" mi="0" ci="5" mb="0" cb="0"/><line nr="389" mi="0" ci="5" mb="0" cb="0"/><line nr="391" mi="0" ci="4" mb="0" cb="0"/><line nr="392" mi="0" ci="6" mb="0" cb="0"/><line nr="393" mi="0" ci="6" mb="0" cb="0"/><line nr="395" mi="0" ci="1" mb="0" cb="0"/><line nr="402" mi="0" ci="3" mb="0" cb="0"/><line nr="404" mi="0" ci="2" mb="0" cb="0"/><line nr="412" mi="0" ci="10" mb="0" cb="2"/><line nr="413" mi="0" ci="3" mb="0" cb="0"/><line nr="414" mi="0" ci="1" mb="0" cb="0"/><line nr="416" mi="0" ci="2" mb="0" cb="0"/><line nr="424" mi="0" ci="3" mb="0" cb="0"/><line nr="425" mi="0" ci="8" mb="0" cb="0"/><line nr="428" mi="0" ci="2" mb="0" cb="0"/><line nr="435" mi="0" ci="4" mb="0" cb="0"/><line nr="446" mi="0" ci="3" mb="0" cb="0"/><line nr="447" mi="0" ci="1" mb="0" cb="0"/><line nr="453" mi="0" ci="5" mb="0" cb="0"/><line nr="454" mi="0" ci="6" mb="0" cb="2"/><line nr="489" mi="0" ci="3" mb="0" cb="2"/><line nr="490" mi="0" ci="3" mb="0" cb="0"/><line nr="492" mi="0" ci="11" mb="0" cb="2"/><line nr="493" mi="0" ci="4" mb="0" cb="0"/><line nr="494" mi="0" ci="1" mb="0" cb="0"/><line nr="496" mi="0" ci="11" mb="0" cb="2"/><line nr="497" mi="0" ci="4" mb="0" cb="0"/><line nr="498" mi="0" ci="1" mb="0" cb="0"/><line nr="501" mi="0" ci="2" mb="0" cb="0"/><line nr="508" mi="0" ci="2" mb="0" cb="0"/><line nr="509" mi="0" ci="2" mb="0" cb="0"/><line nr="513" mi="0" ci="9" mb="0" cb="4"/><line nr="515" mi="0" ci="5" mb="0" cb="0"/><line nr="520" mi="0" ci="6" mb="0" cb="0"/><line nr="521" mi="0" ci="14" mb="0" cb="0"/><line nr="527" mi="0" ci="6" mb="0" cb="0"/><line nr="536" mi="0" ci="3" mb="0" cb="0"/><line nr="538" mi="0" ci="3" mb="0" cb="0"/><line nr="539" mi="0" ci="3" mb="0" cb="0"/><line nr="540" mi="0" ci="4" mb="0" cb="0"/><line nr="542" mi="0" ci="3" mb="0" cb="2"/><line nr="543" mi="0" ci="4" mb="0" cb="0"/><line nr="544" mi="0" ci="2" mb="1" cb="1"/><line nr="547" mi="0" ci="7" mb="0" cb="0"/><line nr="548" mi="0" ci="2" mb="0" cb="2"/><line nr="549" mi="0" ci="3" mb="0" cb="0"/><line nr="552" mi="0" ci="6" mb="0" cb="0"/><line nr="554" mi="0" ci="9" mb="0" cb="0"/><line nr="555" mi="0" ci="9" mb="0" cb="0"/><line nr="556" mi="0" ci="9" mb="0" cb="0"/><line nr="558" mi="0" ci="1" mb="0" cb="0"/><line nr="574" mi="0" ci="3" mb="0" cb="0"/><line nr="577" mi="0" ci="5" mb="0" cb="0"/><line nr="584" mi="0" ci="2" mb="0" cb="0"/><line nr="585" mi="0" ci="3" mb="0" cb="0"/><line nr="586" mi="0" ci="3" mb="0" cb="0"/><line nr="587" mi="0" ci="1" mb="0" cb="0"/><line nr="594" mi="0" ci="3" mb="0" cb="0"/><line nr="596" mi="0" ci="4" mb="0" cb="2"/><line nr="597" mi="0" ci="2" mb="0" cb="0"/><line nr="598" mi="0" ci="4" mb="0" cb="0"/><line nr="606" mi="0" ci="3" mb="0" cb="0"/><line nr="608" mi="0" ci="3" mb="0" cb="0"/><line nr="614" mi="0" ci="4" mb="0" cb="0"/><line nr="615" mi="0" ci="4" mb="0" cb="0"/><line nr="617" mi="0" ci="12" mb="0" cb="2"/><line nr="619" mi="0" ci="3" mb="0" cb="2"/><line nr="620" mi="0" ci="2" mb="0" cb="0"/><line nr="621" mi="0" ci="1" mb="0" cb="0"/><line nr="627" mi="0" ci="3" mb="0" cb="2"/><line nr="629" mi="0" ci="4" mb="0" cb="0"/><line nr="630" mi="0" ci="6" mb="0" cb="0"/><line nr="632" mi="0" ci="2" mb="0" cb="2"/><line nr="633" mi="0" ci="8" mb="0" cb="4"/><line nr="634" mi="0" ci="8" mb="0" cb="2"/><line nr="637" mi="0" ci="2" mb="0" cb="0"/><line nr="638" mi="0" ci="5" mb="0" cb="2"/><line nr="641" mi="0" ci="5" mb="0" cb="0"/><line nr="642" mi="0" ci="2" mb="0" cb="2"/><line nr="643" mi="0" ci="5" mb="0" cb="0"/><line nr="646" mi="0" ci="7" mb="0" cb="0"/><line nr="652" mi="0" ci="2" mb="0" cb="0"/><line nr="663" mi="0" ci="4" mb="0" cb="0"/><line nr="664" mi="0" ci="3" mb="0" cb="0"/><line nr="666" mi="0" ci="2" mb="0" cb="0"/><line nr="667" mi="0" ci="2" mb="0" cb="0"/><line nr="669" mi="0" ci="4" mb="0" cb="2"/><line nr="671" mi="0" ci="2" mb="0" cb="0"/><line nr="672" mi="0" ci="3" mb="0" cb="0"/><line nr="673" mi="0" ci="4" mb="0" cb="2"/><line nr="675" mi="0" ci="2" mb="0" cb="0"/><line nr="678" mi="0" ci="2" mb="0" cb="2"/><line nr="679" mi="0" ci="3" mb="0" cb="0"/><line nr="680" mi="0" ci="2" mb="0" cb="2"/><line nr="681" mi="0" ci="3" mb="0" cb="0"/><line nr="684" mi="0" ci="9" mb="0" cb="0"/><line nr="687" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="681"/><counter type="BRANCH" missed="1" covered="61"/><counter type="LINE" missed="0" covered="166"/><counter type="COMPLEXITY" missed="1" covered="75"/><counter type="METHOD" missed="0" covered="45"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="PlaneSubset.java"/><sourcefile name="Vector3D.java"><line nr="37" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="4"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="2"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="2"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="2"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="2"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="18" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="16" mb="0" cb="6"/><line nr="138" mi="0" ci="19" mb="0" cb="8"/><line nr="144" mi="0" ci="16" mb="0" cb="6"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="6" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="8" mb="0" cb="0"/><line nr="182" mi="0" ci="8" mb="0" cb="0"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="16" mb="0" cb="0"/><line nr="200" mi="0" ci="19" mb="0" cb="0"/><line nr="210" mi="0" ci="25" mb="0" cb="0"/><line nr="220" mi="0" ci="19" mb="0" cb="0"/><line nr="230" mi="0" ci="25" mb="0" cb="0"/><line nr="240" mi="0" ci="13" mb="0" cb="0"/><line nr="246" mi="0" ci="8" mb="0" cb="0"/><line nr="252" mi="0" ci="9" mb="0" cb="0"/><line nr="258" mi="0" ci="16" mb="0" cb="0"/><line nr="264" mi="0" ci="17" mb="0" cb="0"/><line nr="274" mi="0" ci="17" mb="0" cb="0"/><line nr="291" mi="0" ci="14" mb="0" cb="0"/><line nr="306" mi="0" ci="6" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="0" ci="4" mb="0" cb="0"/><line nr="310" mi="0" ci="9" mb="0" cb="4"/><line nr="312" mi="0" ci="4" mb="0" cb="0"/><line nr="313" mi="0" ci="4" mb="0" cb="2"/><line nr="314" mi="0" ci="6" mb="0" cb="0"/><line nr="316" mi="0" ci="8" mb="0" cb="0"/><line nr="320" mi="0" ci="5" mb="0" cb="0"/><line nr="326" mi="0" ci="6" mb="0" cb="0"/><line nr="332" mi="0" ci="6" mb="0" cb="0"/><line nr="353" mi="0" ci="5" mb="0" cb="0"/><line nr="356" mi="0" ci="6" mb="0" cb="2"/><line nr="357" mi="0" ci="8" mb="0" cb="0"/><line nr="358" mi="0" ci="15" mb="0" cb="0"/><line nr="359" mi="0" ci="6" mb="0" cb="2"/><line nr="360" mi="0" ci="8" mb="0" cb="0"/><line nr="361" mi="0" ci="15" mb="0" cb="0"/><line nr="363" mi="0" ci="8" mb="0" cb="0"/><line nr="364" mi="0" ci="15" mb="0" cb="0"/><line nr="370" mi="0" ci="7" mb="0" cb="0"/><line nr="378" mi="0" ci="22" mb="0" cb="0"/><line nr="379" mi="0" ci="10" mb="0" cb="0"/><line nr="380" mi="0" ci="2" mb="0" cb="0"/><line nr="389" mi="0" ci="5" mb="0" cb="0"/><line nr="395" mi="0" ci="13" mb="0" cb="2"/><line nr="396" mi="0" ci="7" mb="0" cb="2"/><line nr="397" mi="0" ci="5" mb="0" cb="2"/><line nr="408" mi="0" ci="3" mb="0" cb="2"/><line nr="409" mi="0" ci="2" mb="0" cb="0"/><line nr="411" mi="0" ci="18" mb="0" cb="0"/><line nr="435" mi="0" ci="3" mb="0" cb="2"/><line nr="436" mi="0" ci="2" mb="0" cb="0"/><line nr="438" mi="0" ci="3" mb="0" cb="2"/><line nr="439" mi="0" ci="3" mb="0" cb="0"/><line nr="440" mi="0" ci="3" mb="0" cb="2"/><line nr="441" mi="0" ci="3" mb="0" cb="0"/><line nr="444" mi="0" ci="11" mb="0" cb="2"/><line nr="445" mi="0" ci="6" mb="0" cb="2"/><line nr="446" mi="0" ci="5" mb="0" cb="2"/><line nr="448" mi="0" ci="2" mb="0" cb="0"/><line nr="454" mi="0" ci="9" mb="0" cb="0"/><line nr="473" mi="0" ci="4" mb="0" cb="0"/><line nr="481" mi="0" ci="4" mb="0" cb="0"/><line nr="483" mi="0" ci="4" mb="0" cb="0"/><line nr="485" mi="0" ci="5" mb="0" cb="0"/><line nr="486" mi="0" ci="5" mb="0" cb="0"/><line nr="487" mi="0" ci="5" mb="0" cb="0"/><line nr="489" mi="0" ci="2" mb="0" cb="2"/><line nr="490" mi="0" ci="16" mb="0" cb="0"/><line nr="493" mi="0" ci="7" mb="0" cb="0"/><line nr="503" mi="0" ci="7" mb="0" cb="0"/><line nr="512" mi="0" ci="4" mb="0" cb="2"/><line nr="513" mi="0" ci="15" mb="0" cb="0"/><line nr="515" mi="0" ci="13" mb="0" cb="0"/><line nr="525" mi="0" ci="6" mb="0" cb="0"/><line nr="534" mi="0" ci="6" mb="0" cb="0"/><line nr="543" mi="0" ci="3" mb="0" cb="0"/><line nr="544" mi="0" ci="3" mb="0" cb="2"/><line nr="545" mi="0" ci="5" mb="0" cb="0"/><line nr="548" mi="0" ci="6" mb="0" cb="0"/><line nr="557" mi="0" ci="3" mb="0" cb="0"/><line nr="558" mi="0" ci="3" mb="0" cb="0"/><line nr="559" mi="0" ci="3" mb="0" cb="0"/><line nr="562" mi="0" ci="3" mb="0" cb="2"/><line nr="563" mi="0" ci="4" mb="0" cb="0"/><line nr="565" mi="0" ci="5" mb="0" cb="0"/><line nr="566" mi="0" ci="5" mb="0" cb="0"/><line nr="567" mi="0" ci="6" mb="0" cb="0"/><line nr="570" mi="0" ci="5" mb="0" cb="0"/><line nr="579" mi="0" ci="6" mb="0" cb="0"/><line nr="588" mi="0" ci="3" mb="0" cb="0"/><line nr="589" mi="0" ci="3" mb="0" cb="2"/><line nr="590" mi="0" ci="5" mb="0" cb="0"/><line nr="593" mi="0" ci="6" mb="0" cb="0"/><line nr="602" mi="0" ci="3" mb="0" cb="0"/><line nr="603" mi="0" ci="3" mb="0" cb="0"/><line nr="604" mi="0" ci="3" mb="0" cb="0"/><line nr="607" mi="0" ci="3" mb="0" cb="2"/><line nr="608" mi="0" ci="4" mb="0" cb="0"/><line nr="610" mi="0" ci="5" mb="0" cb="0"/><line nr="611" mi="0" ci="5" mb="0" cb="0"/><line nr="612" mi="0" ci="6" mb="0" cb="0"/><line nr="615" mi="0" ci="5" mb="0" cb="0"/><line nr="625" mi="0" ci="6" mb="0" cb="0"/><line nr="635" mi="0" ci="3" mb="0" cb="0"/><line nr="636" mi="0" ci="3" mb="0" cb="2"/><line nr="637" mi="0" ci="5" mb="0" cb="0"/><line nr="640" mi="0" ci="6" mb="0" cb="0"/><line nr="649" mi="0" ci="3" mb="0" cb="0"/><line nr="650" mi="0" ci="2" mb="0" cb="0"/><line nr="652" mi="0" ci="3" mb="0" cb="2"/><line nr="653" mi="0" ci="6" mb="0" cb="0"/><line nr="654" mi="0" ci="2" mb="0" cb="0"/><line nr="657" mi="0" ci="8" mb="0" cb="0"/><line nr="666" mi="0" ci="7" mb="0" cb="0"/><line nr="668" mi="0" ci="7" mb="0" cb="0"/><line nr="670" mi="0" ci="7" mb="0" cb="0"/><line nr="672" mi="0" ci="7" mb="0" cb="0"/><line nr="674" mi="0" ci="7" mb="0" cb="0"/><line nr="676" mi="0" ci="8" mb="0" cb="0"/><line nr="700" mi="0" ci="6" mb="0" cb="0"/><line nr="701" mi="0" ci="1" mb="0" cb="0"/><line nr="706" mi="0" ci="2" mb="0" cb="0"/><line nr="712" mi="0" ci="2" mb="0" cb="0"/><line nr="718" mi="0" ci="2" mb="0" cb="0"/><line nr="724" mi="0" ci="2" mb="0" cb="0"/><line nr="730" mi="0" ci="4" mb="0" cb="0"/><line nr="736" mi="0" ci="13" mb="0" cb="0"/><line nr="748" mi="0" ci="6" mb="0" cb="0"/><line nr="758" mi="0" ci="4" mb="0" cb="2"/><line nr="759" mi="0" ci="3" mb="0" cb="0"/><line nr="760" mi="0" ci="7" mb="0" cb="0"/><line nr="780" mi="0" ci="13" mb="0" cb="0"/><line nr="781" mi="0" ci="4" mb="0" cb="0"/><line nr="782" mi="0" ci="3" mb="0" cb="2"/><line nr="783" mi="0" ci="13" mb="0" cb="0"/><line nr="795" mi="0" ci="9" mb="0" cb="0"/><line nr="796" mi="0" ci="4" mb="0" cb="2"/><line nr="797" mi="0" ci="4" mb="0" cb="0"/><line nr="798" mi="0" ci="4" mb="0" cb="0"/><line nr="799" mi="0" ci="5" mb="0" cb="0"/><line nr="801" mi="0" ci="4" mb="0" cb="0"/><line nr="802" mi="0" ci="4" mb="0" cb="0"/><line nr="803" mi="0" ci="4" mb="0" cb="0"/><line nr="806" mi="0" ci="15" mb="0" cb="0"/><line nr="811" mi="0" ci="3" mb="0" cb="2"/><line nr="812" mi="0" ci="13" mb="0" cb="0"/><line nr="816" mi="0" ci="2" mb="0" cb="2"/><line nr="817" mi="0" ci="3" mb="0" cb="0"/><line nr="819" mi="0" ci="2" mb="0" cb="0"/><line nr="840" mi="0" ci="2" mb="0" cb="0"/><line nr="841" mi="0" ci="5" mb="0" cb="0"/><line nr="842" mi="0" ci="5" mb="0" cb="0"/><line nr="843" mi="0" ci="5" mb="0" cb="0"/><line nr="844" mi="0" ci="1" mb="0" cb="0"/><line nr="849" mi="0" ci="6" mb="0" cb="0"/><line nr="850" mi="0" ci="6" mb="0" cb="0"/><line nr="851" mi="0" ci="6" mb="0" cb="0"/><line nr="852" mi="0" ci="2" mb="0" cb="0"/><line nr="858" mi="0" ci="7" mb="0" cb="0"/><line nr="859" mi="0" ci="7" mb="0" cb="0"/><line nr="860" mi="0" ci="7" mb="0" cb="0"/><line nr="861" mi="0" ci="2" mb="0" cb="0"/><line nr="867" mi="0" ci="4" mb="0" cb="0"/><line nr="868" mi="0" ci="3" mb="0" cb="0"/><line nr="869" mi="0" ci="3" mb="0" cb="0"/><line nr="870" mi="0" ci="1" mb="0" cb="0"/><line nr="877" mi="0" ci="5" mb="0" cb="0"/><line nr="885" mi="0" ci="5" mb="0" cb="0"/><line nr="894" mi="0" ci="5" mb="0" cb="0"/><line nr="895" mi="0" ci="16" mb="0" cb="2"/><line nr="896" mi="0" ci="4" mb="0" cb="0"/><line nr="898" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="1273"/><counter type="BRANCH" missed="0" covered="90"/><counter type="LINE" missed="0" covered="205"/><counter type="COMPLEXITY" missed="0" covered="116"/><counter type="METHOD" missed="0" covered="71"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="AbstractEmbeddedRegionPlaneSubset.java"><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="2"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="2"/><line nr="126" mi="0" ci="7" mb="0" cb="0"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="116"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="33"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmbeddedTreePlaneSubset.java"><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="10" mb="0" cb="2"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="12" mb="0" cb="2"/><line nr="103" mi="0" ci="3" mb="0" cb="2"/><line nr="104" mi="0" ci="12" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="7" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="7" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="2"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="2"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="5" mb="0" cb="2"/><line nr="210" mi="0" ci="8" mb="0" cb="0"/><line nr="211" mi="0" ci="6" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="239"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="60"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Triangle3D.java"><line nr="57" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BoundarySourceBoundsBuilder3D.java"><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="2"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="2"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="1" cb="1"/><line nr="53" mi="0" ci="4" mb="0" cb="2"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractConvexPolygon3D.java"><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="0"/><line nr="83" mi="0" ci="10" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="11" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="2"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="7" mb="0" cb="0"/><line nr="123" mi="0" ci="13" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="0"/><line nr="129" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="2"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="11" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="2"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="8" mb="0" cb="0"/><line nr="178" mi="0" ci="10" mb="0" cb="2"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="2"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="2"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="2"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="2" mb="0" cb="0"/><line nr="240" mi="0" ci="8" mb="0" cb="0"/><line nr="241" mi="0" ci="10" mb="0" cb="2"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="2"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="0" ci="9" mb="0" cb="0"/><line nr="260" mi="0" ci="6" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="4" mb="0" cb="2"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="274" mi="0" ci="2" mb="0" cb="2"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="0" ci="4" mb="0" cb="0"/><line nr="287" mi="0" ci="5" mb="0" cb="0"/><line nr="288" mi="0" ci="4" mb="0" cb="0"/><line nr="289" mi="0" ci="1" mb="0" cb="0"/><line nr="291" mi="0" ci="6" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="300" mi="0" ci="3" mb="0" cb="0"/><line nr="302" mi="0" ci="2" mb="0" cb="0"/><line nr="303" mi="0" ci="2" mb="0" cb="0"/><line nr="305" mi="0" ci="2" mb="0" cb="0"/><line nr="306" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="0" ci="2" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="0" ci="2" mb="0" cb="0"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="0" ci="10" mb="0" cb="4"/><line nr="321" mi="0" ci="7" mb="0" cb="0"/><line nr="322" mi="0" ci="4" mb="0" cb="0"/><line nr="324" mi="0" ci="6" mb="0" cb="4"/><line nr="326" mi="0" ci="4" mb="0" cb="0"/><line nr="327" mi="0" ci="1" mb="0" cb="0"/><line nr="329" mi="0" ci="2" mb="0" cb="2"/><line nr="331" mi="0" ci="7" mb="0" cb="0"/><line nr="332" mi="0" ci="2" mb="0" cb="0"/><line nr="334" mi="0" ci="6" mb="0" cb="4"/><line nr="336" mi="0" ci="4" mb="0" cb="0"/><line nr="337" mi="0" ci="1" mb="0" cb="0"/><line nr="339" mi="0" ci="2" mb="0" cb="2"/><line nr="341" mi="0" ci="6" mb="0" cb="0"/><line nr="342" mi="0" ci="2" mb="0" cb="0"/><line nr="346" mi="0" ci="3" mb="0" cb="2"/><line nr="347" mi="0" ci="3" mb="0" cb="0"/><line nr="349" mi="0" ci="2" mb="0" cb="0"/><line nr="351" mi="0" ci="2" mb="0" cb="0"/><line nr="352" mi="0" ci="2" mb="0" cb="0"/><line nr="353" mi="0" ci="2" mb="0" cb="0"/><line nr="357" mi="0" ci="6" mb="1" cb="3"/><line nr="359" mi="0" ci="8" mb="0" cb="0"/><line nr="362" mi="0" ci="8" mb="0" cb="0"/><line nr="368" mi="0" ci="6" mb="0" cb="0"/><line nr="369" mi="0" ci="4" mb="0" cb="0"/><line nr="370" mi="0" ci="2" mb="0" cb="0"/><line nr="372" mi="0" ci="3" mb="0" cb="2"/><line nr="374" mi="0" ci="6" mb="0" cb="0"/><line nr="375" mi="0" ci="3" mb="0" cb="2"/><line nr="377" mi="0" ci="6" mb="0" cb="0"/><line nr="381" mi="0" ci="6" mb="0" cb="0"/><line nr="407" mi="0" ci="3" mb="0" cb="0"/><line nr="409" mi="0" ci="6" mb="0" cb="2"/><line nr="410" mi="0" ci="6" mb="0" cb="2"/><line nr="412" mi="0" ci="10" mb="0" cb="2"/><line nr="413" mi="0" ci="4" mb="0" cb="0"/><line nr="415" mi="0" ci="7" mb="0" cb="2"/><line nr="417" mi="0" ci="12" mb="0" cb="2"/><line nr="418" mi="0" ci="5" mb="0" cb="0"/><line nr="420" mi="0" ci="2" mb="0" cb="2"/><line nr="421" mi="0" ci="4" mb="0" cb="0"/><line nr="424" mi="0" ci="2" mb="0" cb="2"/><line nr="425" mi="0" ci="7" mb="0" cb="0"/><line nr="426" mi="0" ci="10" mb="0" cb="0"/><line nr="428" mi="0" ci="9" mb="0" cb="0"/><line nr="431" mi="0" ci="2" mb="0" cb="2"/><line nr="432" mi="0" ci="4" mb="0" cb="0"/><line nr="435" mi="0" ci="2" mb="0" cb="0"/><line nr="441" mi="0" ci="4" mb="0" cb="0"/><line nr="442" mi="0" ci="6" mb="0" cb="0"/><line nr="443" mi="0" ci="2" mb="0" cb="0"/><line nr="444" mi="0" ci="4" mb="0" cb="0"/><line nr="445" mi="0" ci="2" mb="0" cb="0"/><line nr="446" mi="0" ci="3" mb="0" cb="0"/><line nr="447" mi="0" ci="2" mb="0" cb="0"/><line nr="449" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="702"/><counter type="BRANCH" missed="1" covered="65"/><counter type="LINE" missed="0" covered="174"/><counter type="COMPLEXITY" missed="1" covered="45"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SphericalCoordinates.java"><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="2"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="16" mb="0" cb="6"/><line nr="135" mi="0" ci="19" mb="0" cb="8"/><line nr="141" mi="0" ci="16" mb="0" cb="6"/><line nr="149" mi="0" ci="8" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="2"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="8" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="2"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="2"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="2"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="11" mb="0" cb="2"/><line nr="197" mi="0" ci="6" mb="0" cb="2"/><line nr="198" mi="0" ci="5" mb="0" cb="2"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="9" mb="0" cb="0"/><line nr="221" mi="0" ci="7" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="235" mi="0" ci="11" mb="0" cb="2"/><line nr="237" mi="0" ci="7" mb="0" cb="0"/><line nr="245" mi="0" ci="8" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="273" mi="0" ci="6" mb="0" cb="0"/><line nr="283" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="2"/><line nr="298" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="262"/><counter type="BRANCH" missed="0" covered="40"/><counter type="LINE" missed="0" covered="52"/><counter type="COMPLEXITY" missed="0" covered="39"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PlaneConvexSubset.java"><line nr="71" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BoundarySource3D.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="9" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VertexListConvexPolygon3D.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="2"/><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BoundarySourceLinecaster3D.java"><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractPlaneSubset.java"><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Plane.java"><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="12" mb="0" cb="0"/><line nr="104" mi="0" ci="8" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="2"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="2"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="14" mb="0" cb="2"/><line nr="139" mi="0" ci="7" mb="0" cb="0"/><line nr="147" mi="0" ci="13" mb="0" cb="4"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="15" mb="0" cb="4"/><line nr="160" mi="0" ci="13" mb="1" cb="3"/><line nr="166" mi="0" ci="8" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="14" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="10" mb="0" cb="0"/><line nr="211" mi="0" ci="13" mb="0" cb="2"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="2"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="11" mb="0" cb="0"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="6" mb="0" cb="0"/><line nr="250" mi="0" ci="6" mb="0" cb="2"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="254" mi="0" ci="8" mb="0" cb="0"/><line nr="256" mi="0" ci="6" mb="0" cb="0"/><line nr="264" mi="0" ci="12" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="0" cb="0"/><line nr="313" mi="0" ci="5" mb="0" cb="0"/><line nr="315" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="317" mi="0" ci="4" mb="0" cb="0"/><line nr="319" mi="0" ci="5" mb="0" cb="0"/><line nr="320" mi="0" ci="5" mb="0" cb="0"/><line nr="321" mi="0" ci="5" mb="0" cb="0"/><line nr="323" mi="0" ci="7" mb="0" cb="0"/><line nr="331" mi="0" ci="5" mb="0" cb="0"/><line nr="333" mi="0" ci="7" mb="0" cb="0"/><line nr="342" mi="0" ci="5" mb="0" cb="0"/><line nr="343" mi="0" ci="6" mb="0" cb="0"/><line nr="347" mi="0" ci="6" mb="0" cb="0"/><line nr="349" mi="0" ci="6" mb="0" cb="0"/><line nr="361" mi="0" ci="13" mb="0" cb="2"/><line nr="362" mi="0" ci="5" mb="0" cb="2"/><line nr="368" mi="0" ci="20" mb="0" cb="0"/><line nr="374" mi="0" ci="3" mb="0" cb="2"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="376" mi="0" ci="7" mb="0" cb="4"/><line nr="377" mi="0" ci="2" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="382" mi="0" ci="11" mb="0" cb="2"/><line nr="383" mi="0" ci="3" mb="0" cb="2"/><line nr="384" mi="0" ci="8" mb="0" cb="2"/><line nr="390" mi="0" ci="4" mb="0" cb="0"/><line nr="391" mi="0" ci="6" mb="0" cb="0"/><line nr="392" mi="0" ci="2" mb="0" cb="0"/><line nr="393" mi="0" ci="3" mb="0" cb="0"/><line nr="394" mi="0" ci="3" mb="0" cb="0"/><line nr="395" mi="0" ci="2" mb="0" cb="0"/><line nr="396" mi="0" ci="2" mb="0" cb="0"/><line nr="398" mi="0" ci="3" mb="0" cb="0"/><line nr="411" mi="0" ci="4" mb="0" cb="0"/><line nr="412" mi="0" ci="4" mb="0" cb="0"/><line nr="413" mi="0" ci="4" mb="0" cb="0"/><line nr="414" mi="0" ci="3" mb="0" cb="0"/><line nr="416" mi="0" ci="4" mb="0" cb="0"/><line nr="417" mi="0" ci="4" mb="0" cb="0"/><line nr="418" mi="0" ci="4" mb="0" cb="0"/><line nr="419" mi="0" ci="3" mb="0" cb="0"/><line nr="421" mi="0" ci="4" mb="0" cb="0"/><line nr="422" mi="0" ci="4" mb="0" cb="0"/><line nr="423" mi="0" ci="4" mb="0" cb="0"/><line nr="424" mi="0" ci="3" mb="0" cb="0"/><line nr="428" mi="0" ci="8" mb="0" cb="0"/><line nr="429" mi="0" ci="8" mb="0" cb="0"/><line nr="430" mi="0" ci="8" mb="0" cb="0"/><line nr="431" mi="0" ci="12" mb="0" cb="0"/><line nr="434" mi="0" ci="5" mb="0" cb="2"/><line nr="435" mi="0" ci="2" mb="0" cb="0"/><line nr="438" mi="0" ci="4" mb="0" cb="0"/><line nr="439" mi="0" ci="80" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="652"/><counter type="BRANCH" missed="1" covered="41"/><counter type="LINE" missed="0" covered="104"/><counter type="COMPLEXITY" missed="1" covered="48"/><counter type="METHOD" missed="0" covered="28"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BoundaryList3D.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="8202"/><counter type="BRANCH" missed="9" covered="565"/><counter type="LINE" missed="0" covered="1538"/><counter type="COMPLEXITY" missed="9" covered="674"/><counter type="METHOD" missed="0" covered="396"/><counter type="CLASS" missed="0" covered="34"/></package><package name="org/apache/commons/geometry/euclidean/internal"><class name="org/apache/commons/geometry/euclidean/internal/Vectors" sourcefilename="Vectors.java"><method name="isRealNonZero" desc="(D)Z" line="37"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkedNorm" desc="(D)D" line="49"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkedNorm" desc="(Lorg/apache/commons/geometry/core/Vector;)D" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="illegalNorm" desc="(D)Ljava/lang/IllegalArgumentException;" line="72"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="norm" desc="(D)D" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="norm" desc="(DD)D" line="95"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="norm" desc="(DDD)D" line="108"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normSq" desc="(D)D" line="119"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normSq" desc="(DD)D" line="131"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normSq" desc="(DDD)D" line="144"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linearCombination" desc="(DDDD)D" line="157"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linearCombination" desc="(DDDDDD)D" line="175"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="93"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/internal/Matrices" sourcefilename="Matrices.java"><method name="determinant" desc="(DDDD)D" line="38"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="determinant" desc="(DDDDDDDDD)D" line="59"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkDeterminantForInverse" desc="(D)D" line="72"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkElementForInverse" desc="(D)D" line="86"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nonInvertibleTransform" desc="(Ljava/lang/String;)Ljava/lang/IllegalStateException;" line="99"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/internal/AbstractPathConnector$ConnectableElement" sourcefilename="AbstractPathConnector.java"><method name="&lt;init&gt;" desc="()V" line="274"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="289"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNext" desc="()Lorg/apache/commons/geometry/euclidean/internal/AbstractPathConnector$ConnectableElement;" line="296"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNext" desc="(Lorg/apache/commons/geometry/euclidean/internal/AbstractPathConnector$ConnectableElement;)V" line="305"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasPrevious" desc="()Z" line="312"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrevious" desc="()Lorg/apache/commons/geometry/euclidean/internal/AbstractPathConnector$ConnectableElement;" line="319"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPrevious" desc="(Lorg/apache/commons/geometry/euclidean/internal/AbstractPathConnector$ConnectableElement;)V" line="328"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectTo" desc="(Lorg/apache/commons/geometry/euclidean/internal/AbstractPathConnector$ConnectableElement;)V" line="337"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exportPath" desc="()Lorg/apache/commons/geometry/euclidean/internal/AbstractPathConnector$ConnectableElement;" line="351"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="markExported" desc="()Z" line="383"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="18"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/internal/EuclideanUtils" sourcefilename="EuclideanUtils.java"><method name="convexPolygonToTriangleFan" desc="(Ljava/util/List;Ljava/util/function/Function;)Ljava/util/List;" line="54"><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findBestTriangleFanIndex" desc="(Ljava/util/List;)I" line="92"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="164"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/internal/AbstractPathConnector" sourcefilename="AbstractPathConnector.java"><method name="&lt;init&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectPathElements" desc="(Ljava/lang/Iterable;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addPathElement" desc="(Lorg/apache/commons/geometry/euclidean/internal/AbstractPathConnector$ConnectableElement;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computePathRoots" desc="()Ljava/util/List;" line="100"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="followForwardConnections" desc="(Lorg/apache/commons/geometry/euclidean/internal/AbstractPathConnector$ConnectableElement;)V" line="124"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeForwardConnection" desc="(Lorg/apache/commons/geometry/euclidean/internal/AbstractPathConnector$ConnectableElement;)Lorg/apache/commons/geometry/euclidean/internal/AbstractPathConnector$ConnectableElement;" line="137"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findPossibleConnections" desc="(Lorg/apache/commons/geometry/euclidean/internal/AbstractPathConnector$ConnectableElement;)V" line="165"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addPossibleConnection" desc="(Lorg/apache/commons/geometry/euclidean/internal/AbstractPathConnector$ConnectableElement;Lorg/apache/commons/geometry/euclidean/internal/AbstractPathConnector$ConnectableElement;)Z" line="196"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selectPointConnection" desc="(Lorg/apache/commons/geometry/euclidean/internal/AbstractPathConnector$ConnectableElement;Ljava/util/List;)Lorg/apache/commons/geometry/euclidean/internal/AbstractPathConnector$ConnectableElement;" line="226"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="318"/><counter type="BRANCH" missed="3" covered="59"/><counter type="LINE" missed="0" covered="78"/><counter type="COMPLEXITY" missed="3" covered="37"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractPathConnector.java"><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="10" mb="0" cb="2"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="11" mb="0" cb="2"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="11" mb="0" cb="2"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="2"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="8" mb="0" cb="6"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="2"/><line nr="143" mi="0" ci="5" mb="0" cb="2"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="145" mi="0" ci="7" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="2"/><line nr="148" mi="0" ci="5" mb="0" cb="2"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="2"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="2"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="13" mb="0" cb="2"/><line nr="173" mi="0" ci="8" mb="0" cb="2"/><line nr="174" mi="0" ci="2" mb="0" cb="2"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="14" mb="0" cb="2"/><line nr="181" mi="0" ci="8" mb="0" cb="2"/><line nr="182" mi="0" ci="2" mb="0" cb="2"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="2"/><line nr="197" mi="0" ci="3" mb="0" cb="2"/><line nr="198" mi="0" ci="4" mb="0" cb="2"/><line nr="199" mi="0" ci="2" mb="0" cb="2"/><line nr="201" mi="0" ci="4" mb="0" cb="2"/><line nr="202" mi="0" ci="6" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="230" mi="0" ci="10" mb="0" cb="2"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="232" mi="0" ci="7" mb="0" cb="2"/><line nr="234" mi="0" ci="13" mb="3" cb="7"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="289" mi="0" ci="7" mb="0" cb="2"/><line nr="296" mi="0" ci="3" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="0" cb="0"/><line nr="306" mi="0" ci="1" mb="0" cb="0"/><line nr="312" mi="0" ci="7" mb="0" cb="2"/><line nr="319" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="329" mi="0" ci="1" mb="0" cb="0"/><line nr="337" mi="0" ci="3" mb="0" cb="0"/><line nr="338" mi="0" ci="4" mb="0" cb="0"/><line nr="339" mi="0" ci="1" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="0" cb="2"/><line nr="356" mi="0" ci="3" mb="0" cb="0"/><line nr="359" mi="0" ci="3" mb="0" cb="0"/><line nr="360" mi="0" ci="5" mb="0" cb="4"/><line nr="361" mi="0" ci="4" mb="0" cb="0"/><line nr="365" mi="0" ci="3" mb="0" cb="0"/><line nr="366" mi="0" ci="5" mb="0" cb="4"/><line nr="367" mi="0" ci="2" mb="0" cb="0"/><line nr="368" mi="0" ci="4" mb="0" cb="0"/><line nr="371" mi="0" ci="2" mb="0" cb="0"/><line nr="374" mi="0" ci="2" mb="0" cb="0"/><line nr="383" mi="0" ci="3" mb="0" cb="2"/><line nr="384" mi="0" ci="3" mb="0" cb="0"/><line nr="385" mi="0" ci="2" mb="0" cb="0"/><line nr="387" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="403"/><counter type="BRANCH" missed="3" covered="75"/><counter type="LINE" missed="0" covered="105"/><counter type="COMPLEXITY" missed="3" covered="55"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Vectors.java"><line nr="37" mi="0" ci="11" mb="0" cb="4"/><line nr="49" mi="0" ci="3" mb="0" cb="2"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="12" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="8" mb="0" cb="0"/><line nr="144" mi="0" ci="12" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="93"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EuclideanUtils.java"><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="2"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="2"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="20" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="10" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="2"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="2"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="2"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="164"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Matrices.java"><line nr="38" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="36" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="2"/><line nr="73" mi="0" ci="10" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="2"/><line nr="87" mi="0" ci="10" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="746"/><counter type="BRANCH" missed="3" covered="97"/><counter type="LINE" missed="0" covered="172"/><counter type="COMPLEXITY" missed="3" covered="85"/><counter type="METHOD" missed="0" covered="38"/><counter type="CLASS" missed="0" covered="5"/></package><package name="org/apache/commons/geometry/euclidean/twod/shape"><class name="org/apache/commons/geometry/euclidean/twod/shape/Circle$CircleApproximationBuilder" sourcefilename="Circle.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/shape/Circle;I)V" line="188"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D;" line="205"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splitAndInsert" desc="(Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D$RegionNode2D;II)V" line="231"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D$RegionNode2D;II)V" line="252"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pointAt" desc="(I)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="270"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="197"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/shape/Parallelogram$Builder" sourcefilename="Parallelogram.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="174"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPosition" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/shape/Parallelogram$Builder;" line="197"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setScale" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/shape/Parallelogram$Builder;" line="208"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setScale" desc="(DD)Lorg/apache/commons/geometry/euclidean/twod/shape/Parallelogram$Builder;" line="220"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setScale" desc="(D)Lorg/apache/commons/geometry/euclidean/twod/shape/Parallelogram$Builder;" line="229"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRotation" desc="(Lorg/apache/commons/geometry/euclidean/twod/rotation/Rotation2D;)Lorg/apache/commons/geometry/euclidean/twod/shape/Parallelogram$Builder;" line="237"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setXDirection" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/shape/Parallelogram$Builder;" line="249"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setYDirection" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/shape/Parallelogram$Builder;" line="261"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/apache/commons/geometry/euclidean/twod/shape/Parallelogram;" line="272"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/shape/Circle" sourcefilename="Circle.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;DLorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()D" line="55"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBoundarySize" desc="()D" line="62"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="project" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="68"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTree" desc="(I)Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D;" line="88"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersections" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;)Ljava/util/List;" line="108"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firstIntersection" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="119"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecast" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Ljava/util/List;" line="125"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecastFirst" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Lorg/apache/commons/geometry/euclidean/twod/LinecastPoint2D;" line="132"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLinecastStream" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Ljava/util/stream/Stream;" line="143"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;DLorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/twod/shape/Circle;" line="157"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getLinecastStream$0" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/LinecastPoint2D;" line="145"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/shape/Parallelogram" sourcefilename="Parallelogram.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unitSquare" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/twod/shape/Parallelogram;" line="70"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="axisAligned" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/twod/shape/Parallelogram;" line="86"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromTransformedUnitSquare" desc="(Lorg/apache/commons/geometry/core/Transform;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/twod/shape/Parallelogram;" line="126"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/twod/shape/Parallelogram$Builder;" line="161"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="183"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Parallelogram.java"><line nr="40" mi="0" ci="9" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="12" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="7" mb="0" cb="2"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="9" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="2"/><line nr="142" mi="0" ci="16" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="2"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="6" mb="0" cb="0"/><line nr="229" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="1" mb="0" cb="0"/><line nr="272" mi="0" ci="5" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="0" ci="2" mb="0" cb="0"/><line nr="276" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="253"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="58"/><counter type="COMPLEXITY" missed="0" covered="18"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Circle.java"><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="7" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="8" mb="0" cb="0"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="145" mi="0" ci="13" mb="0" cb="0"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="2"/><line nr="190" mi="0" ci="11" mb="0" cb="0"/><line nr="192" mi="0" ci="7" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="6" mb="0" cb="0"/><line nr="199" mi="0" ci="1" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="2"/><line nr="209" mi="0" ci="7" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="10" mb="0" cb="0"/><line nr="218" mi="0" ci="7" mb="0" cb="0"/><line nr="219" mi="0" ci="8" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="0" cb="2"/><line nr="232" mi="0" ci="10" mb="0" cb="0"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="10" mb="0" cb="0"/><line nr="238" mi="0" ci="7" mb="0" cb="0"/><line nr="239" mi="0" ci="7" mb="0" cb="0"/><line nr="240" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="0" ci="9" mb="0" cb="2"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="9" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="270" mi="0" ci="12" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="293"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="57"/><counter type="COMPLEXITY" missed="0" covered="21"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="546"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="115"/><counter type="COMPLEXITY" missed="0" covered="39"/><counter type="METHOD" missed="0" covered="32"/><counter type="CLASS" missed="0" covered="4"/></package><package name="org/apache/commons/geometry/euclidean/threed/line"><class name="org/apache/commons/geometry/euclidean/threed/line/Linecastable3D" sourcefilename="Linecastable3D.java"><method name="linecast" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)Ljava/util/List;" line="41"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecastFirst" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)Lorg/apache/commons/geometry/euclidean/threed/line/LinecastPoint3D;" line="60"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/line/Ray3D" sourcefilename="Ray3D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;D)V" line="51"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInfinite" desc="()Z" line="62"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFinite" desc="()Z" line="71"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()D" line="80"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStartPoint" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="85"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceStart" desc="()D" line="91"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEndPoint" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="100"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceEnd" desc="()D" line="109"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCentroid" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="118"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBounds" desc="()Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;" line="127"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDirection" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="134"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyAbscissa" desc="(D)Lorg/apache/commons/geometry/core/RegionLocation;" line="140"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/threed/line/Ray3D;" line="152"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="161"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="102"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="0" covered="17"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/line/Lines3D" sourcefilename="Lines3D.java"><method name="fromPoints" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;" line="45"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromPointAndDirection" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;" line="59"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rayFromPointAndDirection" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/line/Ray3D;" line="80"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rayFromPoint" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/line/Ray3D;" line="94"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rayFromLocation" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;D)Lorg/apache/commons/geometry/euclidean/threed/line/Ray3D;" line="106"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseRayFromPointAndDirection" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/line/ReverseRay3D;" line="124"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseRayFromPoint" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/line/ReverseRay3D;" line="137"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseRayFromLocation" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;D)Lorg/apache/commons/geometry/euclidean/threed/line/ReverseRay3D;" line="149"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="segmentFromPoints" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/line/Segment3D;" line="168"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="segmentFromPoints" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/line/Segment3D;" line="186"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="segmentFromLocations" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;DD)Lorg/apache/commons/geometry/euclidean/threed/line/Segment3D;" line="201"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="span" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;" line="219"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subsetFromInterval" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;Lorg/apache/commons/geometry/euclidean/oned/Interval;)Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;" line="228"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subsetFromInterval" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;DD)Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;" line="238"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subsetFromInterval" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;Lorg/apache/commons/geometry/euclidean/oned/Vector1D;Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;" line="269"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="257"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="45"/><counter type="COMPLEXITY" missed="1" covered="25"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D" sourcefilename="LineConvexSubset3D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceRegion" desc="()Lorg/apache/commons/geometry/euclidean/oned/Interval;" line="64"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInterval" desc="()Lorg/apache/commons/geometry/euclidean/oned/Interval;" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Z" line="82"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/line/Segment3D" sourcefilename="Segment3D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;DD)V" line="57"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInfinite" desc="()Z" line="69"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFinite" desc="()Z" line="78"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStartPoint" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="84"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceStart" desc="()D" line="90"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEndPoint" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="96"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceEnd" desc="()D" line="102"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()D" line="108"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCentroid" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="114"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBounds" desc="()Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;" line="120"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyAbscissa" desc="(D)Lorg/apache/commons/geometry/core/RegionLocation;" line="129"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/threed/line/Segment3D;" line="149"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="160"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="154"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="42"/><counter type="COMPLEXITY" missed="0" covered="18"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/line/Line3D$SubspaceTransform" sourcefilename="Line3D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;)V" line="409"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLine" desc="()Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;" line="418"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTransform" desc="()Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;" line="426"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/line/EmbeddedTreeLineSubset3D" sourcefilename="EmbeddedTreeLineSubset3D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;Z)V" line="56"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;Lorg/apache/commons/geometry/euclidean/oned/RegionBSPTree1D;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()D" line="72"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceRegion" desc="()Lorg/apache/commons/geometry/euclidean/oned/RegionBSPTree1D;" line="78"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCentroid" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="84"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBounds" desc="()Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;" line="93"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyAbscissa" desc="(D)Lorg/apache/commons/geometry/core/RegionLocation;" line="111"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/threed/line/EmbeddedTreeLineSubset3D;" line="119"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toConvex" desc="()Ljava/util/List;" line="134"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="149"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="165"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="47"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/line/LineSubset3D" sourcefilename="LineSubset3D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLine" desc="()Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSpace" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="51"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSubspace" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/line/ReverseRay3D" sourcefilename="ReverseRay3D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;D)V" line="51"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInfinite" desc="()Z" line="62"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFinite" desc="()Z" line="71"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()D" line="80"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStartPoint" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="89"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceStart" desc="()D" line="98"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEndPoint" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="104"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceEnd" desc="()D" line="110"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCentroid" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="119"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBounds" desc="()Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;" line="128"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyAbscissa" desc="(D)Lorg/apache/commons/geometry/core/RegionLocation;" line="134"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/threed/line/ReverseRay3D;" line="146"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="155"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/line/Line3D" sourcefilename="Line3D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOrigin" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="64"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDirection" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="71"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrecision" desc="()Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;" line="78"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="()Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;" line="87"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;" line="95"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subspaceTransform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/threed/line/Line3D$SubspaceTransform;" line="124"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abscissa" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)D" line="151"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pointAt" desc="(D)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="159"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSubspace" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="167"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSpace" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="173"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSpace" desc="(D)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="183"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSimilarTo" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)Z" line="194"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Z" line="204"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)D" line="212"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)D" line="224"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closest" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="244"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersection" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="267"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="span" desc="()Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;" line="276"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="segment" desc="(DD)Lorg/apache/commons/geometry/euclidean/threed/line/Segment3D;" line="289"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="segment" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/line/Segment3D;" line="301"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseRayTo" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/line/ReverseRay3D;" line="313"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseRayTo" desc="(D)Lorg/apache/commons/geometry/euclidean/threed/line/ReverseRay3D;" line="324"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rayFrom" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/line/Ray3D;" line="337"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rayFrom" desc="(D)Lorg/apache/commons/geometry/euclidean/threed/line/Ray3D;" line="349"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eq" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Z" line="361"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="368"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="374"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="389"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="403"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="0" covered="75"/><counter type="COMPLEXITY" missed="2" covered="40"/><counter type="METHOD" missed="0" covered="29"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/line/LineSpanningSubset3D" sourcefilename="LineSpanningSubset3D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInfinite" desc="()Z" line="46"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFinite" desc="()Z" line="55"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()D" line="64"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStartPoint" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="73"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceStart" desc="()D" line="82"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEndPoint" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="91"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceEnd" desc="()D" line="100"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCentroid" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="109"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBounds" desc="()Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;" line="118"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyAbscissa" desc="(D)Lorg/apache/commons/geometry/core/RegionLocation;" line="124"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/threed/line/LineSpanningSubset3D;" line="130"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="136"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/line/LinecastPoint3D" sourcefilename="LinecastPoint3D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eq" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/LinecastPoint3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Z" line="65"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortAndFilter" desc="(Ljava/util/List;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsEq" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/LinecastPoint3D;Ljava/util/List;)Z" line="107"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/LinecastPoint3D;Lorg/apache/commons/geometry/euclidean/threed/line/LinecastPoint3D;)I" line="40"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="136"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="LineSpanningSubset3D.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="8" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Line3D.java"><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="11" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="9" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="9" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="12" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="151" mi="0" ci="8" mb="0" cb="0"/><line nr="159" mi="0" ci="7" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="6" mb="0" cb="0"/><line nr="195" mi="0" ci="16" mb="1" cb="3"/><line nr="196" mi="0" ci="5" mb="1" cb="1"/><line nr="204" mi="0" ci="7" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="6" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="5" mb="0" cb="2"/><line nr="229" mi="0" ci="5" mb="0" cb="0"/><line nr="233" mi="0" ci="10" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="6" mb="0" cb="0"/><line nr="245" mi="0" ci="6" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="2"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="6" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="13" mb="0" cb="0"/><line nr="257" mi="0" ci="1" mb="0" cb="0"/><line nr="258" mi="0" ci="1" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="0"/><line nr="268" mi="0" ci="8" mb="0" cb="2"/><line nr="276" mi="0" ci="3" mb="0" cb="0"/><line nr="289" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="0" ci="5" mb="0" cb="0"/><line nr="313" mi="0" ci="4" mb="0" cb="0"/><line nr="324" mi="0" ci="4" mb="0" cb="0"/><line nr="337" mi="0" ci="4" mb="0" cb="0"/><line nr="349" mi="0" ci="4" mb="0" cb="0"/><line nr="361" mi="0" ci="9" mb="0" cb="2"/><line nr="362" mi="0" ci="9" mb="0" cb="2"/><line nr="368" mi="0" ci="19" mb="0" cb="0"/><line nr="374" mi="0" ci="3" mb="0" cb="2"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="377" mi="0" ci="3" mb="0" cb="2"/><line nr="378" mi="0" ci="2" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="0" ci="11" mb="0" cb="2"/><line nr="382" mi="0" ci="6" mb="0" cb="2"/><line nr="383" mi="0" ci="5" mb="0" cb="2"/><line nr="389" mi="0" ci="8" mb="0" cb="0"/><line nr="390" mi="0" ci="6" mb="0" cb="0"/><line nr="391" mi="0" ci="5" mb="0" cb="0"/><line nr="392" mi="0" ci="2" mb="0" cb="0"/><line nr="409" mi="0" ci="2" mb="0" cb="0"/><line nr="410" mi="0" ci="3" mb="0" cb="0"/><line nr="411" mi="0" ci="3" mb="0" cb="0"/><line nr="412" mi="0" ci="1" mb="0" cb="0"/><line nr="418" mi="0" ci="3" mb="0" cb="0"/><line nr="426" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="418"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="0" covered="81"/><counter type="COMPLEXITY" missed="2" covered="43"/><counter type="METHOD" missed="0" covered="32"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Lines3D.java"><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="2"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="2"/><line nr="107" mi="0" ci="12" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="2"/><line nr="150" mi="0" ci="12" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="0" ci="9" mb="0" cb="0"/><line nr="201" mi="0" ci="6" mb="0" cb="4"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="7" mb="0" cb="0"/><line nr="208" mi="0" ci="8" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="7" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="228" mi="0" ci="7" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="2"/><line nr="245" mi="0" ci="2" mb="0" cb="2"/><line nr="247" mi="0" ci="7" mb="0" cb="0"/><line nr="250" mi="0" ci="6" mb="0" cb="0"/><line nr="251" mi="0" ci="2" mb="0" cb="2"/><line nr="253" mi="0" ci="6" mb="0" cb="0"/><line nr="254" mi="0" ci="10" mb="1" cb="5"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="11" mb="0" cb="0"/><line nr="259" mi="0" ci="7" mb="0" cb="0"/><line nr="269" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="257"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="45"/><counter type="COMPLEXITY" missed="1" covered="25"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ReverseRay3D.java"><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="2"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="2"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LineSubset3D.java"><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Linecastable3D.java"><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Segment3D.java"><line nr="47" mi="0" ci="9" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="14" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="2"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="2"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="2"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="2"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="7" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="154"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="42"/><counter type="COMPLEXITY" missed="0" covered="18"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LineConvexSubset3D.java"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="15" mb="0" cb="4"/><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmbeddedTreeLineSubset3D.java"><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="2"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="4"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="10" mb="0" cb="2"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="165"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="47"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LinecastPoint3D.java"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="2"/><line nr="42" mi="0" ci="9" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="11" mb="0" cb="2"/><line nr="66" mi="0" ci="9" mb="0" cb="2"/><line nr="67" mi="0" ci="11" mb="0" cb="2"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="9" mb="0" cb="2"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="2"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="10" mb="0" cb="2"/><line nr="110" mi="0" ci="5" mb="0" cb="2"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="136"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Ray3D.java"><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="8" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="2"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="2"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="102"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="0" covered="17"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="1453"/><counter type="BRANCH" missed="3" covered="91"/><counter type="LINE" missed="0" covered="342"/><counter type="COMPLEXITY" missed="3" covered="174"/><counter type="METHOD" missed="0" covered="130"/><counter type="CLASS" missed="0" covered="12"/></package><package name="org/apache/commons/geometry/euclidean/twod"><class name="org/apache/commons/geometry/euclidean/twod/Vector2D$Unit" sourcefilename="Vector2D.java"><method name="&lt;init&gt;" desc="(DD)V" line="627"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="norm" desc="()D" line="633"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normSq" desc="()D" line="639"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalize" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D$Unit;" line="645"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalizeOrNull" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D$Unit;" line="651"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orthogonal" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D$Unit;" line="657"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withNorm" desc="(D)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="663"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negate" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D$Unit;" line="669"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(DD)Lorg/apache/commons/geometry/euclidean/twod/Vector2D$Unit;" line="680"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D$Unit;" line="690"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryCreateNormalized" desc="(DDZ)Lorg/apache/commons/geometry/euclidean/twod/Vector2D$Unit;" line="710"><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="598"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="153"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="33"/><counter type="COMPLEXITY" missed="0" covered="17"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/Vector2D" sourcefilename="Vector2D.java"><method name="&lt;init&gt;" desc="(DD)V" line="81"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getX" desc="()D" line="90"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getY" desc="()D" line="97"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="()[D" line="104"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDimension" desc="()I" line="110"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNaN" desc="()Z" line="116"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInfinite" desc="()Z" line="122"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFinite" desc="()Z" line="128"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vectorTo" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="134"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="directionTo" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D$Unit;" line="140"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lerp" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;D)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="146"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getZero" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="154"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="norm" desc="()D" line="160"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normSq" desc="()D" line="166"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withNorm" desc="(D)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="172"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="183"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(DLorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="189"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="195"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(DLorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="201"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negate" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="207"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalize" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D$Unit;" line="213"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalizeOrNull" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D$Unit;" line="219"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(D)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="225"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)D" line="231"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distanceSq" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)D" line="237"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dot" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)D" line="243"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="angle" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)D" line="255"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="project" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="275"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reject" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="281"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orthogonal" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D$Unit;" line="294"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orthogonal" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D$Unit;" line="300"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signedArea" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)D" line="318"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Ljava/util/function/UnaryOperator;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="329"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eq" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Z" line="335"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="348"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="375"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="393"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComponent" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;ZLorg/apache/commons/geometry/core/internal/DoubleFunction2N;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="411"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(DD)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="439"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([D)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="448"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/lang/String;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="461"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="max" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;[Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="470"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="max" desc="(Ljava/lang/Iterable;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="479"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMax" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Ljava/util/Iterator;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="493"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="min" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;[Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="513"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="min" desc="(Ljava/lang/Iterable;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="522"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMin" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Ljava/util/Iterator;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="536"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="centroid" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;[Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="557"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="centroid" desc="(Ljava/lang/Iterable;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="567"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeCentroid" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Ljava/util/Iterator;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="581"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)I" line="55"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="723"/><counter type="BRANCH" missed="0" covered="62"/><counter type="LINE" missed="0" covered="125"/><counter type="COMPLEXITY" missed="0" covered="83"/><counter type="METHOD" missed="0" covered="52"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/Bounds2D$BoundsLinecaster2D" sourcefilename="Bounds2D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/Bounds2D;Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)V" line="350"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSegment" desc="(DD)Lorg/apache/commons/geometry/euclidean/twod/Segment;" line="360"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createBoundaryIntersection" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/LinecastPoint2D;" line="366"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addBoundaryIntersections" desc="(DLjava/util/List;)V" line="372"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeNearFar" desc="()Z" line="394"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBoundaryIntersectionComparator" desc="()Ljava/util/Comparator;" line="401"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLineDir" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="407"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLineOrigin" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="413"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceStart" desc="()D" line="419"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceEnd" desc="()D" line="425"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/Line" sourcefilename="Line.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D$Unit;DLorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAngle" desc="()D" line="89"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDirection" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D$Unit;" line="97"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOffsetDirection" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="107"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOrigin" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="115"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOriginOffset" desc="()D" line="123"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="()Lorg/apache/commons/geometry/euclidean/twod/Line;" line="129"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/twod/Line;" line="135"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subspaceTransform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/twod/Line$SubspaceTransform;" line="166"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="span" desc="()Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;" line="187"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="segment" desc="(DD)Lorg/apache/commons/geometry/euclidean/twod/Segment;" line="200"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="segment" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Segment;" line="212"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseRayTo" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/ReverseRay;" line="224"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseRayTo" desc="(D)Lorg/apache/commons/geometry/euclidean/twod/ReverseRay;" line="235"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rayFrom" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Ray;" line="248"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rayFrom" desc="(D)Lorg/apache/commons/geometry/euclidean/twod/Ray;" line="260"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abscissa" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)D" line="274"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSubspace" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="280"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSpace" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="286"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSpace" desc="(D)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="300"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersection" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="313"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="angle" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;)D" line="338"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="project" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="347"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)D" line="353"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;)D" line="371"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="similarOrientation" desc="(Lorg/apache/commons/geometry/core/partitioning/Hyperplane;)Z" line="387"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pointAt" desc="(DD)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="402"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Z" line="413"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;)Z" line="423"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)D" line="435"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;)D" line="447"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isParallel" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;)Z" line="456"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eq" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Z" line="469"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="476"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="489"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="505"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="490"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="0" covered="88"/><counter type="COMPLEXITY" missed="1" covered="47"/><counter type="METHOD" missed="0" covered="36"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/ReverseRay" sourcefilename="ReverseRay.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFull" desc="()Z" line="54"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInfinite" desc="()Z" line="63"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFinite" desc="()Z" line="72"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()D" line="81"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCentroid" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="90"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStartPoint" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="99"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceStart" desc="()D" line="108"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEndPoint" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="114"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceEnd" desc="()D" line="120"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBounds" desc="()Lorg/apache/commons/geometry/euclidean/twod/Bounds2D;" line="129"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/twod/ReverseRay;" line="135"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="()Lorg/apache/commons/geometry/euclidean/twod/Ray;" line="144"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyAbscissa" desc="(D)Lorg/apache/commons/geometry/core/RegionLocation;" line="150"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="163"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closestAbscissa" desc="(D)D" line="177"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splitOnIntersection" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/core/partitioning/Split;" line="183"><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="186"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="45"/><counter type="COMPLEXITY" missed="0" covered="26"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/LineSubset" sourcefilename="LineSubset.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLine" desc="()Lorg/apache/commons/geometry/euclidean/twod/Line;" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHyperplane" desc="()Lorg/apache/commons/geometry/euclidean/twod/Line;" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSubspace" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSpace" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classify" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/core/RegionLocation;" line="88"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersection" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="104"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersection" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineSubset;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="118"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrecision" desc="()Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;" line="127"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNonIntersectingSplitResult" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;Lorg/apache/commons/geometry/euclidean/twod/LineSubset;)Lorg/apache/commons/geometry/core/partitioning/Split;" line="145"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splitterPlusIsPositiveFacing" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;)Z" line="164"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSplitResult" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;Lorg/apache/commons/geometry/euclidean/twod/LineSubset;Lorg/apache/commons/geometry/euclidean/twod/LineSubset;)Lorg/apache/commons/geometry/core/partitioning/Split;" line="177"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="132"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="21"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/Segment" sourcefilename="Segment.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFull" desc="()Z" line="59"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInfinite" desc="()Z" line="68"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFinite" desc="()Z" line="77"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()D" line="83"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCentroid" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="89"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStartPoint" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="95"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceStart" desc="()D" line="101"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEndPoint" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="107"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceEnd" desc="()D" line="113"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBounds" desc="()Lorg/apache/commons/geometry/euclidean/twod/Bounds2D;" line="119"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/twod/Segment;" line="128"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="()Lorg/apache/commons/geometry/euclidean/twod/Segment;" line="139"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyAbscissa" desc="(D)Lorg/apache/commons/geometry/core/RegionLocation;" line="145"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="164"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closestAbscissa" desc="(D)D" line="178"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splitOnIntersection" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/core/partitioning/Split;" line="184"><counter type="INSTRUCTION" missed="0" covered="90"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="246"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="0" covered="57"/><counter type="COMPLEXITY" missed="0" covered="29"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/Lines" sourcefilename="Lines.java"><method name="fromPoints" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/twod/Line;" line="43"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromPointAndDirection" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/twod/Line;" line="56"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromPointAndAngle" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;DLorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/twod/Line;" line="76"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rayFromPointAndDirection" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/twod/Ray;" line="91"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rayFromPoint" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Ray;" line="105"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rayFromLocation" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;D)Lorg/apache/commons/geometry/euclidean/twod/Ray;" line="120"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseRayFromPointAndDirection" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/twod/ReverseRay;" line="137"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseRayFromPoint" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/ReverseRay;" line="150"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseRayFromLocation" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;D)Lorg/apache/commons/geometry/euclidean/twod/ReverseRay;" line="165"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="segmentFromPoints" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/twod/Segment;" line="183"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="segmentFromPoints" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Segment;" line="201"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="segmentFromLocations" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;DD)Lorg/apache/commons/geometry/euclidean/twod/Segment;" line="216"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="span" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;)Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;" line="234"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subsetFromInterval" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;Lorg/apache/commons/geometry/euclidean/oned/Interval;)Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;" line="244"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subsetFromInterval" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;DD)Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;" line="259"><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateLinesEquivalent" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;Lorg/apache/commons/geometry/euclidean/twod/Line;)V" line="289"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="336"/><counter type="BRANCH" missed="1" covered="27"/><counter type="LINE" missed="0" covered="53"/><counter type="COMPLEXITY" missed="1" covered="29"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/Bounds2D$Builder" sourcefilename="Bounds2D.java"><method name="&lt;init&gt;" desc="()V" line="248"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Bounds2D$Builder;" line="267"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Ljava/lang/Iterable;)Lorg/apache/commons/geometry/euclidean/twod/Bounds2D$Builder;" line="284"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/apache/commons/geometry/euclidean/twod/Bounds2D;)Lorg/apache/commons/geometry/euclidean/twod/Bounds2D$Builder;" line="296"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasBounds" desc="()Z" line="306"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/apache/commons/geometry/euclidean/twod/Bounds2D;" line="320"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="159"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/RegionBSPTree2D$PartitionedRegionBuilder2D" sourcefilename="RegionBSPTree2D.java"><method name="&lt;init&gt;" desc="()V" line="398"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertPartition" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;)Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D$PartitionedRegionBuilder2D;" line="407"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertPartition" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D$PartitionedRegionBuilder2D;" line="416"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertAxisAlignedPartitions" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D$PartitionedRegionBuilder2D;" line="433"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertAxisAlignedGrid" desc="(Lorg/apache/commons/geometry/euclidean/twod/Bounds2D;ILorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D$PartitionedRegionBuilder2D;" line="457"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertAxisAlignedGridRecursive" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;ILorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="470"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertBoundary" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D$PartitionedRegionBuilder2D;" line="486"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertBoundaries" desc="(Ljava/lang/Iterable;)Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D$PartitionedRegionBuilder2D;" line="496"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertBoundaries" desc="(Lorg/apache/commons/geometry/euclidean/twod/BoundarySource2D;)Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D$PartitionedRegionBuilder2D;" line="508"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D;" line="519"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$insertBoundaries$0" desc="(Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D$PartitionedRegionBuilder2D;Lorg/apache/commons/geometry/core/partitioning/HyperplaneConvexSubset;)V" line="509"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="109"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/BoundarySourceLinecaster2D" sourcefilename="BoundarySourceLinecaster2D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/BoundarySource2D;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecast" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Ljava/util/List;" line="45"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecastFirst" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Lorg/apache/commons/geometry/euclidean/twod/LinecastPoint2D;" line="57"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIntersectionStream" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Ljava/util/stream/Stream;" line="69"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeIntersection" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Lorg/apache/commons/geometry/euclidean/twod/LinecastPoint2D;" line="82"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getIntersectionStream$0" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Lorg/apache/commons/geometry/euclidean/twod/LinecastPoint2D;" line="70"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/BoundarySource2D" sourcefilename="BoundarySource2D.java"><method name="toList" desc="()Lorg/apache/commons/geometry/euclidean/twod/BoundaryList2D;" line="34"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTree" desc="()Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D;" line="49"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecast" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Ljava/util/List;" line="58"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecastFirst" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Lorg/apache/commons/geometry/euclidean/twod/LinecastPoint2D;" line="64"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBounds" desc="()Lorg/apache/commons/geometry/euclidean/twod/Bounds2D;" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Lorg/apache/commons/geometry/euclidean/twod/BoundarySource2D;" line="81"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/util/Collection;)Lorg/apache/commons/geometry/euclidean/twod/BoundarySource2D;" line="90"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/BoundaryList2D" sourcefilename="BoundaryList2D.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toList" desc="()Lorg/apache/commons/geometry/euclidean/twod/BoundaryList2D;" line="45"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/ConvexArea" sourcefilename="ConvexArea.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="boundaryStream" desc="()Ljava/util/stream/Stream;" line="57"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBoundaryPaths" desc="()Ljava/util/List;" line="77"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertices" desc="()Ljava/util/List;" line="94"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/twod/ConvexArea;" line="117"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trim" desc="(Lorg/apache/commons/geometry/core/partitioning/HyperplaneConvexSubset;)Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;" line="123"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()D" line="129"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCentroid" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="149"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Lorg/apache/commons/geometry/core/partitioning/Hyperplane;)Lorg/apache/commons/geometry/core/partitioning/Split;" line="186"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTree" desc="()Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D;" line="193"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="full" desc="()Lorg/apache/commons/geometry/euclidean/twod/ConvexArea;" line="200"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convexPolygonFromVertices" desc="(Ljava/util/Collection;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/twod/ConvexArea;" line="213"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convexPolygonFromPath" desc="(Lorg/apache/commons/geometry/euclidean/twod/path/LinePath;)Lorg/apache/commons/geometry/euclidean/twod/ConvexArea;" line="223"><counter type="INSTRUCTION" missed="0" covered="120"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromBounds" desc="([Lorg/apache/commons/geometry/euclidean/twod/Line;)Lorg/apache/commons/geometry/euclidean/twod/ConvexArea;" line="285"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromBounds" desc="(Ljava/lang/Iterable;)Lorg/apache/commons/geometry/euclidean/twod/ConvexArea;" line="300"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="332"/><counter type="BRANCH" missed="0" covered="30"/><counter type="LINE" missed="0" covered="71"/><counter type="COMPLEXITY" missed="0" covered="31"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/LinecastPoint2D" sourcefilename="LinecastPoint2D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Line;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eq" desc="(Lorg/apache/commons/geometry/euclidean/twod/LinecastPoint2D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Z" line="63"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortAndFilter" desc="(Ljava/util/List;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsEq" desc="(Lorg/apache/commons/geometry/euclidean/twod/LinecastPoint2D;Ljava/util/List;)Z" line="104"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Lorg/apache/commons/geometry/euclidean/twod/LinecastPoint2D;Lorg/apache/commons/geometry/euclidean/twod/LinecastPoint2D;)I" line="39"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="127"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/RegionBSPTree2D$BoundaryProjector2D" sourcefilename="RegionBSPTree2D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)V" line="530"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="disambiguateClosestPoint" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="537"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/Linecastable2D" sourcefilename="Linecastable2D.java"><method name="linecast" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;)Ljava/util/List;" line="41"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecastFirst" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;)Lorg/apache/commons/geometry/euclidean/twod/LinecastPoint2D;" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/LineConvexSubset" sourcefilename="LineConvexSubset.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toConvex" desc="()Ljava/util/List;" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="55"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceRegion" desc="()Lorg/apache/commons/geometry/euclidean/oned/Interval;" line="85"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInterval" desc="()Lorg/apache/commons/geometry/euclidean/oned/Interval;" line="95"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Lorg/apache/commons/geometry/core/partitioning/Hyperplane;)Lorg/apache/commons/geometry/core/partitioning/Split;" line="101"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closest" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="114"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyAbscissa" desc="(D)Lorg/apache/commons/geometry/core/RegionLocation;" line="123"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/Ray" sourcefilename="Ray.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFull" desc="()Z" line="53"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInfinite" desc="()Z" line="62"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFinite" desc="()Z" line="71"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()D" line="80"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCentroid" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="89"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStartPoint" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="94"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceStart" desc="()D" line="100"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEndPoint" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="109"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceEnd" desc="()D" line="118"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBounds" desc="()Lorg/apache/commons/geometry/euclidean/twod/Bounds2D;" line="127"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDirection" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="134"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/twod/Ray;" line="140"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="()Lorg/apache/commons/geometry/euclidean/twod/ReverseRay;" line="149"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyAbscissa" desc="(D)Lorg/apache/commons/geometry/core/RegionLocation;" line="155"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="168"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closestAbscissa" desc="(D)D" line="182"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splitOnIntersection" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/core/partitioning/Split;" line="188"><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="190"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="0" covered="27"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/RegionBSPTree2D$RegionNode2D" sourcefilename="RegionBSPTree2D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/core/partitioning/bsp/AbstractBSPTree;)V" line="327"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeRegion" desc="()Lorg/apache/commons/geometry/euclidean/twod/ConvexArea;" line="336"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSelf" desc="()Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D$RegionNode2D;" line="355"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/Vector2D$Sum" sourcefilename="Vector2D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)V" line="760"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D$Sum;" line="768"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addScaled" desc="(DLorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D$Sum;" line="776"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="784"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D$Sum;" line="793"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D$Sum;" line="801"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;[Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D$Sum;" line="810"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D" sourcefilename="AffineTransformMatrix2D.java"><method name="&lt;init&gt;" desc="(DDDDDD)V" line="82"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="()[D" line="107"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="127"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyX" desc="(DD)D" line="144"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyY" desc="(DD)D" line="156"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyVector" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="175"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyVectorX" desc="(DD)D" line="187"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyVectorY" desc="(DD)D" line="199"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyDirection" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D$Unit;" line="207"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="determinant" desc="()D" line="213"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linear" desc="()Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="230"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linearTranspose" desc="()Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="246"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="257"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(DD)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="267"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scale" desc="(D)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="279"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scale" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="288"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scale" desc="(DD)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="298"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rotate" desc="(D)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="312"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rotate" desc="(Lorg/apache/commons/geometry/euclidean/twod/rotation/Rotation2D;)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="322"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rotate" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;D)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="334"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rotate" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/rotation/Rotation2D;)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="347"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shear" desc="(DD)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="358"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="373"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="premultiply" desc="(Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="388"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inverse" desc="()Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="401"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="430"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="447"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="468"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyVector" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/core/internal/DoubleFunction2N;)Ljava/lang/Object;" line="500"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([D)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="515"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/util/function/UnaryOperator;)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="533"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromColumnVectors" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="559"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromColumnVectors" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="571"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="identity" desc="()Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="582"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTranslation" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="590"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTranslation" desc="(DD)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="599"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createScale" desc="(D)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="610"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createScale" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="618"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createScale" desc="(DD)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="627"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createRotation" desc="(D)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="640"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createRotation" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;D)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="653"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createRotation" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/rotation/Rotation2D;)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="673"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createShear" desc="(DD)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="690"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;)Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="704"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="774"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="121"/><counter type="COMPLEXITY" missed="0" covered="55"/><counter type="METHOD" missed="0" covered="45"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/BoundarySourceBoundsBuilder2D" sourcefilename="BoundarySourceBoundsBuilder2D.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBounds" desc="(Lorg/apache/commons/geometry/euclidean/twod/BoundarySource2D;)Lorg/apache/commons/geometry/euclidean/twod/Bounds2D;" line="36"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/Bounds2D" sourcefilename="Bounds2D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSize" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Z" line="49"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Z" line="58"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Z" line="71"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersects" desc="(Lorg/apache/commons/geometry/euclidean/twod/Bounds2D;)Z" line="84"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersection" desc="(Lorg/apache/commons/geometry/euclidean/twod/Bounds2D;)Lorg/apache/commons/geometry/euclidean/twod/Bounds2D;" line="97"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersects" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;)Z" line="127"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersects" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Z" line="138"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersection" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;)Lorg/apache/commons/geometry/euclidean/twod/Segment;" line="151"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersection" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Lorg/apache/commons/geometry/euclidean/twod/Segment;" line="164"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecast" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Ljava/util/List;" line="170"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecastFirst" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Lorg/apache/commons/geometry/euclidean/twod/LinecastPoint2D;" line="176"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toRegion" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/twod/shape/Parallelogram;" line="186"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="192"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="198"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;[Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Bounds2D;" line="216"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/lang/Iterable;)Lorg/apache/commons/geometry/euclidean/twod/Bounds2D;" line="229"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lorg/apache/commons/geometry/euclidean/twod/Bounds2D$Builder;" line="240"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="325"/><counter type="BRANCH" missed="0" covered="38"/><counter type="LINE" missed="0" covered="59"/><counter type="COMPLEXITY" missed="0" covered="37"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/EmbeddedTreeLineSubset" sourcefilename="EmbeddedTreeLineSubset.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;Z)V" line="60"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;Lorg/apache/commons/geometry/euclidean/oned/RegionBSPTree1D;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFull" desc="()Z" line="77"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="83"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()D" line="89"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCentroid" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="95"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBounds" desc="()Lorg/apache/commons/geometry/euclidean/twod/Bounds2D;" line="105"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closest" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="123"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/twod/EmbeddedTreeLineSubset;" line="129"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toConvex" desc="()Ljava/util/List;" line="141"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceRegion" desc="()Lorg/apache/commons/geometry/euclidean/oned/RegionBSPTree1D;" line="156"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyAbscissa" desc="(D)Lorg/apache/commons/geometry/core/RegionLocation;" line="162"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Lorg/apache/commons/geometry/core/partitioning/Hyperplane;)Lorg/apache/commons/geometry/core/partitioning/Split;" line="177"><counter type="INSTRUCTION" missed="2" covered="87"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)V" line="217"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/apache/commons/geometry/euclidean/twod/EmbeddedTreeLineSubset;)V" line="229"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="237"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="290"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="0" covered="78"/><counter type="COMPLEXITY" missed="2" covered="24"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/RegionBSPTree2D" sourcefilename="RegionBSPTree2D.java"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Z)V" line="58"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="()Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D;" line="66"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="boundaries" desc="()Ljava/lang/Iterable;" line="75"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="boundaryStream" desc="()Ljava/util/stream/Stream;" line="81"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBoundaries" desc="()Ljava/util/List;" line="87"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBoundaryPaths" desc="()Ljava/util/List;" line="96"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/apache/commons/geometry/euclidean/twod/ConvexArea;)V" line="107"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toConvex" desc="()Ljava/util/List;" line="117"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toConvexRecursive" desc="(Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D$RegionNode2D;Lorg/apache/commons/geometry/euclidean/twod/ConvexArea;Ljava/util/List;)V" line="133"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Lorg/apache/commons/geometry/core/partitioning/Hyperplane;)Lorg/apache/commons/geometry/core/partitioning/Split;" line="150"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="project" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="158"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTree" desc="()Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D;" line="168"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecast" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Ljava/util/List;" line="174"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecastFirst" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Lorg/apache/commons/geometry/euclidean/twod/LinecastPoint2D;" line="183"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeBoundaryPaths" desc="()Ljava/util/List;" line="193"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeRegionSizeProperties" desc="()Lorg/apache/commons/geometry/core/partitioning/bsp/AbstractRegionBSPTree$RegionSizeProperties;" line="204"><counter type="INSTRUCTION" missed="0" covered="111"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invalidate" desc="()V" line="263"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createNode" desc="()Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D$RegionNode2D;" line="271"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="full" desc="()Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D;" line="278"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="empty" desc="()Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D;" line="285"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/lang/Iterable;)Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D;" line="295"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/lang/Iterable;Z)Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D;" line="306"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="partitionedRegionBuilder" desc="()Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D$PartitionedRegionBuilder2D;" line="317"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="314"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="0" covered="76"/><counter type="COMPLEXITY" missed="1" covered="33"/><counter type="METHOD" missed="0" covered="24"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/LineSpanningSubset" sourcefilename="LineSpanningSubset.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFull" desc="()Z" line="44"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInfinite" desc="()Z" line="53"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFinite" desc="()Z" line="62"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()D" line="71"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCentroid" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="80"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStartPoint" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="89"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceStart" desc="()D" line="98"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEndPoint" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="107"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubspaceEnd" desc="()D" line="116"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBounds" desc="()Lorg/apache/commons/geometry/euclidean/twod/Bounds2D;" line="125"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/twod/LineSpanningSubset;" line="131"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="()Lorg/apache/commons/geometry/euclidean/twod/LineSpanningSubset;" line="137"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="143"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closestAbscissa" desc="(D)D" line="154"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splitOnIntersection" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/core/partitioning/Split;" line="160"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/Line$SubspaceTransform" sourcefilename="Line.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/Line;Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;)V" line="525"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLine" desc="()Lorg/apache/commons/geometry/euclidean/twod/Line;" line="534"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTransform" desc="()Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;" line="542"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/RegionBSPTree2D$LinecastVisitor" sourcefilename="RegionBSPTree2D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;Z)V" line="555"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstResult" desc="()Lorg/apache/commons/geometry/euclidean/twod/LinecastPoint2D;" line="574"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResults" desc="()Ljava/util/List;" line="586"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitOrder" desc="(Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D$RegionNode2D;)Lorg/apache/commons/geometry/core/partitioning/bsp/BSPTreeVisitor$Order;" line="594"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D$RegionNode2D;)Lorg/apache/commons/geometry/core/partitioning/bsp/BSPTreeVisitor$Result;" line="607"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeLinecastPoint" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/RegionBSPTree2D$RegionNode2D;)Lorg/apache/commons/geometry/euclidean/twod/LinecastPoint2D;" line="643"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="168"/><counter type="BRANCH" missed="1" covered="27"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="1" covered="19"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/PolarCoordinates" sourcefilename="PolarCoordinates.java"><method name="&lt;init&gt;" desc="(DD)V" line="60"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRadius" desc="()D" line="78"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAzimuth" desc="()D" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDimension" desc="()I" line="92"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNaN" desc="()Z" line="98"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInfinite" desc="()Z" line="104"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFinite" desc="()Z" line="110"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toCartesian" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="118"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="128"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="154"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="172"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(DD)Lorg/apache/commons/geometry/euclidean/twod/PolarCoordinates;" line="183"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromCartesian" desc="(DD)Lorg/apache/commons/geometry/euclidean/twod/PolarCoordinates;" line="192"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromCartesian" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/PolarCoordinates;" line="203"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toCartesian" desc="(DD)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="213"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/lang/String;)Lorg/apache/commons/geometry/euclidean/twod/PolarCoordinates;" line="227"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalizeAzimuth" desc="(D)D" line="235"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="192"/><counter type="BRANCH" missed="0" covered="30"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="0" covered="32"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Lines.java"><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="2"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="2"/><line nr="106" mi="0" ci="12" mb="0" cb="0"/><line nr="108" mi="0" ci="8" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="2"/><line nr="121" mi="0" ci="12" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="2"/><line nr="151" mi="0" ci="12" mb="0" cb="0"/><line nr="153" mi="0" ci="8" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="2"/><line nr="166" mi="0" ci="12" mb="0" cb="0"/><line nr="169" mi="0" ci="8" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="7" mb="0" cb="0"/><line nr="201" mi="0" ci="9" mb="0" cb="0"/><line nr="216" mi="0" ci="6" mb="0" cb="4"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="0" ci="11" mb="0" cb="0"/><line nr="223" mi="0" ci="8" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="7" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="7" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="0"/><line nr="265" mi="0" ci="2" mb="0" cb="2"/><line nr="266" mi="0" ci="2" mb="0" cb="2"/><line nr="268" mi="0" ci="11" mb="0" cb="0"/><line nr="271" mi="0" ci="8" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="2"/><line nr="274" mi="0" ci="8" mb="0" cb="0"/><line nr="275" mi="0" ci="10" mb="1" cb="5"/><line nr="276" mi="0" ci="5" mb="0" cb="0"/><line nr="279" mi="0" ci="11" mb="0" cb="0"/><line nr="280" mi="0" ci="7" mb="0" cb="0"/><line nr="289" mi="0" ci="6" mb="0" cb="2"/><line nr="290" mi="0" ci="18" mb="0" cb="0"/><line nr="293" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="336"/><counter type="BRANCH" missed="1" covered="27"/><counter type="LINE" missed="0" covered="53"/><counter type="COMPLEXITY" missed="1" covered="29"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LinecastPoint2D.java"><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="2"/><line nr="41" mi="0" ci="9" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="11" mb="0" cb="2"/><line nr="64" mi="0" ci="11" mb="0" cb="2"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="2"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="9" mb="0" cb="2"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="2"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="10" mb="0" cb="2"/><line nr="107" mi="0" ci="5" mb="0" cb="2"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="127"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Segment.java"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="7" mb="0" cb="0"/><line nr="139" mi="0" ci="11" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="2"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="2"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="2"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="2"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="8" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="8" mb="0" cb="0"/><line nr="189" mi="0" ci="8" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="4"/><line nr="193" mi="0" ci="6" mb="0" cb="0"/><line nr="194" mi="0" ci="6" mb="0" cb="4"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="6" mb="0" cb="4"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="203" mi="0" ci="8" mb="0" cb="0"/><line nr="204" mi="0" ci="8" mb="0" cb="0"/><line nr="206" mi="0" ci="6" mb="0" cb="2"/><line nr="207" mi="0" ci="6" mb="0" cb="2"/><line nr="209" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="246"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="0" covered="57"/><counter type="COMPLEXITY" missed="0" covered="29"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmbeddedTreeLineSubset.java"><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="2"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="4"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="10" mb="0" cb="2"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="2"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="2"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="2"/><line nr="198" mi="0" ci="6" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="1" cb="1"/><line nr="202" mi="0" ci="8" mb="0" cb="0"/><line nr="203" mi="1" ci="1" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="1" cb="1"/><line nr="205" mi="0" ci="8" mb="0" cb="0"/><line nr="206" mi="1" ci="1" mb="0" cb="0"/><line nr="208" mi="0" ci="6" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><line nr="229" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="240" mi="0" ci="6" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="290"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="0" covered="78"/><counter type="COMPLEXITY" missed="2" covered="24"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Vector2D.java"><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="4"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="2"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="2"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="2"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="13" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="12" mb="0" cb="4"/><line nr="122" mi="0" ci="15" mb="0" cb="6"/><line nr="128" mi="0" ci="12" mb="0" cb="4"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="16" mb="0" cb="0"/><line nr="183" mi="0" ci="14" mb="0" cb="0"/><line nr="189" mi="0" ci="18" mb="0" cb="0"/><line nr="195" mi="0" ci="14" mb="0" cb="0"/><line nr="201" mi="0" ci="18" mb="0" cb="0"/><line nr="207" mi="0" ci="10" mb="0" cb="0"/><line nr="213" mi="0" ci="6" mb="0" cb="0"/><line nr="219" mi="0" ci="7" mb="0" cb="0"/><line nr="225" mi="0" ci="12" mb="0" cb="0"/><line nr="231" mi="0" ci="12" mb="0" cb="0"/><line nr="237" mi="0" ci="12" mb="0" cb="0"/><line nr="243" mi="0" ci="10" mb="0" cb="0"/><line nr="255" mi="0" ci="6" mb="0" cb="0"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="9" mb="0" cb="4"/><line nr="261" mi="0" ci="12" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="2"/><line nr="263" mi="0" ci="5" mb="0" cb="0"/><line nr="265" mi="0" ci="7" mb="0" cb="0"/><line nr="269" mi="0" ci="5" mb="0" cb="0"/><line nr="275" mi="0" ci="6" mb="0" cb="0"/><line nr="281" mi="0" ci="6" mb="0" cb="0"/><line nr="294" mi="0" ci="7" mb="0" cb="0"/><line nr="300" mi="0" ci="7" mb="0" cb="0"/><line nr="318" mi="0" ci="11" mb="0" cb="0"/><line nr="329" mi="0" ci="5" mb="0" cb="0"/><line nr="335" mi="0" ci="13" mb="0" cb="2"/><line nr="336" mi="0" ci="5" mb="0" cb="2"/><line nr="348" mi="0" ci="3" mb="0" cb="2"/><line nr="349" mi="0" ci="2" mb="0" cb="0"/><line nr="351" mi="0" ci="12" mb="0" cb="0"/><line nr="375" mi="0" ci="3" mb="0" cb="2"/><line nr="376" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="3" mb="0" cb="2"/><line nr="379" mi="0" ci="3" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="0" cb="2"/><line nr="381" mi="0" ci="3" mb="0" cb="0"/><line nr="384" mi="0" ci="11" mb="0" cb="2"/><line nr="385" mi="0" ci="5" mb="0" cb="2"/><line nr="387" mi="0" ci="2" mb="0" cb="0"/><line nr="393" mi="0" ci="7" mb="0" cb="0"/><line nr="411" mi="0" ci="4" mb="0" cb="0"/><line nr="419" mi="0" ci="4" mb="0" cb="0"/><line nr="421" mi="0" ci="4" mb="0" cb="0"/><line nr="423" mi="0" ci="5" mb="0" cb="0"/><line nr="424" mi="0" ci="5" mb="0" cb="0"/><line nr="426" mi="0" ci="2" mb="0" cb="2"/><line nr="427" mi="0" ci="12" mb="0" cb="0"/><line nr="430" mi="0" ci="6" mb="0" cb="0"/><line nr="439" mi="0" ci="6" mb="0" cb="0"/><line nr="448" mi="0" ci="4" mb="0" cb="2"/><line nr="449" mi="0" ci="15" mb="0" cb="0"/><line nr="451" mi="0" ci="10" mb="0" cb="0"/><line nr="461" mi="0" ci="6" mb="0" cb="0"/><line nr="470" mi="0" ci="6" mb="0" cb="0"/><line nr="479" mi="0" ci="3" mb="0" cb="0"/><line nr="480" mi="0" ci="3" mb="0" cb="2"/><line nr="481" mi="0" ci="5" mb="0" cb="0"/><line nr="484" mi="0" ci="6" mb="0" cb="0"/><line nr="493" mi="0" ci="3" mb="0" cb="0"/><line nr="494" mi="0" ci="3" mb="0" cb="0"/><line nr="497" mi="0" ci="3" mb="0" cb="2"/><line nr="498" mi="0" ci="4" mb="0" cb="0"/><line nr="500" mi="0" ci="5" mb="0" cb="0"/><line nr="501" mi="0" ci="6" mb="0" cb="0"/><line nr="504" mi="0" ci="4" mb="0" cb="0"/><line nr="513" mi="0" ci="6" mb="0" cb="0"/><line nr="522" mi="0" ci="3" mb="0" cb="0"/><line nr="523" mi="0" ci="3" mb="0" cb="2"/><line nr="524" mi="0" ci="5" mb="0" cb="0"/><line nr="527" mi="0" ci="6" mb="0" cb="0"/><line nr="536" mi="0" ci="3" mb="0" cb="0"/><line nr="537" mi="0" ci="3" mb="0" cb="0"/><line nr="540" mi="0" ci="3" mb="0" cb="2"/><line nr="541" mi="0" ci="4" mb="0" cb="0"/><line nr="543" mi="0" ci="5" mb="0" cb="0"/><line nr="544" mi="0" ci="6" mb="0" cb="0"/><line nr="547" mi="0" ci="4" mb="0" cb="0"/><line nr="557" mi="0" ci="6" mb="0" cb="0"/><line nr="567" mi="0" ci="3" mb="0" cb="0"/><line nr="568" mi="0" ci="3" mb="0" cb="2"/><line nr="569" mi="0" ci="5" mb="0" cb="0"/><line nr="572" mi="0" ci="6" mb="0" cb="0"/><line nr="581" mi="0" ci="3" mb="0" cb="0"/><line nr="582" mi="0" ci="2" mb="0" cb="0"/><line nr="584" mi="0" ci="3" mb="0" cb="2"/><line nr="585" mi="0" ci="6" mb="0" cb="0"/><line nr="586" mi="0" ci="2" mb="0" cb="0"/><line nr="589" mi="0" ci="8" mb="0" cb="0"/><line nr="598" mi="0" ci="6" mb="0" cb="0"/><line nr="600" mi="0" ci="6" mb="0" cb="0"/><line nr="602" mi="0" ci="6" mb="0" cb="0"/><line nr="604" mi="0" ci="7" mb="0" cb="0"/><line nr="627" mi="0" ci="5" mb="0" cb="0"/><line nr="628" mi="0" ci="1" mb="0" cb="0"/><line nr="633" mi="0" ci="2" mb="0" cb="0"/><line nr="639" mi="0" ci="2" mb="0" cb="0"/><line nr="645" mi="0" ci="2" mb="0" cb="0"/><line nr="651" mi="0" ci="2" mb="0" cb="0"/><line nr="657" mi="0" ci="9" mb="0" cb="0"/><line nr="663" mi="0" ci="4" mb="0" cb="0"/><line nr="669" mi="0" ci="10" mb="0" cb="0"/><line nr="680" mi="0" ci="5" mb="0" cb="0"/><line nr="690" mi="0" ci="4" mb="0" cb="2"/><line nr="691" mi="0" ci="3" mb="0" cb="0"/><line nr="692" mi="0" ci="5" mb="0" cb="0"/><line nr="710" mi="0" ci="4" mb="0" cb="0"/><line nr="711" mi="0" ci="4" mb="0" cb="0"/><line nr="712" mi="0" ci="3" mb="0" cb="2"/><line nr="713" mi="0" ci="10" mb="0" cb="0"/><line nr="723" mi="0" ci="6" mb="0" cb="0"/><line nr="724" mi="0" ci="4" mb="0" cb="2"/><line nr="725" mi="0" ci="4" mb="0" cb="0"/><line nr="726" mi="0" ci="5" mb="0" cb="0"/><line nr="728" mi="0" ci="4" mb="0" cb="0"/><line nr="729" mi="0" ci="4" mb="0" cb="0"/><line nr="732" mi="0" ci="6" mb="0" cb="0"/><line nr="734" mi="0" ci="3" mb="0" cb="2"/><line nr="735" mi="0" ci="10" mb="0" cb="0"/><line nr="738" mi="0" ci="2" mb="0" cb="2"/><line nr="739" mi="0" ci="3" mb="0" cb="0"/><line nr="741" mi="0" ci="2" mb="0" cb="0"/><line nr="760" mi="0" ci="2" mb="0" cb="0"/><line nr="761" mi="0" ci="5" mb="0" cb="0"/><line nr="762" mi="0" ci="5" mb="0" cb="0"/><line nr="763" mi="0" ci="1" mb="0" cb="0"/><line nr="768" mi="0" ci="6" mb="0" cb="0"/><line nr="769" mi="0" ci="6" mb="0" cb="0"/><line nr="770" mi="0" ci="2" mb="0" cb="0"/><line nr="776" mi="0" ci="7" mb="0" cb="0"/><line nr="777" mi="0" ci="7" mb="0" cb="0"/><line nr="778" mi="0" ci="2" mb="0" cb="0"/><line nr="784" mi="0" ci="4" mb="0" cb="0"/><line nr="785" mi="0" ci="3" mb="0" cb="0"/><line nr="786" mi="0" ci="1" mb="0" cb="0"/><line nr="793" mi="0" ci="5" mb="0" cb="0"/><line nr="801" mi="0" ci="5" mb="0" cb="0"/><line nr="810" mi="0" ci="5" mb="0" cb="0"/><line nr="811" mi="0" ci="16" mb="0" cb="2"/><line nr="812" mi="0" ci="4" mb="0" cb="0"/><line nr="814" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="964"/><counter type="BRANCH" missed="0" covered="74"/><counter type="LINE" missed="0" covered="177"/><counter type="COMPLEXITY" missed="0" covered="108"/><counter type="METHOD" missed="0" covered="71"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Ray.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="9" mb="0" cb="0"/><line nr="155" mi="0" ci="7" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="2"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="2"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="8" mb="0" cb="0"/><line nr="192" mi="0" ci="12" mb="0" cb="2"/><line nr="194" mi="0" ci="5" mb="0" cb="4"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="4"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="203" mi="0" ci="8" mb="0" cb="0"/><line nr="204" mi="0" ci="6" mb="0" cb="0"/><line nr="206" mi="0" ci="6" mb="0" cb="2"/><line nr="207" mi="0" ci="6" mb="0" cb="2"/><line nr="209" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="190"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="0" covered="27"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LineSubset.java"><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="2"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="10" mb="0" cb="4"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="10" mb="0" cb="4"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="2"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="2"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="13" mb="0" cb="2"/><line nr="177" mi="0" ci="5" mb="0" cb="2"/><line nr="178" mi="0" ci="6" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="132"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="21"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PolarCoordinates.java"><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="2"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="12" mb="0" cb="4"/><line nr="104" mi="0" ci="15" mb="0" cb="6"/><line nr="110" mi="0" ci="12" mb="0" cb="4"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="2"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="12" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="2"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="2"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="2"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="11" mb="0" cb="2"/><line nr="164" mi="0" ci="5" mb="0" cb="2"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="7" mb="0" cb="0"/><line nr="183" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="6" mb="0" cb="0"/><line nr="203" mi="0" ci="6" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="6" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="2"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="192"/><counter type="BRANCH" missed="0" covered="30"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="0" covered="32"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Line.java"><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="9" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="12" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="8" mb="0" cb="0"/><line nr="171" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="12" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="5" mb="0" cb="0"/><line nr="280" mi="0" ci="5" mb="0" cb="0"/><line nr="286" mi="0" ci="5" mb="0" cb="0"/><line nr="300" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="0" ci="11" mb="0" cb="0"/><line nr="302" mi="0" ci="7" mb="0" cb="0"/><line nr="313" mi="0" ci="6" mb="0" cb="0"/><line nr="314" mi="0" ci="5" mb="0" cb="2"/><line nr="316" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="0" ci="6" mb="0" cb="0"/><line nr="320" mi="0" ci="5" mb="0" cb="0"/><line nr="321" mi="0" ci="4" mb="0" cb="0"/><line nr="323" mi="0" ci="6" mb="0" cb="0"/><line nr="324" mi="0" ci="5" mb="0" cb="0"/><line nr="325" mi="0" ci="4" mb="0" cb="0"/><line nr="327" mi="0" ci="4" mb="0" cb="0"/><line nr="338" mi="0" ci="8" mb="0" cb="0"/><line nr="339" mi="0" ci="8" mb="0" cb="0"/><line nr="341" mi="0" ci="6" mb="0" cb="0"/><line nr="347" mi="0" ci="6" mb="0" cb="0"/><line nr="353" mi="0" ci="8" mb="0" cb="0"/><line nr="371" mi="0" ci="4" mb="0" cb="2"/><line nr="376" mi="0" ci="6" mb="0" cb="0"/><line nr="377" mi="0" ci="9" mb="0" cb="0"/><line nr="381" mi="0" ci="2" mb="0" cb="0"/><line nr="387" mi="0" ci="3" mb="0" cb="0"/><line nr="388" mi="0" ci="12" mb="0" cb="2"/><line nr="402" mi="0" ci="5" mb="0" cb="0"/><line nr="403" mi="0" ci="14" mb="0" cb="0"/><line nr="404" mi="0" ci="7" mb="0" cb="0"/><line nr="413" mi="0" ci="7" mb="0" cb="0"/><line nr="423" mi="0" ci="15" mb="0" cb="4"/><line nr="435" mi="0" ci="5" mb="0" cb="0"/><line nr="447" mi="0" ci="5" mb="0" cb="0"/><line nr="456" mi="0" ci="6" mb="0" cb="0"/><line nr="457" mi="0" ci="5" mb="0" cb="0"/><line nr="469" mi="0" ci="10" mb="0" cb="2"/><line nr="470" mi="0" ci="8" mb="1" cb="1"/><line nr="476" mi="0" ci="2" mb="0" cb="0"/><line nr="478" mi="0" ci="2" mb="0" cb="0"/><line nr="479" mi="0" ci="8" mb="0" cb="0"/><line nr="480" mi="0" ci="8" mb="0" cb="0"/><line nr="481" mi="0" ci="8" mb="0" cb="0"/><line nr="483" mi="0" ci="2" mb="0" cb="0"/><line nr="489" mi="0" ci="3" mb="0" cb="2"/><line nr="490" mi="0" ci="2" mb="0" cb="0"/><line nr="491" mi="0" ci="3" mb="0" cb="2"/><line nr="492" mi="0" ci="2" mb="0" cb="0"/><line nr="495" mi="0" ci="3" mb="0" cb="0"/><line nr="497" mi="0" ci="11" mb="0" cb="2"/><line nr="498" mi="0" ci="3" mb="0" cb="2"/><line nr="499" mi="0" ci="8" mb="0" cb="2"/><line nr="505" mi="0" ci="8" mb="0" cb="0"/><line nr="506" mi="0" ci="6" mb="0" cb="0"/><line nr="507" mi="0" ci="5" mb="0" cb="0"/><line nr="508" mi="0" ci="2" mb="0" cb="0"/><line nr="525" mi="0" ci="2" mb="0" cb="0"/><line nr="526" mi="0" ci="3" mb="0" cb="0"/><line nr="527" mi="0" ci="3" mb="0" cb="0"/><line nr="528" mi="0" ci="1" mb="0" cb="0"/><line nr="534" mi="0" ci="3" mb="0" cb="0"/><line nr="542" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="505"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="0" covered="94"/><counter type="COMPLEXITY" missed="1" covered="50"/><counter type="METHOD" missed="0" covered="39"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ReverseRay.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="9" mb="0" cb="0"/><line nr="150" mi="0" ci="7" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="2"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="2"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="8" mb="0" cb="0"/><line nr="187" mi="0" ci="12" mb="0" cb="2"/><line nr="189" mi="0" ci="5" mb="0" cb="4"/><line nr="191" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="4"/><line nr="194" mi="0" ci="6" mb="0" cb="0"/><line nr="198" mi="0" ci="8" mb="0" cb="0"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="201" mi="0" ci="6" mb="0" cb="2"/><line nr="202" mi="0" ci="6" mb="0" cb="2"/><line nr="204" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="186"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="45"/><counter type="COMPLEXITY" missed="0" covered="26"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BoundarySourceBoundsBuilder2D.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="2"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="2"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="1" cb="1"/><line nr="54" mi="0" ci="4" mb="0" cb="2"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RegionBSPTree2D.java"><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="2"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="7" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="2"/><line nr="135" mi="0" ci="3" mb="0" cb="2"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="9" mb="0" cb="0"/><line nr="143" mi="0" ci="9" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="6" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="2"/><line nr="205" mi="0" ci="6" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="2"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="11" mb="0" cb="2"/><line nr="222" mi="0" ci="3" mb="0" cb="2"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="10" mb="0" cb="0"/><line nr="240" mi="0" ci="10" mb="0" cb="0"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="7" mb="0" cb="4"/><line nr="250" mi="0" ci="4" mb="0" cb="0"/><line nr="252" mi="0" ci="4" mb="1" cb="1"/><line nr="253" mi="0" ci="10" mb="0" cb="0"/><line nr="257" mi="0" ci="6" mb="0" cb="0"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="1" mb="0" cb="0"/><line nr="271" mi="0" ci="6" mb="0" cb="0"/><line nr="278" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="5" mb="0" cb="0"/><line nr="295" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="5" mb="0" cb="0"/><line nr="307" mi="0" ci="3" mb="0" cb="0"/><line nr="309" mi="0" ci="2" mb="0" cb="0"/><line nr="317" mi="0" ci="5" mb="0" cb="0"/><line nr="327" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="1" mb="0" cb="0"/><line nr="336" mi="0" ci="2" mb="0" cb="0"/><line nr="338" mi="0" ci="2" mb="0" cb="0"/><line nr="341" mi="0" ci="6" mb="0" cb="2"/><line nr="342" mi="0" ci="5" mb="0" cb="0"/><line nr="344" mi="0" ci="11" mb="0" cb="2"/><line nr="346" mi="0" ci="2" mb="0" cb="0"/><line nr="347" mi="0" ci="1" mb="0" cb="0"/><line nr="349" mi="0" ci="2" mb="0" cb="0"/><line nr="355" mi="0" ci="2" mb="0" cb="0"/><line nr="398" mi="0" ci="3" mb="0" cb="0"/><line nr="399" mi="0" ci="1" mb="0" cb="0"/><line nr="407" mi="0" ci="5" mb="0" cb="0"/><line nr="416" mi="0" ci="3" mb="0" cb="0"/><line nr="418" mi="0" ci="2" mb="0" cb="0"/><line nr="433" mi="0" ci="7" mb="0" cb="0"/><line nr="434" mi="0" ci="7" mb="0" cb="0"/><line nr="436" mi="0" ci="2" mb="0" cb="0"/><line nr="457" mi="0" ci="10" mb="0" cb="0"/><line nr="459" mi="0" ci="2" mb="0" cb="0"/><line nr="470" mi="0" ci="2" mb="0" cb="2"/><line nr="471" mi="0" ci="5" mb="0" cb="0"/><line nr="473" mi="0" ci="5" mb="0" cb="0"/><line nr="475" mi="0" ci="4" mb="0" cb="0"/><line nr="476" mi="0" ci="6" mb="0" cb="0"/><line nr="477" mi="0" ci="6" mb="0" cb="0"/><line nr="479" mi="0" ci="1" mb="0" cb="0"/><line nr="486" mi="0" ci="3" mb="0" cb="0"/><line nr="488" mi="0" ci="2" mb="0" cb="0"/><line nr="496" mi="0" ci="10" mb="0" cb="2"/><line nr="497" mi="0" ci="3" mb="0" cb="0"/><line nr="498" mi="0" ci="1" mb="0" cb="0"/><line nr="500" mi="0" ci="2" mb="0" cb="0"/><line nr="508" mi="0" ci="3" mb="0" cb="0"/><line nr="509" mi="0" ci="8" mb="0" cb="0"/><line nr="512" mi="0" ci="2" mb="0" cb="0"/><line nr="519" mi="0" ci="4" mb="0" cb="0"/><line nr="530" mi="0" ci="3" mb="0" cb="0"/><line nr="531" mi="0" ci="1" mb="0" cb="0"/><line nr="537" mi="0" ci="5" mb="0" cb="0"/><line nr="538" mi="0" ci="6" mb="0" cb="2"/><line nr="555" mi="0" ci="3" mb="0" cb="0"/><line nr="558" mi="0" ci="5" mb="0" cb="0"/><line nr="565" mi="0" ci="2" mb="0" cb="0"/><line nr="566" mi="0" ci="3" mb="0" cb="0"/><line nr="567" mi="0" ci="3" mb="0" cb="0"/><line nr="568" mi="0" ci="1" mb="0" cb="0"/><line nr="574" mi="0" ci="3" mb="0" cb="0"/><line nr="576" mi="0" ci="4" mb="0" cb="2"/><line nr="577" mi="0" ci="2" mb="0" cb="0"/><line nr="578" mi="0" ci="4" mb="0" cb="0"/><line nr="586" mi="0" ci="3" mb="0" cb="0"/><line nr="588" mi="0" ci="3" mb="0" cb="0"/><line nr="594" mi="0" ci="4" mb="0" cb="0"/><line nr="595" mi="0" ci="4" mb="0" cb="0"/><line nr="597" mi="0" ci="12" mb="0" cb="2"/><line nr="599" mi="0" ci="3" mb="0" cb="2"/><line nr="600" mi="0" ci="2" mb="0" cb="0"/><line nr="601" mi="0" ci="1" mb="0" cb="0"/><line nr="607" mi="0" ci="3" mb="0" cb="2"/><line nr="609" mi="0" ci="4" mb="0" cb="0"/><line nr="610" mi="0" ci="6" mb="0" cb="0"/><line nr="612" mi="0" ci="2" mb="1" cb="1"/><line nr="613" mi="0" ci="8" mb="0" cb="4"/><line nr="614" mi="0" ci="8" mb="0" cb="2"/><line nr="617" mi="0" ci="2" mb="0" cb="0"/><line nr="618" mi="0" ci="5" mb="0" cb="2"/><line nr="621" mi="0" ci="5" mb="0" cb="0"/><line nr="622" mi="0" ci="2" mb="0" cb="2"/><line nr="623" mi="0" ci="5" mb="0" cb="0"/><line nr="626" mi="0" ci="7" mb="0" cb="0"/><line nr="632" mi="0" ci="2" mb="0" cb="0"/><line nr="643" mi="0" ci="4" mb="0" cb="0"/><line nr="644" mi="0" ci="3" mb="0" cb="0"/><line nr="646" mi="0" ci="2" mb="0" cb="0"/><line nr="647" mi="0" ci="2" mb="0" cb="0"/><line nr="649" mi="0" ci="4" mb="0" cb="2"/><line nr="651" mi="0" ci="2" mb="0" cb="0"/><line nr="652" mi="0" ci="3" mb="0" cb="0"/><line nr="653" mi="0" ci="4" mb="0" cb="2"/><line nr="655" mi="0" ci="2" mb="0" cb="0"/><line nr="658" mi="0" ci="2" mb="0" cb="2"/><line nr="659" mi="0" ci="3" mb="0" cb="0"/><line nr="660" mi="0" ci="2" mb="0" cb="2"/><line nr="661" mi="0" ci="3" mb="0" cb="0"/><line nr="664" mi="0" ci="9" mb="0" cb="0"/><line nr="667" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="643"/><counter type="BRANCH" missed="2" covered="56"/><counter type="LINE" missed="0" covered="164"/><counter type="COMPLEXITY" missed="2" covered="73"/><counter type="METHOD" missed="0" covered="46"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="ConvexArea.java"><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="2"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="2"/><line nr="104" mi="0" ci="8" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="8" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="2"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="11" mb="0" cb="2"/><line nr="136" mi="0" ci="3" mb="0" cb="2"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="8" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="10" mb="0" cb="2"/><line nr="160" mi="0" ci="3" mb="0" cb="2"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="10" mb="0" cb="0"/><line nr="173" mi="0" ci="10" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="2"/><line nr="177" mi="0" ci="10" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="7" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="2"/><line nr="224" mi="0" ci="12" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="2"/><line nr="229" mi="0" ci="12" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="10" mb="0" cb="2"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="2"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="2"/><line nr="257" mi="0" ci="12" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="2"/><line nr="267" mi="0" ci="12" mb="0" cb="0"/><line nr="270" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="300" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="0" ci="2" mb="0" cb="0"/><line nr="302" mi="0" ci="10" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="332"/><counter type="BRANCH" missed="0" covered="30"/><counter type="LINE" missed="0" covered="71"/><counter type="COMPLEXITY" missed="0" covered="31"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Bounds2D.java"><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="2"/><line nr="52" mi="0" ci="6" mb="0" cb="2"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="13" mb="0" cb="4"/><line nr="65" mi="0" ci="11" mb="0" cb="4"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="16" mb="0" cb="4"/><line nr="78" mi="0" ci="12" mb="0" cb="4"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="14" mb="0" cb="4"/><line nr="91" mi="0" ci="14" mb="0" cb="4"/><line nr="97" mi="0" ci="4" mb="0" cb="2"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="7" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="8" mb="0" cb="0"/><line nr="170" mi="0" ci="7" mb="0" cb="0"/><line nr="176" mi="0" ci="8" mb="0" cb="0"/><line nr="186" mi="0" ci="9" mb="0" cb="0"/><line nr="192" mi="0" ci="14" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="2"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="2"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="9" mb="0" cb="2"/><line nr="207" mi="0" ci="9" mb="0" cb="2"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="270" mi="0" ci="6" mb="0" cb="0"/><line nr="271" mi="0" ci="6" mb="0" cb="0"/><line nr="273" mi="0" ci="6" mb="0" cb="0"/><line nr="274" mi="0" ci="6" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="284" mi="0" ci="10" mb="0" cb="2"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="1" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="296" mi="0" ci="6" mb="0" cb="0"/><line nr="297" mi="0" ci="6" mb="0" cb="0"/><line nr="299" mi="0" ci="2" mb="0" cb="0"/><line nr="306" mi="0" ci="7" mb="0" cb="2"/><line nr="307" mi="0" ci="4" mb="0" cb="2"/><line nr="308" mi="0" ci="4" mb="1" cb="1"/><line nr="309" mi="0" ci="5" mb="0" cb="2"/><line nr="320" mi="0" ci="6" mb="0" cb="0"/><line nr="321" mi="0" ci="6" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="2"/><line nr="324" mi="0" ci="11" mb="0" cb="4"/><line nr="325" mi="0" ci="7" mb="1" cb="3"/><line nr="326" mi="0" ci="5" mb="0" cb="0"/><line nr="329" mi="0" ci="16" mb="0" cb="0"/><line nr="332" mi="0" ci="7" mb="0" cb="0"/><line nr="350" mi="0" ci="3" mb="0" cb="0"/><line nr="351" mi="0" ci="6" mb="0" cb="0"/><line nr="353" mi="0" ci="3" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="1" mb="0" cb="0"/><line nr="360" mi="0" ci="6" mb="0" cb="0"/><line nr="366" mi="0" ci="8" mb="0" cb="0"/><line nr="372" mi="0" ci="6" mb="0" cb="2"/><line nr="373" mi="0" ci="5" mb="0" cb="0"/><line nr="375" mi="0" ci="7" mb="0" cb="0"/><line nr="382" mi="0" ci="7" mb="0" cb="0"/><line nr="389" mi="0" ci="1" mb="0" cb="0"/><line nr="394" mi="0" ci="7" mb="0" cb="2"/><line nr="395" mi="0" ci="5" mb="0" cb="2"/><line nr="401" mi="0" ci="2" mb="0" cb="0"/><line nr="407" mi="0" ci="4" mb="0" cb="0"/><line nr="413" mi="0" ci="4" mb="0" cb="0"/><line nr="419" mi="0" ci="4" mb="0" cb="0"/><line nr="425" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="571"/><counter type="BRANCH" missed="2" covered="62"/><counter type="LINE" missed="0" covered="109"/><counter type="COMPLEXITY" missed="2" covered="64"/><counter type="METHOD" missed="0" covered="34"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Linecastable2D.java"><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LineSpanningSubset.java"><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="8" mb="0" cb="0"/><line nr="137" mi="0" ci="7" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LineConvexSubset.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="2"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BoundaryList2D.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BoundarySource2D.java"><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AffineTransformMatrix2D.java"><line nr="52" mi="0" ci="11" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="33" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="175" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="8" mb="0" cb="0"/><line nr="199" mi="0" ci="8" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="213" mi="0" ci="10" mb="0" cb="0"/><line nr="230" mi="0" ci="14" mb="0" cb="0"/><line nr="246" mi="0" ci="14" mb="0" cb="0"/><line nr="257" mi="0" ci="7" mb="0" cb="0"/><line nr="267" mi="0" ci="20" mb="0" cb="0"/><line nr="279" mi="0" ci="5" mb="0" cb="0"/><line nr="288" mi="0" ci="7" mb="0" cb="0"/><line nr="298" mi="0" ci="28" mb="0" cb="0"/><line nr="312" mi="0" ci="5" mb="0" cb="0"/><line nr="322" mi="0" ci="5" mb="0" cb="0"/><line nr="334" mi="0" ci="6" mb="0" cb="0"/><line nr="347" mi="0" ci="6" mb="0" cb="0"/><line nr="358" mi="0" ci="6" mb="0" cb="0"/><line nr="373" mi="0" ci="4" mb="0" cb="0"/><line nr="388" mi="0" ci="4" mb="0" cb="0"/><line nr="401" mi="0" ci="4" mb="0" cb="0"/><line nr="404" mi="0" ci="4" mb="0" cb="0"/><line nr="405" mi="0" ci="4" mb="0" cb="0"/><line nr="410" mi="0" ci="4" mb="0" cb="0"/><line nr="412" mi="0" ci="5" mb="0" cb="0"/><line nr="413" mi="0" ci="6" mb="0" cb="0"/><line nr="415" mi="0" ci="6" mb="0" cb="0"/><line nr="416" mi="0" ci="5" mb="0" cb="0"/><line nr="418" mi="0" ci="12" mb="0" cb="0"/><line nr="419" mi="0" ci="13" mb="0" cb="0"/><line nr="421" mi="0" ci="10" mb="0" cb="0"/><line nr="430" mi="0" ci="2" mb="0" cb="0"/><line nr="431" mi="0" ci="2" mb="0" cb="0"/><line nr="433" mi="0" ci="16" mb="0" cb="0"/><line nr="434" mi="0" ci="16" mb="0" cb="0"/><line nr="436" mi="0" ci="2" mb="0" cb="0"/><line nr="447" mi="0" ci="3" mb="0" cb="2"/><line nr="448" mi="0" ci="2" mb="0" cb="0"/><line nr="450" mi="0" ci="3" mb="0" cb="2"/><line nr="451" mi="0" ci="2" mb="0" cb="0"/><line nr="454" mi="0" ci="3" mb="0" cb="0"/><line nr="456" mi="0" ci="11" mb="0" cb="2"/><line nr="457" mi="0" ci="6" mb="0" cb="2"/><line nr="458" mi="0" ci="6" mb="0" cb="2"/><line nr="460" mi="0" ci="6" mb="0" cb="2"/><line nr="461" mi="0" ci="6" mb="0" cb="2"/><line nr="462" mi="0" ci="5" mb="0" cb="2"/><line nr="468" mi="0" ci="4" mb="0" cb="0"/><line nr="470" mi="0" ci="5" mb="0" cb="0"/><line nr="472" mi="0" ci="2" mb="0" cb="0"/><line nr="473" mi="0" ci="3" mb="0" cb="0"/><line nr="474" mi="0" ci="2" mb="0" cb="0"/><line nr="475" mi="0" ci="3" mb="0" cb="0"/><line nr="476" mi="0" ci="2" mb="0" cb="0"/><line nr="477" mi="0" ci="3" mb="0" cb="0"/><line nr="479" mi="0" ci="2" mb="0" cb="0"/><line nr="480" mi="0" ci="3" mb="0" cb="0"/><line nr="481" mi="0" ci="2" mb="0" cb="0"/><line nr="482" mi="0" ci="3" mb="0" cb="0"/><line nr="483" mi="0" ci="2" mb="0" cb="0"/><line nr="485" mi="0" ci="2" mb="0" cb="0"/><line nr="487" mi="0" ci="3" mb="0" cb="0"/><line nr="500" mi="0" ci="3" mb="0" cb="0"/><line nr="501" mi="0" ci="3" mb="0" cb="0"/><line nr="503" mi="0" ci="6" mb="0" cb="0"/><line nr="504" mi="0" ci="4" mb="0" cb="0"/><line nr="505" mi="0" ci="1" mb="0" cb="0"/><line nr="515" mi="0" ci="4" mb="0" cb="2"/><line nr="516" mi="0" ci="17" mb="0" cb="0"/><line nr="519" mi="0" ci="22" mb="0" cb="0"/><line nr="533" mi="0" ci="5" mb="0" cb="0"/><line nr="534" mi="0" ci="5" mb="0" cb="0"/><line nr="535" mi="0" ci="5" mb="0" cb="0"/><line nr="537" mi="0" ci="4" mb="0" cb="0"/><line nr="538" mi="0" ci="4" mb="0" cb="0"/><line nr="540" mi="0" ci="5" mb="0" cb="0"/><line nr="542" mi="0" ci="3" mb="0" cb="0"/><line nr="543" mi="0" ci="3" mb="0" cb="2"/><line nr="544" mi="0" ci="12" mb="0" cb="0"/><line nr="547" mi="0" ci="2" mb="0" cb="0"/><line nr="559" mi="0" ci="5" mb="0" cb="0"/><line nr="571" mi="0" ci="4" mb="0" cb="0"/><line nr="572" mi="0" ci="6" mb="0" cb="0"/><line nr="573" mi="0" ci="6" mb="0" cb="0"/><line nr="582" mi="0" ci="2" mb="0" cb="0"/><line nr="590" mi="0" ci="6" mb="0" cb="0"/><line nr="599" mi="0" ci="10" mb="0" cb="0"/><line nr="610" mi="0" ci="4" mb="0" cb="0"/><line nr="618" mi="0" ci="6" mb="0" cb="0"/><line nr="627" mi="0" ci="10" mb="0" cb="0"/><line nr="640" mi="0" ci="4" mb="0" cb="0"/><line nr="653" mi="0" ci="3" mb="0" cb="0"/><line nr="654" mi="0" ci="3" mb="0" cb="0"/><line nr="656" mi="0" ci="3" mb="0" cb="0"/><line nr="657" mi="0" ci="3" mb="0" cb="0"/><line nr="659" mi="0" ci="29" mb="0" cb="0"/><line nr="673" mi="0" ci="5" mb="0" cb="0"/><line nr="690" mi="0" ci="10" mb="0" cb="0"/><line nr="704" mi="0" ci="10" mb="0" cb="0"/><line nr="705" mi="0" ci="10" mb="0" cb="0"/><line nr="706" mi="0" ci="13" mb="0" cb="0"/><line nr="708" mi="0" ci="10" mb="0" cb="0"/><line nr="709" mi="0" ci="10" mb="0" cb="0"/><line nr="710" mi="0" ci="13" mb="0" cb="0"/><line nr="712" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="774"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="121"/><counter type="COMPLEXITY" missed="0" covered="55"/><counter type="METHOD" missed="0" covered="45"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BoundarySourceLinecaster2D.java"><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="2"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="2" covered="5817"/><counter type="BRANCH" missed="9" covered="443"/><counter type="LINE" missed="0" covered="1201"/><counter type="COMPLEXITY" missed="9" covered="631"/><counter type="METHOD" missed="0" covered="414"/><counter type="CLASS" missed="0" covered="30"/></package><package name="org/apache/commons/geometry/euclidean"><class name="org/apache/commons/geometry/euclidean/AbstractNSphere" sourcefilename="AbstractNSphere.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/EuclideanVector;DLorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCenter" desc="()Lorg/apache/commons/geometry/euclidean/EuclideanVector;" line="72"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRadius" desc="()D" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrecision" desc="()Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;" line="87"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFull" desc="()Z" line="96"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="105"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCentroid" desc="()Lorg/apache/commons/geometry/euclidean/EuclideanVector;" line="114"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classify" desc="(Lorg/apache/commons/geometry/euclidean/EuclideanVector;)Lorg/apache/commons/geometry/core/RegionLocation;" line="120"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="133"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="139"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="155"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="project" desc="(Lorg/apache/commons/geometry/euclidean/EuclideanVector;Lorg/apache/commons/geometry/euclidean/EuclideanVector;)Lorg/apache/commons/geometry/euclidean/EuclideanVector;" line="175"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersections" desc="(Lorg/apache/commons/geometry/core/Embedding;Ljava/util/function/ToDoubleBiFunction;Ljava/util/function/ToDoubleBiFunction;)Ljava/util/List;" line="208"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firstIntersection" desc="(Lorg/apache/commons/geometry/core/Embedding;Ljava/util/function/ToDoubleBiFunction;Ljava/util/function/ToDoubleBiFunction;)Lorg/apache/commons/geometry/euclidean/EuclideanVector;" line="244"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="302"/><counter type="BRANCH" missed="0" covered="30"/><counter type="LINE" missed="0" covered="61"/><counter type="COMPLEXITY" missed="0" covered="29"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/PointMap1DImpl$NearToFarIterator" sourcefilename="PointMap1DImpl.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/PointMap1DImpl;Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)V" line="135"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="146"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/util/Map$Entry;" line="159"><counter type="INSTRUCTION" missed="1" covered="41"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextEntry" desc="(Ljava/util/Iterator;)Lorg/apache/commons/geometry/core/internal/DistancedValue;" line="185"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="114"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="1" covered="25"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/AbstractAffineTransformMatrix" sourcefilename="AbstractAffineTransformMatrix.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalTransform" desc="()Lorg/apache/commons/geometry/euclidean/AbstractAffineTransformMatrix;" line="75"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preservesOrientation" desc="()Z" line="84"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/PointMap1DImpl$FarToNearIterator" sourcefilename="PointMap1DImpl.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/PointMap1DImpl;Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)V" line="215"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="234"><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/util/Map$Entry;" line="263"><counter type="INSTRUCTION" missed="1" covered="41"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="165"/><counter type="BRANCH" missed="1" covered="29"/><counter type="LINE" missed="1" covered="30"/><counter type="COMPLEXITY" missed="1" covered="17"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/AbstractLinecastPoint" sourcefilename="AbstractLinecastPoint.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/EuclideanVector;Lorg/apache/commons/geometry/euclidean/EuclideanVector;Lorg/apache/commons/geometry/core/Embedding;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPoint" desc="()Lorg/apache/commons/geometry/euclidean/EuclideanVector;" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNormal" desc="()Lorg/apache/commons/geometry/euclidean/EuclideanVector;" line="72"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLine" desc="()Lorg/apache/commons/geometry/core/Embedding;" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAbscissa" desc="()D" line="87"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="93"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="99"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="116"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="126"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/AbstractBounds" sourcefilename="AbstractBounds.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/EuclideanVector;Lorg/apache/commons/geometry/euclidean/EuclideanVector;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMin" desc="()Lorg/apache/commons/geometry/euclidean/EuclideanVector;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMax" desc="()Lorg/apache/commons/geometry/euclidean/EuclideanVector;" line="64"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDiagonal" desc="()Lorg/apache/commons/geometry/euclidean/EuclideanVector;" line="72"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCentroid" desc="()Lorg/apache/commons/geometry/euclidean/EuclideanVector;" line="79"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eq" desc="(Lorg/apache/commons/geometry/euclidean/AbstractBounds;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Z" line="148"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="155"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/EuclideanCollections" sourcefilename="EuclideanCollections.java"><method name="pointSet1D" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/core/collection/PointSet;" line="42"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pointMap1D" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/core/collection/PointMap;" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pointSet2D" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/core/collection/PointSet;" line="65"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pointMap2D" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/core/collection/PointMap;" line="77"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pointSet3D" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/core/collection/PointSet;" line="88"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pointMap3D" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/core/collection/PointMap;" line="100"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/PointMap3DImpl$MapNode3D" sourcefilename="PointMap3DImpl.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/core/internal/AbstractBucketPointMap;Lorg/apache/commons/geometry/core/internal/AbstractBucketPointMap$BucketNode;I)V" line="125"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeSplit" desc="()V" line="131"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSearchLocation" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)I" line="142"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInsertLocation" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)I" line="163"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testChildLocation" desc="(II)Z" line="182"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeLeaf" desc="(Ljava/util/List;)V" line="189"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinChildDistance" desc="(ILorg/apache/commons/geometry/euclidean/threed/Vector3D;I)D" line="197"><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxChildDistance" desc="(ILorg/apache/commons/geometry/euclidean/threed/Vector3D;I)D" line="228"><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="309"/><counter type="BRANCH" missed="0" covered="38"/><counter type="LINE" missed="0" covered="62"/><counter type="COMPLEXITY" missed="0" covered="27"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/AbstractBounds$BoundsLinecaster" sourcefilename="AbstractBounds.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/AbstractBounds;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="180"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersectsRegion" desc="()Z" line="199"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRegionIntersection" desc="()Ljava/lang/Object;" line="210"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBoundaryIntersections" desc="()Ljava/util/List;" line="225"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstBoundaryIntersection" desc="()Ljava/lang/Object;" line="248"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addBoundaryIntersectionIfPresent" desc="(Lorg/apache/commons/geometry/euclidean/EuclideanVector;Lorg/apache/commons/geometry/euclidean/EuclideanVector;Lorg/apache/commons/geometry/euclidean/EuclideanVector;Ljava/util/function/ToDoubleFunction;Ljava/util/List;)V" line="272"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateNearFar" desc="(Ljava/util/function/ToDoubleFunction;)Z" line="296"><counter type="INSTRUCTION" missed="0" covered="90"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="254"/><counter type="BRANCH" missed="1" covered="33"/><counter type="LINE" missed="0" covered="52"/><counter type="COMPLEXITY" missed="1" covered="23"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/PointMap2DImpl" sourcefilename="PointMap2DImpl.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pointsEq" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Z" line="79"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="disambiguatePointComparison" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)I" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/EuclideanTransform" sourcefilename="EuclideanTransform.java"/><class name="org/apache/commons/geometry/euclidean/PointMap1DImpl" sourcefilename="PointMap1DImpl.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsKey" desc="(Ljava/lang/Object;)Z" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keySet" desc="()Ljava/util/Set;" line="71"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entrySet" desc="()Ljava/util/Set;" line="77"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntryInternal" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Ljava/util/Map$Entry;" line="83"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putInternal" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;Ljava/lang/Object;)Ljava/lang/Object;" line="96"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nearToFarIterator" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Ljava/util/Iterator;" line="102"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="farToNearIterator" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Ljava/util/Iterator;" line="108"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/EuclideanVectorSum" sourcefilename="EuclideanVectorSum.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lorg/apache/commons/geometry/euclidean/EuclideanVector;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/EuclideanVector" sourcefilename="EuclideanVector.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isZero" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Z" line="91"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCheckedNorm" desc="()D" line="100"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/PointMap3DImpl" sourcefilename="PointMap3DImpl.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pointsEq" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Z" line="99"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="disambiguatePointComparison" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)I" line="105"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="73"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/PointMap2DImpl$MapNode2D" sourcefilename="PointMap2DImpl.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/core/internal/AbstractBucketPointMap;Lorg/apache/commons/geometry/core/internal/AbstractBucketPointMap$BucketNode;I)V" line="105"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSearchLocation" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)I" line="111"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInsertLocation" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)I" line="128"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeSplit" desc="()V" line="143"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testChildLocation" desc="(II)Z" line="154"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeLeaf" desc="(Ljava/util/List;)V" line="161"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinChildDistance" desc="(ILorg/apache/commons/geometry/euclidean/twod/Vector2D;I)D" line="169"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxChildDistance" desc="(ILorg/apache/commons/geometry/euclidean/twod/Vector2D;I)D" line="190"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="221"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="0" covered="47"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/MultiDimensionalEuclideanVector" sourcefilename="MultiDimensionalEuclideanVector.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="EuclideanTransform.java"/><sourcefile name="PointMap2DImpl.java"><line nr="58" mi="0" ci="20" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="7" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="7" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="10" mb="0" cb="2"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="9" mb="0" cb="2"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="11" mb="0" cb="2"/><line nr="172" mi="0" ci="11" mb="0" cb="2"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="2"/><line nr="177" mi="0" ci="3" mb="0" cb="2"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="2"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="2"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="11" mb="0" cb="2"/><line nr="196" mi="0" ci="11" mb="0" cb="2"/><line nr="198" mi="0" ci="4" mb="0" cb="4"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="9" mb="0" cb="0"/><line nr="203" mi="0" ci="8" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="259"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="0" covered="52"/><counter type="COMPLEXITY" missed="0" covered="24"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AbstractAffineTransformMatrix.java"><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="9" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractBounds.java"><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="148" mi="0" ci="11" mb="0" cb="2"/><line nr="149" mi="0" ci="7" mb="0" cb="2"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="199" mi="0" ci="7" mb="0" cb="2"/><line nr="200" mi="0" ci="8" mb="0" cb="2"/><line nr="201" mi="0" ci="8" mb="0" cb="2"/><line nr="210" mi="0" ci="3" mb="0" cb="2"/><line nr="211" mi="0" ci="6" mb="0" cb="0"/><line nr="212" mi="0" ci="6" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="2"/><line nr="226" mi="0" ci="7" mb="0" cb="0"/><line nr="227" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="8" mb="0" cb="2"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="4" mb="0" cb="2"/><line nr="250" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="8" mb="0" cb="2"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="6" mb="0" cb="0"/><line nr="275" mi="0" ci="6" mb="0" cb="0"/><line nr="277" mi="0" ci="6" mb="0" cb="2"/><line nr="278" mi="0" ci="7" mb="0" cb="0"/><line nr="281" mi="0" ci="6" mb="0" cb="2"/><line nr="282" mi="0" ci="7" mb="0" cb="0"/><line nr="285" mi="0" ci="1" mb="0" cb="0"/><line nr="296" mi="0" ci="5" mb="0" cb="0"/><line nr="297" mi="0" ci="5" mb="0" cb="0"/><line nr="299" mi="0" ci="6" mb="0" cb="0"/><line nr="300" mi="0" ci="6" mb="0" cb="0"/><line nr="302" mi="0" ci="6" mb="0" cb="0"/><line nr="303" mi="0" ci="6" mb="0" cb="0"/><line nr="305" mi="0" ci="6" mb="1" cb="3"/><line nr="308" mi="0" ci="16" mb="0" cb="4"/><line nr="311" mi="0" ci="4" mb="0" cb="2"/><line nr="312" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="0" ci="2" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="317" mi="0" ci="5" mb="0" cb="2"/><line nr="318" mi="0" ci="3" mb="0" cb="0"/><line nr="321" mi="0" ci="5" mb="0" cb="2"/><line nr="322" mi="0" ci="3" mb="0" cb="0"/><line nr="325" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="325"/><counter type="BRANCH" missed="1" covered="37"/><counter type="LINE" missed="0" covered="70"/><counter type="COMPLEXITY" missed="1" covered="32"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="PointMap1DImpl.java"><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="2"/><line nr="87" mi="0" ci="6" mb="0" cb="2"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="7" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="8" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="2"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="2"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="10" mb="0" cb="4"/><line nr="159" mi="0" ci="3" mb="0" cb="2"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="8" mb="0" cb="4"/><line nr="165" mi="0" ci="6" mb="0" cb="2"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="1" cb="1"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="1" ci="0" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="2"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="9" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="6" mb="0" cb="0"/><line nr="228" mi="0" ci="7" mb="0" cb="0"/><line nr="229" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="10" mb="0" cb="6"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="6" mb="0" cb="0"/><line nr="238" mi="0" ci="8" mb="0" cb="2"/><line nr="240" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="10" mb="0" cb="0"/><line nr="245" mi="0" ci="10" mb="0" cb="6"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="6" mb="0" cb="0"/><line nr="249" mi="0" ci="8" mb="0" cb="2"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="253" mi="0" ci="10" mb="0" cb="0"/><line nr="257" mi="0" ci="10" mb="0" cb="4"/><line nr="263" mi="0" ci="3" mb="0" cb="2"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="268" mi="0" ci="8" mb="0" cb="4"/><line nr="269" mi="0" ci="6" mb="0" cb="2"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="4" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="1" cb="1"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="349"/><counter type="BRANCH" missed="2" covered="52"/><counter type="LINE" missed="2" covered="73"/><counter type="COMPLEXITY" missed="2" covered="43"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="EuclideanVectorSum.java"><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractLinecastPoint.java"><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="19" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="2"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="4"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="11" mb="0" cb="2"/><line nr="109" mi="0" ci="6" mb="0" cb="2"/><line nr="110" mi="0" ci="5" mb="0" cb="2"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="126"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EuclideanCollections.java"><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultiDimensionalEuclideanVector.java"><line nr="24" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractNSphere.java"><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="2"/><line nr="57" mi="0" ci="12" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="4"/><line nr="60" mi="0" ci="12" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="2"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="2"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="20" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="2"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="4"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="11" mb="0" cb="2"/><line nr="148" mi="0" ci="3" mb="0" cb="2"/><line nr="149" mi="0" ci="8" mb="0" cb="2"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="2"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="10" mb="0" cb="0"/><line nr="208" mi="0" ci="6" mb="0" cb="0"/><line nr="210" mi="0" ci="7" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="2"/><line nr="213" mi="0" ci="6" mb="0" cb="0"/><line nr="214" mi="0" ci="11" mb="0" cb="0"/><line nr="216" mi="0" ci="8" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="2"/><line nr="219" mi="0" ci="8" mb="0" cb="0"/><line nr="221" mi="0" ci="12" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="6" mb="0" cb="0"/><line nr="246" mi="0" ci="7" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="2"/><line nr="249" mi="0" ci="6" mb="0" cb="0"/><line nr="250" mi="0" ci="11" mb="0" cb="0"/><line nr="252" mi="0" ci="8" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="302"/><counter type="BRANCH" missed="0" covered="30"/><counter type="LINE" missed="0" covered="61"/><counter type="COMPLEXITY" missed="0" covered="29"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EuclideanVector.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PointMap3DImpl.java"><line nr="73" mi="0" ci="36" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="10" mb="0" cb="2"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="7" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="7" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="7" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="7" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="7" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="7" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="9" mb="0" cb="2"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="11" mb="0" cb="2"/><line nr="200" mi="0" ci="11" mb="0" cb="2"/><line nr="201" mi="0" ci="11" mb="0" cb="2"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="2"/><line nr="206" mi="0" ci="2" mb="0" cb="2"/><line nr="207" mi="0" ci="3" mb="0" cb="2"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="2"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="2"/><line nr="215" mi="0" ci="3" mb="0" cb="2"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="2"/><line nr="219" mi="0" ci="6" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="2"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="11" mb="0" cb="2"/><line nr="234" mi="0" ci="11" mb="0" cb="2"/><line nr="235" mi="0" ci="11" mb="0" cb="2"/><line nr="237" mi="0" ci="6" mb="0" cb="6"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="9" mb="0" cb="0"/><line nr="242" mi="0" ci="9" mb="0" cb="0"/><line nr="243" mi="0" ci="8" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="363"/><counter type="BRANCH" missed="0" covered="38"/><counter type="LINE" missed="0" covered="67"/><counter type="COMPLEXITY" missed="0" covered="31"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="2" covered="1797"/><counter type="BRANCH" missed="3" covered="195"/><counter type="LINE" missed="2" covered="370"/><counter type="COMPLEXITY" missed="3" covered="189"/><counter type="METHOD" missed="0" covered="93"/><counter type="CLASS" missed="0" covered="16"/></package><package name="org/apache/commons/geometry/euclidean/threed/mesh"><class name="org/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh$SimpleTriangleFace" sourcefilename="SimpleTriangleMesh.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh;I[I)V" line="294"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndex" desc="()I" line="302"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertexIndices" desc="()[I" line="308"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertices" desc="()Ljava/util/List;" line="314"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPoint1" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="323"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPoint2" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="329"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPoint3" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="335"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="definesPolygon" desc="()Z" line="341"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPolygon" desc="()Lorg/apache/commons/geometry/euclidean/threed/Triangle3D;" line="351"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="361"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="137"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/mesh/TriangleMesh" sourcefilename="TriangleMesh.java"/><class name="org/apache/commons/geometry/euclidean/threed/mesh/TriangleMesh$Face" sourcefilename="TriangleMesh.java"/><class name="org/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh$Builder" sourcefilename="SimpleTriangleMesh.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="416"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="useVertex" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)I" line="455"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)I" line="475"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertices" desc="([Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh$Builder;" line="491"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertices" desc="(Ljava/util/Collection;)Lorg/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh$Builder;" line="500"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureVertexCapacity" desc="(I)Lorg/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh$Builder;" line="517"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertexCount" desc="()I" line="525"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertex" desc="(I)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="534"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFace" desc="(III)Lorg/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh$Builder;" line="546"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFace" desc="([I)Lorg/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh$Builder;" line="566"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFaces" desc="([[I)Lorg/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh$Builder;" line="583"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFaces" desc="(Ljava/util/Collection;)Lorg/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh$Builder;" line="593"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFaceUsingVertices" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh$Builder;" line="612"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFaceAndVertices" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh$Builder;" line="628"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureFaceCapacity" desc="(I)Lorg/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh$Builder;" line="642"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFaceCount" desc="()I" line="650"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh;" line="657"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertexIndexMap" desc="()Lorg/apache/commons/geometry/core/collection/PointMap;" line="677"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addToVertexIndexMap" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;ILorg/apache/commons/geometry/core/collection/PointMap;)I" line="700"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addToVertexList" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)I" line="714"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateVertexIndex" desc="(I)I" line="731"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateCanModify" desc="()V" line="742"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="364"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="0" covered="85"/><counter type="COMPLEXITY" missed="0" covered="34"/><counter type="METHOD" missed="0" covered="22"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh" sourcefilename="SimpleTriangleMesh.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/util/List;Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertices" desc="()Ljava/lang/Iterable;" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertices" desc="()Ljava/util/List;" line="92"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertexCount" desc="()I" line="98"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="faces" desc="()Ljava/lang/Iterable;" line="104"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFaces" desc="()Ljava/util/List;" line="110"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFaceCount" desc="()I" line="123"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFace" desc="(I)Lorg/apache/commons/geometry/euclidean/threed/mesh/TriangleMesh$Face;" line="129"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBounds" desc="()Lorg/apache/commons/geometry/euclidean/threed/Bounds3D;" line="135"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrecision" desc="()Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;" line="143"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="boundaryStream" desc="()Ljava/util/stream/Stream;" line="149"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="triangleStream" desc="()Ljava/util/stream/Stream;" line="155"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh;" line="162"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTriangleMesh" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh;" line="189"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="199"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFaceStream" desc="(Ljava/util/function/Function;)Ljava/util/stream/Stream;" line="220"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh$Builder;" line="229"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="([Lorg/apache/commons/geometry/euclidean/threed/Vector3D;[[ILorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh;" line="242"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh;" line="255"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Lorg/apache/commons/geometry/euclidean/threed/BoundarySource3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh;" line="273"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$from$2" desc="(Lorg/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh$Builder;Lorg/apache/commons/geometry/euclidean/threed/Triangle3D;)V" line="275"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createFaceStream$1" desc="(Ljava/util/function/Function;)Ljava/util/Iterator;" line="220"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$faces$0" desc="()Ljava/util/Iterator;" line="104"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="249"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="60"/><counter type="COMPLEXITY" missed="0" covered="27"/><counter type="METHOD" missed="0" covered="23"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/mesh/Mesh$Face" sourcefilename="Mesh.java"/><class name="org/apache/commons/geometry/euclidean/threed/mesh/Mesh" sourcefilename="Mesh.java"/><class name="org/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh$FaceIterator" sourcefilename="SimpleTriangleMesh.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh;Ljava/util/function/Function;)V" line="390"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="397"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="403"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TriangleMesh.java"/><sourcefile name="Mesh.java"/><sourcefile name="SimpleTriangleMesh.java"><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="9" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="7" mb="0" cb="2"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="11" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="7" mb="0" cb="0"/><line nr="166" mi="0" ci="11" mb="0" cb="2"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="2"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="10" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="2"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="193" mi="0" ci="11" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="10" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="0" ci="6" mb="0" cb="0"/><line nr="242" mi="0" ci="7" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="1" mb="0" cb="0"/><line nr="259" mi="0" ci="1" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="9" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="0" ci="1" mb="0" cb="0"/><line nr="281" mi="0" ci="3" mb="0" cb="0"/><line nr="294" mi="0" ci="5" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="1" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="0" cb="0"/><line nr="308" mi="0" ci="5" mb="0" cb="0"/><line nr="314" mi="0" ci="7" mb="0" cb="0"/><line nr="315" mi="0" ci="5" mb="0" cb="0"/><line nr="316" mi="0" ci="5" mb="0" cb="0"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="323" mi="0" ci="10" mb="0" cb="0"/><line nr="329" mi="0" ci="10" mb="0" cb="0"/><line nr="335" mi="0" ci="10" mb="0" cb="0"/><line nr="341" mi="0" ci="3" mb="0" cb="0"/><line nr="342" mi="0" ci="5" mb="0" cb="0"/><line nr="343" mi="0" ci="5" mb="0" cb="0"/><line nr="345" mi="0" ci="13" mb="0" cb="2"/><line nr="351" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="2" mb="0" cb="0"/><line nr="353" mi="0" ci="2" mb="0" cb="0"/><line nr="354" mi="0" ci="3" mb="0" cb="0"/><line nr="355" mi="0" ci="1" mb="0" cb="0"/><line nr="361" mi="0" ci="4" mb="0" cb="0"/><line nr="362" mi="0" ci="6" mb="0" cb="0"/><line nr="363" mi="0" ci="2" mb="0" cb="0"/><line nr="364" mi="0" ci="3" mb="0" cb="0"/><line nr="365" mi="0" ci="2" mb="0" cb="0"/><line nr="366" mi="0" ci="4" mb="0" cb="0"/><line nr="367" mi="0" ci="2" mb="0" cb="0"/><line nr="368" mi="0" ci="3" mb="0" cb="0"/><line nr="369" mi="0" ci="2" mb="0" cb="0"/><line nr="371" mi="0" ci="3" mb="0" cb="0"/><line nr="390" mi="0" ci="5" mb="0" cb="0"/><line nr="391" mi="0" ci="3" mb="0" cb="0"/><line nr="392" mi="0" ci="1" mb="0" cb="0"/><line nr="397" mi="0" ci="11" mb="0" cb="2"/><line nr="403" mi="0" ci="3" mb="0" cb="2"/><line nr="404" mi="0" ci="11" mb="0" cb="0"/><line nr="405" mi="0" ci="5" mb="0" cb="0"/><line nr="407" mi="0" ci="4" mb="0" cb="0"/><line nr="416" mi="0" ci="5" mb="0" cb="0"/><line nr="422" mi="0" ci="5" mb="0" cb="0"/><line nr="425" mi="0" ci="3" mb="0" cb="0"/><line nr="439" mi="0" ci="2" mb="0" cb="0"/><line nr="440" mi="0" ci="4" mb="0" cb="0"/><line nr="442" mi="0" ci="3" mb="0" cb="0"/><line nr="443" mi="0" ci="1" mb="0" cb="0"/><line nr="455" mi="0" ci="4" mb="0" cb="0"/><line nr="456" mi="0" ci="7" mb="0" cb="0"/><line nr="459" mi="0" ci="3" mb="0" cb="2"/><line nr="460" mi="0" ci="4" mb="0" cb="0"/><line nr="463" mi="0" ci="2" mb="0" cb="0"/><line nr="475" mi="0" ci="4" mb="0" cb="0"/><line nr="477" mi="0" ci="3" mb="0" cb="2"/><line nr="479" mi="0" ci="7" mb="0" cb="0"/><line nr="482" mi="0" ci="2" mb="0" cb="0"/><line nr="491" mi="0" ci="5" mb="0" cb="0"/><line nr="500" mi="0" ci="7" mb="0" cb="0"/><line nr="501" mi="0" ci="4" mb="0" cb="0"/><line nr="503" mi="0" ci="10" mb="0" cb="2"/><line nr="504" mi="0" ci="4" mb="0" cb="0"/><line nr="505" mi="0" ci="1" mb="0" cb="0"/><line nr="507" mi="0" ci="2" mb="0" cb="0"/><line nr="517" mi="0" ci="4" mb="0" cb="0"/><line nr="518" mi="0" ci="2" mb="0" cb="0"/><line nr="525" mi="0" ci="4" mb="0" cb="0"/><line nr="534" mi="0" ci="6" mb="0" cb="0"/><line nr="546" mi="0" ci="2" mb="0" cb="0"/><line nr="548" mi="0" ci="6" mb="0" cb="0"/><line nr="549" mi="0" ci="6" mb="0" cb="0"/><line nr="550" mi="0" ci="6" mb="0" cb="0"/><line nr="551" mi="0" ci="3" mb="0" cb="0"/><line nr="554" mi="0" ci="5" mb="0" cb="0"/><line nr="556" mi="0" ci="2" mb="0" cb="0"/><line nr="566" mi="0" ci="4" mb="0" cb="2"/><line nr="567" mi="0" ci="13" mb="0" cb="0"/><line nr="571" mi="0" ci="12" mb="0" cb="0"/><line nr="573" mi="0" ci="2" mb="0" cb="0"/><line nr="583" mi="0" ci="5" mb="0" cb="0"/><line nr="593" mi="0" ci="7" mb="0" cb="0"/><line nr="594" mi="0" ci="4" mb="0" cb="0"/><line nr="596" mi="0" ci="10" mb="0" cb="2"/><line nr="597" mi="0" ci="4" mb="0" cb="0"/><line nr="598" mi="0" ci="1" mb="0" cb="0"/><line nr="600" mi="0" ci="2" mb="0" cb="0"/><line nr="612" mi="0" ci="5" mb="0" cb="0"/><line nr="613" mi="0" ci="3" mb="0" cb="0"/><line nr="614" mi="0" ci="3" mb="0" cb="0"/><line nr="615" mi="0" ci="1" mb="0" cb="0"/><line nr="628" mi="0" ci="5" mb="0" cb="0"/><line nr="629" mi="0" ci="3" mb="0" cb="0"/><line nr="630" mi="0" ci="3" mb="0" cb="0"/><line nr="631" mi="0" ci="1" mb="0" cb="0"/><line nr="642" mi="0" ci="4" mb="0" cb="0"/><line nr="643" mi="0" ci="2" mb="0" cb="0"/><line nr="650" mi="0" ci="4" mb="0" cb="0"/><line nr="657" mi="0" ci="3" mb="0" cb="0"/><line nr="659" mi="0" ci="4" mb="0" cb="2"/><line nr="660" mi="0" ci="4" mb="0" cb="0"/><line nr="661" mi="0" ci="2" mb="0" cb="0"/><line nr="663" mi="0" ci="3" mb="0" cb="0"/><line nr="664" mi="0" ci="3" mb="0" cb="0"/><line nr="666" mi="0" ci="12" mb="0" cb="0"/><line nr="677" mi="0" ci="3" mb="0" cb="2"/><line nr="678" mi="0" ci="5" mb="0" cb="0"/><line nr="681" mi="0" ci="4" mb="0" cb="0"/><line nr="682" mi="0" ci="7" mb="0" cb="2"/><line nr="683" mi="0" ci="11" mb="0" cb="0"/><line nr="686" mi="0" ci="3" mb="0" cb="0"/><line nr="700" mi="0" ci="2" mb="0" cb="0"/><line nr="702" mi="0" ci="7" mb="0" cb="0"/><line nr="704" mi="0" ci="3" mb="0" cb="2"/><line nr="705" mi="0" ci="3" mb="0" cb="0"/><line nr="706" mi="0" ci="1" mb="0" cb="0"/><line nr="714" mi="0" ci="2" mb="0" cb="0"/><line nr="716" mi="0" ci="5" mb="0" cb="0"/><line nr="718" mi="0" ci="4" mb="0" cb="0"/><line nr="719" mi="0" ci="5" mb="0" cb="0"/><line nr="721" mi="0" ci="2" mb="0" cb="0"/><line nr="731" mi="0" ci="7" mb="0" cb="4"/><line nr="732" mi="0" ci="12" mb="0" cb="0"/><line nr="735" mi="0" ci="2" mb="0" cb="0"/><line nr="742" mi="0" ci="3" mb="0" cb="2"/><line nr="743" mi="0" ci="5" mb="0" cb="0"/><line nr="745" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="793"/><counter type="BRANCH" missed="0" covered="38"/><counter type="LINE" missed="0" covered="185"/><counter type="COMPLEXITY" missed="0" covered="77"/><counter type="METHOD" missed="0" covered="58"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="793"/><counter type="BRANCH" missed="0" covered="38"/><counter type="LINE" missed="0" covered="185"/><counter type="COMPLEXITY" missed="0" covered="77"/><counter type="METHOD" missed="0" covered="58"/><counter type="CLASS" missed="0" covered="4"/></package><package name="org/apache/commons/geometry/euclidean/twod/rotation"><class name="org/apache/commons/geometry/euclidean/twod/rotation/Rotation2D" sourcefilename="Rotation2D.java"><method name="&lt;init&gt;" desc="(D)V" line="44"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAngle" desc="()D" line="54"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inverse" desc="()Lorg/apache/commons/geometry/euclidean/twod/rotation/Rotation2D;" line="60"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preservesOrientation" desc="()Z" line="70"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="76"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyVector" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="92"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toMatrix" desc="()Lorg/apache/commons/geometry/euclidean/twod/AffineTransformMatrix2D;" line="100"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="109"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="115"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="130"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(D)Lorg/apache/commons/geometry/euclidean/twod/rotation/Rotation2D;" line="144"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="identity" desc="()Lorg/apache/commons/geometry/euclidean/twod/rotation/Rotation2D;" line="152"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createVectorRotation" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/rotation/Rotation2D;" line="165"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="172"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="0" covered="17"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Rotation2D.java"><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="20" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="33" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="2"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="2"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="10" mb="0" cb="2"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="6" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="172"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="0" covered="17"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="172"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="0" covered="17"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/apache/commons/geometry/euclidean/twod/path"><class name="org/apache/commons/geometry/euclidean/twod/path/LinePath$SimplifiedLinePath" sourcefilename="LinePath.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="861"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simplify" desc="()Lorg/apache/commons/geometry/euclidean/twod/path/LinePath$SimplifiedLinePath;" line="868"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/path/InteriorAngleLinePathConnector$Maximize" sourcefilename="InteriorAngleLinePathConnector.java"><method name="&lt;init&gt;" desc="()V" line="95"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBetterAngle" desc="(DD)Z" line="99"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/path/InteriorAngleLinePathConnector$Minimize" sourcefilename="InteriorAngleLinePathConnector.java"><method name="&lt;init&gt;" desc="()V" line="109"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBetterAngle" desc="(DD)Z" line="113"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/path/InteriorAngleLinePathConnector" sourcefilename="InteriorAngleLinePathConnector.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selectConnection" desc="(Lorg/apache/commons/geometry/euclidean/twod/path/AbstractLinePathConnector$ConnectableLineSubset;Ljava/util/List;)Lorg/apache/commons/geometry/euclidean/twod/path/AbstractLinePathConnector$ConnectableLineSubset;" line="44"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectMaximized" desc="(Ljava/util/Collection;)Ljava/util/List;" line="76"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectMinimized" desc="(Ljava/util/Collection;)Ljava/util/List;" line="86"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/path/LinePath" sourcefilename="LinePath.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="boundaryStream" desc="()Ljava/util/stream/Stream;" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElements" desc="()Ljava/util/List;" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStart" desc="()Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;" line="80"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnd" desc="()Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;" line="93"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertexSequence" desc="()Ljava/util/List;" line="106"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInfinite" desc="()Z" line="132"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFinite" desc="()Z" line="141"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()D" line="150"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="162"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isClosed" desc="()Z" line="171"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/twod/path/LinePath;" line="188"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="()Lorg/apache/commons/geometry/euclidean/twod/path/LinePath;" line="205"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simplify" desc="()Lorg/apache/commons/geometry/euclidean/twod/path/LinePath;" line="222"><counter type="INSTRUCTION" missed="0" covered="127"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="310"><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStartVertex" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="348"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEndVertex" desc="()Lorg/apache/commons/geometry/euclidean/twod/Vector2D;" line="358"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="([Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Lorg/apache/commons/geometry/euclidean/twod/path/LinePath;" line="368"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/util/Collection;)Lorg/apache/commons/geometry/euclidean/twod/path/LinePath;" line="377"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromVertexLoop" desc="(Ljava/util/Collection;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/twod/path/LinePath;" line="401"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromVertices" desc="(Ljava/util/Collection;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/twod/path/LinePath;" line="418"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromVertices" desc="(Ljava/util/Collection;ZLorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/twod/path/LinePath;" line="434"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="empty" desc="()Lorg/apache/commons/geometry/euclidean/twod/path/LinePath;" line="443"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/twod/path/LinePath$Builder;" line="454"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$transform$0" desc="(Lorg/apache/commons/geometry/core/Transform;Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;" line="190"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="477"/><counter type="BRANCH" missed="2" covered="58"/><counter type="LINE" missed="0" covered="110"/><counter type="COMPLEXITY" missed="2" covered="54"/><counter type="METHOD" missed="0" covered="26"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/path/LinePath$Builder" sourcefilename="LinePath.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="486"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPrecision" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/twod/path/LinePath$Builder;" line="498"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStart" desc="()Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;" line="507"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnd" desc="()Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;" line="518"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Lorg/apache/commons/geometry/euclidean/twod/path/LinePath$Builder;" line="533"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/path/LinePath$Builder;" line="547"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendVertices" desc="(Ljava/util/Collection;)Lorg/apache/commons/geometry/euclidean/twod/path/LinePath$Builder;" line="577"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendVertices" desc="([Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/path/LinePath$Builder;" line="590"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prepend" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)Lorg/apache/commons/geometry/euclidean/twod/path/LinePath$Builder;" line="601"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prepend" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/path/LinePath$Builder;" line="615"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prependVertices" desc="(Ljava/util/Collection;)Lorg/apache/commons/geometry/euclidean/twod/path/LinePath$Builder;" line="649"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prependVertices" desc="([Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/path/LinePath$Builder;" line="662"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()Lorg/apache/commons/geometry/euclidean/twod/path/LinePath;" line="675"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/apache/commons/geometry/euclidean/twod/path/LinePath;" line="684"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="(Z)Lorg/apache/commons/geometry/euclidean/twod/path/LinePath;" line="694"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closePath" desc="()V" line="738"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateConnected" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)V" line="760"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAddVertexPrecision" desc="()Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;" line="781"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendInternal" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)V" line="792"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prependInternal" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)V" line="811"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirst" desc="(Ljava/util/List;)Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;" line="832"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLast" desc="(Ljava/util/List;)Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;" line="844"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="474"/><counter type="BRANCH" missed="4" covered="76"/><counter type="LINE" missed="0" covered="115"/><counter type="COMPLEXITY" missed="4" covered="58"/><counter type="METHOD" missed="0" covered="22"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/path/AbstractLinePathConnector" sourcefilename="AbstractLinePathConnector.java"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Iterable;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connect" desc="(Ljava/lang/Iterable;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectAll" desc="(Ljava/lang/Iterable;)Ljava/util/List;" line="93"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectAll" desc="()Ljava/util/List;" line="105"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toPath" desc="(Lorg/apache/commons/geometry/euclidean/twod/path/AbstractLinePathConnector$ConnectableLineSubset;)Lorg/apache/commons/geometry/euclidean/twod/path/LinePath;" line="121"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="116"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/path/AbstractLinePathConnector$ConnectableLineSubset" sourcefilename="AbstractLinePathConnector.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)V" line="157"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;)V" line="164"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLineSubset" desc="()Lorg/apache/commons/geometry/euclidean/twod/LineConvexSubset;" line="173"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasStart" desc="()Z" line="179"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasEnd" desc="()Z" line="185"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasZeroSize" desc="()Z" line="192"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endPointsEq" desc="(Lorg/apache/commons/geometry/euclidean/twod/path/AbstractLinePathConnector$ConnectableLineSubset;)Z" line="198"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canConnectTo" desc="(Lorg/apache/commons/geometry/euclidean/twod/path/AbstractLinePathConnector$ConnectableLineSubset;)Z" line="209"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRelativeAngle" desc="(Lorg/apache/commons/geometry/euclidean/twod/path/AbstractLinePathConnector$ConnectableLineSubset;)D" line="219"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnectionSearchKey" desc="()Lorg/apache/commons/geometry/euclidean/twod/path/AbstractLinePathConnector$ConnectableLineSubset;" line="225"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldContinueConnectionSearch" desc="(Lorg/apache/commons/geometry/euclidean/twod/path/AbstractLinePathConnector$ConnectableLineSubset;Z)Z" line="232"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Lorg/apache/commons/geometry/euclidean/twod/path/AbstractLinePathConnector$ConnectableLineSubset;)I" line="247"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="276"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="282"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSelf" desc="()Lorg/apache/commons/geometry/euclidean/twod/path/AbstractLinePathConnector$ConnectableLineSubset;" line="297"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="257"/><counter type="BRANCH" missed="6" covered="44"/><counter type="LINE" missed="0" covered="51"/><counter type="COMPLEXITY" missed="6" covered="35"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractLinePathConnector.java"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="10" mb="0" cb="2"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="10" mb="0" cb="2"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="10" mb="0" cb="2"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="4"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="7" mb="0" cb="2"/><line nr="185" mi="0" ci="11" mb="1" cb="3"/><line nr="192" mi="0" ci="15" mb="1" cb="3"/><line nr="198" mi="0" ci="6" mb="1" cb="3"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="9" mb="2" cb="2"/><line nr="213" mi="0" ci="6" mb="0" cb="2"/><line nr="219" mi="0" ci="8" mb="0" cb="0"/><line nr="225" mi="0" ci="7" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="0" cb="2"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="7" mb="0" cb="0"/><line nr="237" mi="0" ci="14" mb="0" cb="6"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="7" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="2"/><line nr="250" mi="0" ci="7" mb="0" cb="2"/><line nr="251" mi="0" ci="7" mb="0" cb="2"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="0" ci="4" mb="0" cb="4"/><line nr="257" mi="0" ci="6" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="2"/><line nr="261" mi="0" ci="4" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="276" mi="0" ci="14" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="2"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="8" mb="0" cb="4"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="11" mb="0" cb="2"/><line nr="291" mi="0" ci="5" mb="1" cb="1"/><line nr="297" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="373"/><counter type="BRANCH" missed="6" covered="54"/><counter type="LINE" missed="0" covered="79"/><counter type="COMPLEXITY" missed="6" covered="47"/><counter type="METHOD" missed="0" covered="23"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="LinePath.java"><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="2"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="2"/><line nr="94" mi="0" ci="10" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="2"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="11" mb="0" cb="2"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="2"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="13" mb="0" cb="6"/><line nr="141" mi="0" ci="7" mb="0" cb="2"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="11" mb="0" cb="2"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="2"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="14" mb="0" cb="6"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="2"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="6" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="2"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="0" cb="2"/><line nr="233" mi="0" ci="6" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="12" mb="0" cb="4"/><line nr="240" mi="0" ci="9" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="2"/><line nr="246" mi="0" ci="9" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="255" mi="0" ci="16" mb="1" cb="5"/><line nr="256" mi="0" ci="6" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="259" mi="0" ci="8" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="264" mi="0" ci="5" mb="0" cb="0"/><line nr="267" mi="0" ci="6" mb="0" cb="0"/><line nr="310" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="0" ci="6" mb="0" cb="0"/><line nr="312" mi="0" ci="2" mb="0" cb="0"/><line nr="314" mi="0" ci="4" mb="0" cb="2"/><line nr="315" mi="0" ci="5" mb="0" cb="0"/><line nr="316" mi="0" ci="5" mb="0" cb="2"/><line nr="317" mi="0" ci="6" mb="0" cb="0"/><line nr="318" mi="0" ci="4" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="321" mi="0" ci="3" mb="0" cb="2"/><line nr="322" mi="0" ci="4" mb="0" cb="0"/><line nr="323" mi="0" ci="4" mb="0" cb="0"/><line nr="324" mi="0" ci="2" mb="0" cb="0"/><line nr="327" mi="0" ci="4" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="330" mi="0" ci="3" mb="0" cb="0"/><line nr="331" mi="0" ci="3" mb="0" cb="2"/><line nr="332" mi="0" ci="4" mb="0" cb="0"/><line nr="333" mi="0" ci="4" mb="0" cb="0"/><line nr="337" mi="0" ci="4" mb="0" cb="0"/><line nr="339" mi="0" ci="3" mb="0" cb="0"/><line nr="348" mi="0" ci="3" mb="0" cb="0"/><line nr="349" mi="0" ci="7" mb="0" cb="2"/><line nr="358" mi="0" ci="3" mb="0" cb="0"/><line nr="359" mi="1" ci="6" mb="1" cb="1"/><line nr="368" mi="0" ci="4" mb="0" cb="0"/><line nr="377" mi="0" ci="3" mb="0" cb="0"/><line nr="379" mi="0" ci="10" mb="0" cb="2"/><line nr="380" mi="0" ci="4" mb="0" cb="0"/><line nr="381" mi="0" ci="1" mb="0" cb="0"/><line nr="383" mi="0" ci="3" mb="0" cb="0"/><line nr="401" mi="0" ci="5" mb="0" cb="0"/><line nr="418" mi="0" ci="5" mb="0" cb="0"/><line nr="434" mi="0" ci="4" mb="0" cb="0"/><line nr="435" mi="0" ci="2" mb="0" cb="0"/><line nr="436" mi="0" ci="1" mb="0" cb="0"/><line nr="443" mi="0" ci="2" mb="0" cb="0"/><line nr="454" mi="0" ci="6" mb="0" cb="0"/><line nr="486" mi="0" ci="2" mb="0" cb="0"/><line nr="487" mi="0" ci="4" mb="0" cb="0"/><line nr="488" mi="0" ci="1" mb="0" cb="0"/><line nr="498" mi="0" ci="3" mb="0" cb="0"/><line nr="500" mi="0" ci="2" mb="0" cb="0"/><line nr="507" mi="0" ci="5" mb="0" cb="0"/><line nr="508" mi="0" ci="2" mb="0" cb="2"/><line nr="509" mi="0" ci="5" mb="0" cb="0"/><line nr="511" mi="0" ci="2" mb="0" cb="0"/><line nr="518" mi="0" ci="5" mb="0" cb="0"/><line nr="519" mi="0" ci="2" mb="0" cb="2"/><line nr="520" mi="0" ci="5" mb="0" cb="0"/><line nr="522" mi="0" ci="2" mb="0" cb="0"/><line nr="533" mi="0" ci="5" mb="0" cb="0"/><line nr="534" mi="0" ci="3" mb="0" cb="0"/><line nr="536" mi="0" ci="2" mb="0" cb="0"/><line nr="547" mi="0" ci="3" mb="0" cb="0"/><line nr="549" mi="0" ci="3" mb="0" cb="2"/><line nr="551" mi="0" ci="3" mb="0" cb="0"/><line nr="552" mi="0" ci="2" mb="0" cb="2"/><line nr="553" mi="0" ci="13" mb="0" cb="0"/><line nr="554" mi="0" ci="3" mb="0" cb="0"/><line nr="559" mi="0" ci="3" mb="0" cb="0"/><line nr="560" mi="0" ci="3" mb="0" cb="0"/><line nr="561" mi="0" ci="3" mb="0" cb="0"/><line nr="562" mi="0" ci="8" mb="0" cb="2"/><line nr="565" mi="0" ci="8" mb="0" cb="0"/><line nr="568" mi="0" ci="2" mb="0" cb="0"/><line nr="577" mi="0" ci="10" mb="0" cb="2"/><line nr="578" mi="0" ci="4" mb="0" cb="0"/><line nr="579" mi="0" ci="1" mb="0" cb="0"/><line nr="581" mi="0" ci="2" mb="0" cb="0"/><line nr="590" mi="0" ci="5" mb="0" cb="0"/><line nr="601" mi="0" ci="5" mb="0" cb="0"/><line nr="602" mi="0" ci="3" mb="0" cb="0"/><line nr="604" mi="0" ci="2" mb="0" cb="0"/><line nr="615" mi="0" ci="3" mb="0" cb="0"/><line nr="617" mi="0" ci="3" mb="0" cb="2"/><line nr="619" mi="0" ci="3" mb="0" cb="0"/><line nr="620" mi="0" ci="2" mb="0" cb="2"/><line nr="621" mi="0" ci="13" mb="0" cb="0"/><line nr="622" mi="0" ci="3" mb="0" cb="0"/><line nr="627" mi="0" ci="3" mb="0" cb="0"/><line nr="628" mi="0" ci="3" mb="0" cb="0"/><line nr="629" mi="0" ci="3" mb="0" cb="0"/><line nr="630" mi="0" ci="7" mb="0" cb="2"/><line nr="633" mi="0" ci="7" mb="0" cb="0"/><line nr="636" mi="0" ci="2" mb="0" cb="0"/><line nr="649" mi="0" ci="8" mb="0" cb="0"/><line nr="662" mi="0" ci="9" mb="0" cb="2"/><line nr="663" mi="0" ci="6" mb="0" cb="0"/><line nr="666" mi="0" ci="2" mb="0" cb="0"/><line nr="675" mi="0" ci="4" mb="0" cb="0"/><line nr="684" mi="0" ci="4" mb="0" cb="0"/><line nr="694" mi="0" ci="2" mb="0" cb="2"/><line nr="695" mi="0" ci="2" mb="0" cb="0"/><line nr="699" mi="0" ci="2" mb="0" cb="0"/><line nr="701" mi="0" ci="3" mb="0" cb="2"/><line nr="702" mi="0" ci="3" mb="0" cb="0"/><line nr="703" mi="0" ci="2" mb="0" cb="0"/><line nr="706" mi="0" ci="3" mb="0" cb="2"/><line nr="707" mi="0" ci="2" mb="0" cb="2"/><line nr="708" mi="0" ci="4" mb="0" cb="0"/><line nr="710" mi="0" ci="5" mb="0" cb="0"/><line nr="714" mi="0" ci="2" mb="0" cb="2"/><line nr="715" mi="0" ci="2" mb="0" cb="0"/><line nr="718" mi="0" ci="6" mb="0" cb="4"/><line nr="719" mi="0" ci="10" mb="0" cb="0"/><line nr="720" mi="0" ci="3" mb="0" cb="0"/><line nr="725" mi="0" ci="3" mb="0" cb="0"/><line nr="726" mi="0" ci="3" mb="0" cb="0"/><line nr="731" mi="0" ci="10" mb="0" cb="2"/><line nr="738" mi="0" ci="3" mb="0" cb="0"/><line nr="740" mi="0" ci="2" mb="0" cb="2"/><line nr="741" mi="0" ci="6" mb="0" cb="4"/><line nr="742" mi="0" ci="8" mb="0" cb="2"/><line nr="743" mi="0" ci="10" mb="0" cb="0"/><line nr="746" mi="0" ci="5" mb="0" cb="0"/><line nr="749" mi="0" ci="1" mb="0" cb="0"/><line nr="760" mi="0" ci="4" mb="0" cb="4"/><line nr="761" mi="0" ci="3" mb="0" cb="0"/><line nr="762" mi="0" ci="3" mb="0" cb="0"/><line nr="763" mi="0" ci="3" mb="0" cb="0"/><line nr="765" mi="0" ci="7" mb="0" cb="4"/><line nr="766" mi="0" ci="2" mb="0" cb="2"/><line nr="768" mi="0" ci="13" mb="0" cb="0"/><line nr="769" mi="0" ci="3" mb="0" cb="0"/><line nr="773" mi="0" ci="1" mb="0" cb="0"/><line nr="781" mi="0" ci="3" mb="0" cb="2"/><line nr="782" mi="0" ci="5" mb="0" cb="0"/><line nr="785" mi="0" ci="3" mb="0" cb="0"/><line nr="792" mi="0" ci="3" mb="0" cb="2"/><line nr="793" mi="0" ci="5" mb="0" cb="0"/><line nr="796" mi="0" ci="9" mb="0" cb="4"/><line nr="797" mi="0" ci="2" mb="1" cb="1"/><line nr="798" mi="0" ci="4" mb="0" cb="0"/><line nr="801" mi="0" ci="4" mb="0" cb="0"/><line nr="802" mi="0" ci="4" mb="0" cb="0"/><line nr="804" mi="0" ci="5" mb="0" cb="0"/><line nr="805" mi="0" ci="1" mb="0" cb="0"/><line nr="811" mi="0" ci="3" mb="0" cb="2"/><line nr="812" mi="0" ci="5" mb="0" cb="0"/><line nr="815" mi="0" ci="4" mb="0" cb="0"/><line nr="817" mi="0" ci="9" mb="0" cb="4"/><line nr="818" mi="0" ci="2" mb="1" cb="1"/><line nr="819" mi="0" ci="4" mb="0" cb="0"/><line nr="820" mi="0" ci="4" mb="0" cb="0"/><line nr="823" mi="0" ci="5" mb="0" cb="0"/><line nr="824" mi="0" ci="1" mb="0" cb="0"/><line nr="832" mi="0" ci="5" mb="1" cb="3"/><line nr="833" mi="0" ci="5" mb="0" cb="0"/><line nr="835" mi="0" ci="2" mb="0" cb="0"/><line nr="844" mi="0" ci="5" mb="1" cb="3"/><line nr="845" mi="0" ci="8" mb="0" cb="0"/><line nr="847" mi="0" ci="2" mb="0" cb="0"/><line nr="861" mi="0" ci="3" mb="0" cb="0"/><line nr="862" mi="0" ci="1" mb="0" cb="0"/><line nr="868" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="957"/><counter type="BRANCH" missed="6" covered="134"/><counter type="LINE" missed="0" covered="228"/><counter type="COMPLEXITY" missed="6" covered="114"/><counter type="METHOD" missed="0" covered="50"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="InteriorAngleLinePathConnector.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="0" cb="2"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="4"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="2"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="8" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="1" covered="1407"/><counter type="BRANCH" missed="12" covered="198"/><counter type="LINE" missed="0" covered="325"/><counter type="COMPLEXITY" missed="12" covered="174"/><counter type="METHOD" missed="0" covered="81"/><counter type="CLASS" missed="0" covered="8"/></package><package name="org/apache/commons/geometry/euclidean/threed/rotation"><class name="org/apache/commons/geometry/euclidean/threed/rotation/AxisReferenceFrame" sourcefilename="AxisReferenceFrame.java"><method name="&lt;clinit&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/rotation/AxisAngleSequence" sourcefilename="AxisAngleSequence.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/rotation/AxisReferenceFrame;Lorg/apache/commons/geometry/euclidean/threed/rotation/AxisSequence;DDD)V" line="85"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReferenceFrame" desc="()Lorg/apache/commons/geometry/euclidean/threed/rotation/AxisReferenceFrame;" line="98"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAxisSequence" desc="()Lorg/apache/commons/geometry/euclidean/threed/rotation/AxisSequence;" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAngle1" desc="()D" line="112"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAngle2" desc="()D" line="119"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAngle3" desc="()D" line="126"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAngles" desc="()[D" line="133"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="139"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="148"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="167"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createRelative" desc="(Lorg/apache/commons/geometry/euclidean/threed/rotation/AxisSequence;DDD)Lorg/apache/commons/geometry/euclidean/threed/rotation/AxisAngleSequence;" line="189"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAbsolute" desc="(Lorg/apache/commons/geometry/euclidean/threed/rotation/AxisSequence;DDD)Lorg/apache/commons/geometry/euclidean/threed/rotation/AxisAngleSequence;" line="201"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="181"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="0" covered="19"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/rotation/Rotation3D" sourcefilename="Rotation3D.java"/><class name="org/apache/commons/geometry/euclidean/threed/rotation/AxisSequenceType" sourcefilename="AxisSequenceType.java"><method name="&lt;clinit&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/rotation/AxisSequence" sourcefilename="AxisSequence.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILorg/apache/commons/geometry/euclidean/threed/rotation/AxisSequenceType;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lorg/apache/commons/geometry/euclidean/threed/rotation/AxisSequenceType;" line="116"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAxis1" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="123"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAxis2" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="130"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAxis3" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="137"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="()[Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="144"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="123"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="170"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation" sourcefilename="QuaternionRotation.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/numbers/quaternion/Quaternion;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQuaternion" desc="()Lorg/apache/commons/numbers/quaternion/Quaternion;" line="72"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAxis" desc="()Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="85"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAngle" desc="()D" line="100"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inverse" desc="()Lorg/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation;" line="113"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="124"><counter type="INSTRUCTION" missed="0" covered="130"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyVector" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="156"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preservesOrientation" desc="()Z" line="166"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toMatrix" desc="()Lorg/apache/commons/geometry/euclidean/threed/AffineTransformMatrix3D;" line="175"><counter type="INSTRUCTION" missed="0" covered="170"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lorg/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation;)Lorg/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation;" line="234"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="premultiply" desc="(Lorg/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation;)Lorg/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation;" line="256"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="slerp" desc="(Lorg/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation;)Ljava/util/function/DoubleFunction;" line="278"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toAxisAngleSequence" desc="(Lorg/apache/commons/geometry/euclidean/threed/rotation/AxisReferenceFrame;Lorg/apache/commons/geometry/euclidean/threed/rotation/AxisSequence;)Lorg/apache/commons/geometry/euclidean/threed/rotation/AxisAngleSequence;" line="297"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toRelativeAxisAngleSequence" desc="(Lorg/apache/commons/geometry/euclidean/threed/rotation/AxisSequence;)Lorg/apache/commons/geometry/euclidean/threed/rotation/AxisAngleSequence;" line="316"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toAbsoluteAxisAngleSequence" desc="(Lorg/apache/commons/geometry/euclidean/threed/rotation/AxisSequence;)Lorg/apache/commons/geometry/euclidean/threed/rotation/AxisAngleSequence;" line="326"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="332"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="338"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="352"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAngles" desc="(Lorg/apache/commons/geometry/euclidean/threed/rotation/AxisReferenceFrame;Lorg/apache/commons/geometry/euclidean/threed/rotation/AxisSequence;)[D" line="364"><counter type="INSTRUCTION" missed="4" covered="52"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRelativeTaitBryanAngles" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)[D" line="402"><counter type="INSTRUCTION" missed="0" covered="102"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAbsoluteTaitBryanAngles" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)[D" line="452"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRelativeEulerAngles" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)[D" line="469"><counter type="INSTRUCTION" missed="0" covered="99"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAbsoluteEulerAngles" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)[D" line="518"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/commons/numbers/quaternion/Quaternion;)Lorg/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation;" line="532"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(DDDD)Lorg/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation;" line="553"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="identity" desc="()Lorg/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation;" line="560"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromAxisAngle" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;D)Lorg/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation;" line="589"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createVectorRotation" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation;" line="622"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createBasisRotation" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation;" line="688"><counter type="INSTRUCTION" missed="0" covered="159"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromAxisAngleSequence" desc="(Lorg/apache/commons/geometry/euclidean/threed/rotation/AxisAngleSequence;)Lorg/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation;" line="725"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orthogonalRotationMatrixToQuaternion" desc="(DDDDDDDDD)Lorg/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation;" line="774"><counter type="INSTRUCTION" missed="0" covered="175"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseArray" desc="([D)[D" line="828"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$slerp$0" desc="(Lorg/apache/commons/numbers/quaternion/Slerp;D)Lorg/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation;" line="279"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="1251"/><counter type="BRANCH" missed="3" covered="47"/><counter type="LINE" missed="1" covered="216"/><counter type="COMPLEXITY" missed="3" covered="56"/><counter type="METHOD" missed="0" covered="34"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AxisSequenceType.java"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QuaternionRotation.java"><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="10" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="2"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="7" mb="0" cb="0"/><line nr="113" mi="0" ci="7" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="13" mb="0" cb="0"/><line nr="135" mi="0" ci="12" mb="0" cb="0"/><line nr="136" mi="0" ci="12" mb="0" cb="0"/><line nr="137" mi="0" ci="12" mb="0" cb="0"/><line nr="142" mi="0" ci="56" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="8" mb="0" cb="0"/><line nr="194" mi="0" ci="6" mb="0" cb="0"/><line nr="195" mi="0" ci="6" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="6" mb="0" cb="0"/><line nr="199" mi="0" ci="8" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="6" mb="0" cb="0"/><line nr="204" mi="0" ci="6" mb="0" cb="0"/><line nr="205" mi="0" ci="8" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="52" mb="0" cb="0"/><line nr="234" mi="0" ci="6" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="278" mi="0" ci="8" mb="0" cb="0"/><line nr="279" mi="0" ci="8" mb="0" cb="0"/><line nr="297" mi="0" ci="2" mb="0" cb="2"/><line nr="298" mi="0" ci="5" mb="0" cb="0"/><line nr="300" mi="0" ci="2" mb="0" cb="2"/><line nr="301" mi="0" ci="5" mb="0" cb="0"/><line nr="304" mi="0" ci="5" mb="0" cb="0"/><line nr="306" mi="0" ci="15" mb="0" cb="0"/><line nr="316" mi="0" ci="5" mb="0" cb="0"/><line nr="326" mi="0" ci="5" mb="0" cb="0"/><line nr="332" mi="0" ci="4" mb="0" cb="0"/><line nr="338" mi="0" ci="3" mb="0" cb="2"/><line nr="339" mi="0" ci="2" mb="0" cb="0"/><line nr="341" mi="0" ci="3" mb="0" cb="2"/><line nr="342" mi="0" ci="2" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="6" mb="0" cb="0"/><line nr="352" mi="0" ci="4" mb="0" cb="0"/><line nr="364" mi="0" ci="3" mb="0" cb="0"/><line nr="366" mi="0" ci="3" mb="0" cb="0"/><line nr="367" mi="0" ci="3" mb="0" cb="0"/><line nr="368" mi="0" ci="3" mb="0" cb="0"/><line nr="370" mi="0" ci="3" mb="0" cb="2"/><line nr="371" mi="0" ci="3" mb="0" cb="2"/><line nr="372" mi="0" ci="6" mb="0" cb="0"/><line nr="373" mi="0" ci="3" mb="1" cb="1"/><line nr="374" mi="0" ci="5" mb="0" cb="0"/><line nr="376" mi="0" ci="3" mb="1" cb="1"/><line nr="377" mi="0" ci="3" mb="0" cb="2"/><line nr="378" mi="0" ci="6" mb="0" cb="0"/><line nr="379" mi="0" ci="3" mb="1" cb="1"/><line nr="380" mi="0" ci="5" mb="0" cb="0"/><line nr="385" mi="4" ci="0" mb="0" cb="0"/><line nr="402" mi="0" ci="4" mb="0" cb="0"/><line nr="403" mi="0" ci="5" mb="0" cb="0"/><line nr="405" mi="0" ci="6" mb="0" cb="0"/><line nr="407" mi="0" ci="8" mb="0" cb="4"/><line nr="410" mi="0" ci="4" mb="0" cb="0"/><line nr="412" mi="0" ci="6" mb="0" cb="0"/><line nr="413" mi="0" ci="4" mb="0" cb="0"/><line nr="415" mi="0" ci="4" mb="0" cb="2"/><line nr="416" mi="0" ci="2" mb="0" cb="0"/><line nr="417" mi="0" ci="2" mb="0" cb="0"/><line nr="419" mi="0" ci="7" mb="0" cb="0"/><line nr="420" mi="0" ci="10" mb="0" cb="0"/><line nr="426" mi="0" ci="4" mb="0" cb="0"/><line nr="428" mi="0" ci="4" mb="0" cb="0"/><line nr="429" mi="0" ci="4" mb="0" cb="0"/><line nr="431" mi="0" ci="4" mb="0" cb="0"/><line nr="432" mi="0" ci="4" mb="0" cb="0"/><line nr="434" mi="0" ci="7" mb="0" cb="0"/><line nr="435" mi="0" ci="5" mb="0" cb="0"/><line nr="436" mi="0" ci="6" mb="0" cb="0"/><line nr="437" mi="0" ci="2" mb="0" cb="0"/><line nr="452" mi="0" ci="7" mb="0" cb="0"/><line nr="469" mi="0" ci="4" mb="0" cb="0"/><line nr="471" mi="0" ci="4" mb="0" cb="0"/><line nr="472" mi="0" ci="5" mb="0" cb="0"/><line nr="474" mi="0" ci="4" mb="0" cb="0"/><line nr="476" mi="0" ci="8" mb="0" cb="4"/><line nr="479" mi="0" ci="4" mb="0" cb="0"/><line nr="481" mi="0" ci="4" mb="0" cb="0"/><line nr="482" mi="0" ci="4" mb="0" cb="0"/><line nr="484" mi="0" ci="8" mb="0" cb="2"/><line nr="486" mi="0" ci="7" mb="0" cb="0"/><line nr="487" mi="0" ci="10" mb="0" cb="0"/><line nr="493" mi="0" ci="4" mb="0" cb="0"/><line nr="494" mi="0" ci="5" mb="0" cb="0"/><line nr="496" mi="0" ci="4" mb="0" cb="0"/><line nr="497" mi="0" ci="4" mb="0" cb="0"/><line nr="499" mi="0" ci="7" mb="0" cb="0"/><line nr="500" mi="0" ci="5" mb="0" cb="0"/><line nr="501" mi="0" ci="6" mb="0" cb="0"/><line nr="502" mi="0" ci="2" mb="0" cb="0"/><line nr="518" mi="0" ci="6" mb="0" cb="0"/><line nr="532" mi="0" ci="5" mb="0" cb="0"/><line nr="553" mi="0" ci="7" mb="0" cb="0"/><line nr="560" mi="0" ci="2" mb="0" cb="0"/><line nr="589" mi="0" ci="3" mb="0" cb="0"/><line nr="591" mi="0" ci="3" mb="0" cb="2"/><line nr="592" mi="0" ci="12" mb="0" cb="0"/><line nr="595" mi="0" ci="4" mb="0" cb="0"/><line nr="596" mi="0" ci="3" mb="0" cb="0"/><line nr="598" mi="0" ci="3" mb="0" cb="0"/><line nr="599" mi="0" ci="5" mb="0" cb="0"/><line nr="600" mi="0" ci="5" mb="0" cb="0"/><line nr="601" mi="0" ci="5" mb="0" cb="0"/><line nr="603" mi="0" ci="6" mb="0" cb="0"/><line nr="622" mi="0" ci="6" mb="0" cb="0"/><line nr="623" mi="0" ci="4" mb="0" cb="0"/><line nr="625" mi="0" ci="6" mb="0" cb="2"/><line nr="629" mi="0" ci="3" mb="0" cb="0"/><line nr="631" mi="0" ci="4" mb="0" cb="0"/><line nr="632" mi="0" ci="2" mb="0" cb="0"/><line nr="633" mi="0" ci="2" mb="0" cb="0"/><line nr="634" mi="0" ci="1" mb="0" cb="0"/><line nr="643" mi="0" ci="9" mb="0" cb="0"/><line nr="657" mi="0" ci="8" mb="0" cb="0"/><line nr="658" mi="0" ci="4" mb="0" cb="0"/><line nr="660" mi="0" ci="5" mb="0" cb="0"/><line nr="661" mi="0" ci="4" mb="0" cb="0"/><line nr="662" mi="0" ci="4" mb="0" cb="0"/><line nr="663" mi="0" ci="2" mb="0" cb="0"/><line nr="688" mi="0" ci="3" mb="0" cb="0"/><line nr="689" mi="0" ci="4" mb="0" cb="0"/><line nr="690" mi="0" ci="4" mb="0" cb="0"/><line nr="692" mi="0" ci="3" mb="0" cb="0"/><line nr="693" mi="0" ci="4" mb="0" cb="0"/><line nr="694" mi="0" ci="4" mb="0" cb="0"/><line nr="700" mi="0" ci="14" mb="0" cb="0"/><line nr="701" mi="0" ci="14" mb="0" cb="0"/><line nr="702" mi="0" ci="14" mb="0" cb="0"/><line nr="704" mi="0" ci="14" mb="0" cb="0"/><line nr="705" mi="0" ci="14" mb="0" cb="0"/><line nr="706" mi="0" ci="14" mb="0" cb="0"/><line nr="708" mi="0" ci="14" mb="0" cb="0"/><line nr="709" mi="0" ci="14" mb="0" cb="0"/><line nr="710" mi="0" ci="14" mb="0" cb="0"/><line nr="713" mi="0" ci="11" mb="0" cb="0"/><line nr="725" mi="0" ci="3" mb="0" cb="0"/><line nr="727" mi="0" ci="6" mb="0" cb="0"/><line nr="728" mi="0" ci="6" mb="0" cb="0"/><line nr="729" mi="0" ci="6" mb="0" cb="0"/><line nr="731" mi="0" ci="4" mb="0" cb="2"/><line nr="732" mi="0" ci="6" mb="0" cb="0"/><line nr="735" mi="0" ci="6" mb="0" cb="0"/><line nr="774" mi="0" ci="6" mb="0" cb="0"/><line nr="781" mi="0" ci="4" mb="0" cb="2"/><line nr="783" mi="0" ci="7" mb="0" cb="0"/><line nr="784" mi="0" ci="4" mb="0" cb="0"/><line nr="786" mi="0" ci="6" mb="0" cb="0"/><line nr="787" mi="0" ci="6" mb="0" cb="0"/><line nr="788" mi="0" ci="6" mb="0" cb="0"/><line nr="789" mi="0" ci="4" mb="0" cb="0"/><line nr="790" mi="0" ci="9" mb="0" cb="4"/><line nr="792" mi="0" ci="11" mb="0" cb="0"/><line nr="793" mi="0" ci="4" mb="0" cb="0"/><line nr="795" mi="0" ci="4" mb="0" cb="0"/><line nr="796" mi="0" ci="6" mb="0" cb="0"/><line nr="797" mi="0" ci="6" mb="0" cb="0"/><line nr="798" mi="0" ci="6" mb="0" cb="0"/><line nr="799" mi="0" ci="5" mb="0" cb="2"/><line nr="801" mi="0" ci="11" mb="0" cb="0"/><line nr="802" mi="0" ci="4" mb="0" cb="0"/><line nr="804" mi="0" ci="6" mb="0" cb="0"/><line nr="805" mi="0" ci="4" mb="0" cb="0"/><line nr="806" mi="0" ci="6" mb="0" cb="0"/><line nr="807" mi="0" ci="6" mb="0" cb="0"/><line nr="808" mi="0" ci="1" mb="0" cb="0"/><line nr="810" mi="0" ci="11" mb="0" cb="0"/><line nr="811" mi="0" ci="4" mb="0" cb="0"/><line nr="813" mi="0" ci="6" mb="0" cb="0"/><line nr="814" mi="0" ci="6" mb="0" cb="0"/><line nr="815" mi="0" ci="4" mb="0" cb="0"/><line nr="816" mi="0" ci="6" mb="0" cb="0"/><line nr="819" mi="0" ci="6" mb="0" cb="0"/><line nr="828" mi="0" ci="3" mb="0" cb="0"/><line nr="834" mi="0" ci="14" mb="0" cb="2"/><line nr="835" mi="0" ci="4" mb="0" cb="0"/><line nr="836" mi="0" ci="6" mb="0" cb="0"/><line nr="837" mi="0" ci="4" mb="0" cb="0"/><line nr="840" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="1251"/><counter type="BRANCH" missed="3" covered="47"/><counter type="LINE" missed="1" covered="216"/><counter type="COMPLEXITY" missed="3" covered="56"/><counter type="METHOD" missed="0" covered="34"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Rotation3D.java"/><sourcefile name="AxisSequence.java"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="10" mb="0" cb="0"/><line nr="33" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="10" mb="0" cb="0"/><line nr="43" mi="0" ci="10" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="0"/><line nr="59" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="10" mb="0" cb="0"/><line nr="69" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="10" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="84" mi="0" ci="10" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="18" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="170"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AxisAngleSequence.java"><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="18" mb="0" cb="0"/><line nr="139" mi="0" ci="21" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="2"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="2"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="15" mb="0" cb="4"/><line nr="159" mi="0" ci="6" mb="0" cb="2"/><line nr="160" mi="0" ci="6" mb="0" cb="2"/><line nr="161" mi="0" ci="5" mb="0" cb="2"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="6" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="9" mb="0" cb="0"/><line nr="201" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="181"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="0" covered="19"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AxisReferenceFrame.java"><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="4" covered="1632"/><counter type="BRANCH" missed="3" covered="61"/><counter type="LINE" missed="1" covered="284"/><counter type="COMPLEXITY" missed="3" covered="84"/><counter type="METHOD" missed="0" covered="55"/><counter type="CLASS" missed="0" covered="5"/></package><package name="org/apache/commons/geometry/euclidean/threed/shape"><class name="org/apache/commons/geometry/euclidean/threed/shape/Parallelepiped" sourcefilename="Parallelepiped.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unitCube" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/shape/Parallelepiped;" line="80"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="axisAligned" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/shape/Parallelepiped;" line="96"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromTransformedUnitCube" desc="(Lorg/apache/commons/geometry/core/Transform;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/shape/Parallelepiped;" line="146"><counter type="INSTRUCTION" missed="0" covered="120"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/shape/Parallelepiped$Builder;" line="178"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFace" desc="(IIIILjava/util/List;ZLorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/PlaneConvexSubset;" line="195"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureNonZeroSideLength" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="216"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="362"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="54"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/shape/Sphere" sourcefilename="Sphere.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()D" line="67"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBoundarySize" desc="()D" line="74"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="project" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="81"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTree" desc="(I)Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D;" line="126"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTriangleMesh" desc="(I)Lorg/apache/commons/geometry/euclidean/threed/mesh/TriangleMesh;" line="173"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersections" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)Ljava/util/List;" line="196"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firstIntersection" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/Line3D;)Lorg/apache/commons/geometry/euclidean/threed/Vector3D;" line="207"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecast" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;)Ljava/util/List;" line="213"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linecastFirst" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;)Lorg/apache/commons/geometry/euclidean/threed/line/LinecastPoint3D;" line="220"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLinecastStream" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;)Ljava/util/stream/Stream;" line="231"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/threed/shape/Sphere;" line="245"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getLinecastStream$0" desc="(Lorg/apache/commons/geometry/euclidean/threed/line/LineConvexSubset3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/line/LinecastPoint3D;" line="233"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="139"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/shape/Sphere$SphereTreeApproximationBuilder" sourcefilename="Sphere.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/shape/Sphere;I)V" line="267"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D;" line="277"><counter type="INSTRUCTION" missed="0" covered="227"/><counter type="LINE" missed="0" covered="33"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="partitionAndInsert" desc="(Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$RegionNode3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;I)V" line="342"><counter type="INSTRUCTION" missed="0" covered="122"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertSubdividedTriangles" desc="(Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$RegionNode3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;I)Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$RegionNode3D;" line="383"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createPlane" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/Plane;" line="411"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkedCut" desc="(Lorg/apache/commons/geometry/euclidean/threed/RegionBSPTree3D$RegionNode3D;Lorg/apache/commons/geometry/euclidean/threed/Plane;Lorg/apache/commons/geometry/core/partitioning/bsp/RegionCutRule;)V" line="422"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="465"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="73"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/shape/Sphere$SphereMeshApproximationBuilder" sourcefilename="Sphere.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/threed/shape/Sphere;I)V" line="446"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/apache/commons/geometry/euclidean/threed/mesh/SimpleTriangleMesh;" line="456"><counter type="INSTRUCTION" missed="0" covered="112"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSubdivided" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/geometry/euclidean/threed/Vector3D;I)V" line="495"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="191"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/threed/shape/Parallelepiped$Builder" sourcefilename="Parallelepiped.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="232"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPosition" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/shape/Parallelepiped$Builder;" line="255"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setScale" desc="(Lorg/apache/commons/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/geometry/euclidean/threed/shape/Parallelepiped$Builder;" line="265"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setScale" desc="(DDD)Lorg/apache/commons/geometry/euclidean/threed/shape/Parallelepiped$Builder;" line="277"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setScale" desc="(D)Lorg/apache/commons/geometry/euclidean/threed/shape/Parallelepiped$Builder;" line="286"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRotation" desc="(Lorg/apache/commons/geometry/euclidean/threed/rotation/QuaternionRotation;)Lorg/apache/commons/geometry/euclidean/threed/shape/Parallelepiped$Builder;" line="294"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/apache/commons/geometry/euclidean/threed/shape/Parallelepiped;" line="305"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Sphere.java"><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="2"/><line nr="127" mi="0" ci="13" mb="0" cb="0"/><line nr="129" mi="0" ci="7" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="2"/><line nr="174" mi="0" ci="13" mb="0" cb="0"/><line nr="176" mi="0" ci="7" mb="0" cb="0"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="207" mi="0" ci="7" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="8" mb="0" cb="0"/><line nr="232" mi="0" ci="7" mb="0" cb="0"/><line nr="233" mi="0" ci="13" mb="0" cb="0"/><line nr="245" mi="0" ci="7" mb="0" cb="0"/><line nr="267" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="0"/><line nr="270" mi="0" ci="1" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="279" mi="0" ci="5" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="284" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="5" mb="0" cb="0"/><line nr="286" mi="0" ci="5" mb="0" cb="0"/><line nr="288" mi="0" ci="5" mb="0" cb="0"/><line nr="289" mi="0" ci="5" mb="0" cb="0"/><line nr="290" mi="0" ci="5" mb="0" cb="0"/><line nr="293" mi="0" ci="3" mb="0" cb="0"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="7" mb="0" cb="0"/><line nr="298" mi="0" ci="7" mb="0" cb="0"/><line nr="300" mi="0" ci="7" mb="0" cb="0"/><line nr="301" mi="0" ci="7" mb="0" cb="0"/><line nr="303" mi="0" ci="7" mb="0" cb="0"/><line nr="304" mi="0" ci="7" mb="0" cb="0"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="310" mi="0" ci="13" mb="0" cb="0"/><line nr="311" mi="0" ci="13" mb="0" cb="0"/><line nr="313" mi="0" ci="13" mb="0" cb="0"/><line nr="314" mi="0" ci="13" mb="0" cb="0"/><line nr="316" mi="0" ci="13" mb="0" cb="0"/><line nr="317" mi="0" ci="13" mb="0" cb="0"/><line nr="319" mi="0" ci="13" mb="0" cb="0"/><line nr="320" mi="0" ci="13" mb="0" cb="0"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="13" mb="0" cb="0"/><line nr="324" mi="0" ci="6" mb="0" cb="0"/><line nr="325" mi="0" ci="1" mb="0" cb="0"/><line nr="327" mi="0" ci="2" mb="0" cb="0"/><line nr="342" mi="0" ci="6" mb="0" cb="2"/><line nr="343" mi="0" ci="4" mb="0" cb="0"/><line nr="345" mi="0" ci="5" mb="0" cb="0"/><line nr="347" mi="0" ci="8" mb="0" cb="0"/><line nr="348" mi="0" ci="8" mb="0" cb="0"/><line nr="349" mi="0" ci="8" mb="0" cb="0"/><line nr="351" mi="0" ci="2" mb="0" cb="0"/><line nr="353" mi="0" ci="9" mb="0" cb="0"/><line nr="354" mi="0" ci="9" mb="0" cb="0"/><line nr="356" mi="0" ci="4" mb="0" cb="0"/><line nr="357" mi="0" ci="9" mb="0" cb="0"/><line nr="358" mi="0" ci="9" mb="0" cb="0"/><line nr="360" mi="0" ci="4" mb="0" cb="0"/><line nr="361" mi="0" ci="9" mb="0" cb="0"/><line nr="362" mi="0" ci="9" mb="0" cb="0"/><line nr="364" mi="0" ci="9" mb="0" cb="0"/><line nr="365" mi="0" ci="1" mb="0" cb="0"/><line nr="366" mi="0" ci="8" mb="0" cb="0"/><line nr="368" mi="0" ci="1" mb="0" cb="0"/><line nr="383" mi="0" ci="4" mb="0" cb="2"/><line nr="385" mi="0" ci="9" mb="0" cb="0"/><line nr="386" mi="0" ci="4" mb="0" cb="0"/><line nr="388" mi="0" ci="4" mb="0" cb="0"/><line nr="390" mi="0" ci="8" mb="0" cb="0"/><line nr="391" mi="0" ci="8" mb="0" cb="0"/><line nr="392" mi="0" ci="8" mb="0" cb="0"/><line nr="394" mi="0" ci="2" mb="0" cb="0"/><line nr="395" mi="0" ci="8" mb="0" cb="0"/><line nr="396" mi="0" ci="8" mb="0" cb="0"/><line nr="397" mi="0" ci="8" mb="0" cb="0"/><line nr="398" mi="0" ci="8" mb="0" cb="0"/><line nr="400" mi="0" ci="2" mb="0" cb="0"/><line nr="411" mi="0" ci="8" mb="0" cb="0"/><line nr="422" mi="0" ci="5" mb="0" cb="2"/><line nr="423" mi="0" ci="12" mb="0" cb="0"/><line nr="425" mi="0" ci="1" mb="0" cb="0"/><line nr="446" mi="0" ci="2" mb="0" cb="0"/><line nr="447" mi="0" ci="3" mb="0" cb="0"/><line nr="448" mi="0" ci="3" mb="0" cb="0"/><line nr="449" mi="0" ci="5" mb="0" cb="0"/><line nr="450" mi="0" ci="1" mb="0" cb="0"/><line nr="456" mi="0" ci="5" mb="0" cb="0"/><line nr="457" mi="0" ci="4" mb="0" cb="0"/><line nr="460" mi="0" ci="3" mb="0" cb="0"/><line nr="461" mi="0" ci="3" mb="0" cb="0"/><line nr="462" mi="0" ci="3" mb="0" cb="0"/><line nr="464" mi="0" ci="7" mb="0" cb="0"/><line nr="465" mi="0" ci="7" mb="0" cb="0"/><line nr="467" mi="0" ci="7" mb="0" cb="0"/><line nr="468" mi="0" ci="7" mb="0" cb="0"/><line nr="470" mi="0" ci="7" mb="0" cb="0"/><line nr="471" mi="0" ci="7" mb="0" cb="0"/><line nr="473" mi="0" ci="6" mb="0" cb="0"/><line nr="474" mi="0" ci="6" mb="0" cb="0"/><line nr="476" mi="0" ci="6" mb="0" cb="0"/><line nr="477" mi="0" ci="6" mb="0" cb="0"/><line nr="479" mi="0" ci="6" mb="0" cb="0"/><line nr="480" mi="0" ci="6" mb="0" cb="0"/><line nr="482" mi="0" ci="6" mb="0" cb="0"/><line nr="483" mi="0" ci="6" mb="0" cb="0"/><line nr="485" mi="0" ci="4" mb="0" cb="0"/><line nr="495" mi="0" ci="4" mb="0" cb="2"/><line nr="497" mi="0" ci="8" mb="0" cb="0"/><line nr="500" mi="0" ci="4" mb="0" cb="0"/><line nr="502" mi="0" ci="8" mb="0" cb="0"/><line nr="503" mi="0" ci="8" mb="0" cb="0"/><line nr="504" mi="0" ci="8" mb="0" cb="0"/><line nr="506" mi="0" ci="6" mb="0" cb="0"/><line nr="507" mi="0" ci="6" mb="0" cb="0"/><line nr="508" mi="0" ci="6" mb="0" cb="0"/><line nr="509" mi="0" ci="6" mb="0" cb="0"/><line nr="511" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="795"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="133"/><counter type="COMPLEXITY" missed="0" covered="28"/><counter type="METHOD" missed="0" covered="22"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Parallelepiped.java"><line nr="40" mi="0" ci="10" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="7" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="17" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="7" mb="0" cb="2"/><line nr="152" mi="0" ci="10" mb="0" cb="0"/><line nr="153" mi="0" ci="10" mb="0" cb="0"/><line nr="154" mi="0" ci="10" mb="0" cb="0"/><line nr="156" mi="0" ci="13" mb="0" cb="0"/><line nr="158" mi="0" ci="11" mb="0" cb="0"/><line nr="159" mi="0" ci="11" mb="0" cb="0"/><line nr="162" mi="0" ci="11" mb="0" cb="0"/><line nr="163" mi="0" ci="11" mb="0" cb="0"/><line nr="166" mi="0" ci="11" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="6" mb="0" cb="0"/><line nr="195" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="2"/><line nr="201" mi="0" ci="20" mb="0" cb="0"/><line nr="202" mi="0" ci="20" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="6" mb="0" cb="2"/><line nr="217" mi="0" ci="16" mb="0" cb="0"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="0" ci="6" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="277" mi="0" ci="7" mb="0" cb="0"/><line nr="286" mi="0" ci="6" mb="0" cb="0"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="2" mb="0" cb="0"/><line nr="305" mi="0" ci="5" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="2" mb="0" cb="0"/><line nr="309" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="423"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="72"/><counter type="COMPLEXITY" missed="0" covered="18"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="1218"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="205"/><counter type="COMPLEXITY" missed="0" covered="46"/><counter type="METHOD" missed="0" covered="37"/><counter type="CLASS" missed="0" covered="5"/></package><package name="org/apache/commons/geometry/euclidean/oned"><class name="org/apache/commons/geometry/euclidean/oned/Vector1D$Unit" sourcefilename="Vector1D.java"><method name="&lt;init&gt;" desc="(D)V" line="338"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="norm" desc="()D" line="344"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normSq" desc="()D" line="350"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalize" desc="()Lorg/apache/commons/geometry/euclidean/oned/Vector1D$Unit;" line="356"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalizeOrNull" desc="()Lorg/apache/commons/geometry/euclidean/oned/Vector1D$Unit;" line="362"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withNorm" desc="(D)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="368"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negate" desc="()Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="374"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(D)Lorg/apache/commons/geometry/euclidean/oned/Vector1D$Unit;" line="383"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D$Unit;" line="392"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryCreateNormalized" desc="(DZ)Lorg/apache/commons/geometry/euclidean/oned/Vector1D$Unit;" line="407"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="329"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/oned/RegionBSPTree1D$BoundaryProjector1D" sourcefilename="RegionBSPTree1D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)V" line="458"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="disambiguateClosestPoint" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;Lorg/apache/commons/geometry/euclidean/oned/Vector1D;Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="464"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/oned/OrientedPoint$OrientedPointConvexSubset" sourcefilename="OrientedPoint.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;)V" line="261"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHyperplane" desc="()Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;" line="268"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFull" desc="()Z" line="277"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="286"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInfinite" desc="()Z" line="295"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFinite" desc="()Z" line="304"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()D" line="313"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCentroid" desc="()Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="322"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classify" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/core/RegionLocation;" line="333"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closest" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="343"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Lorg/apache/commons/geometry/core/partitioning/Hyperplane;)Lorg/apache/commons/geometry/core/partitioning/Split;" line="349"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toConvex" desc="()Ljava/util/List;" line="366"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint$OrientedPointConvexSubset;" line="372"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="()Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint$OrientedPointConvexSubset;" line="378"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="384"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="102"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="18"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/oned/RegionBSPTree1D$RegionNode1D" sourcefilename="RegionBSPTree1D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/core/partitioning/bsp/AbstractBSPTree;)V" line="354"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeRegion" desc="()Lorg/apache/commons/geometry/euclidean/oned/Interval;" line="363"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNodeInterval" desc="(Ljava/util/function/BiConsumer;)V" line="375"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSelf" desc="()Lorg/apache/commons/geometry/euclidean/oned/RegionBSPTree1D$RegionNode1D;" line="404"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D" sourcefilename="AffineTransformMatrix1D.java"><method name="&lt;init&gt;" desc="(DD)V" line="59"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="()[D" line="77"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="85"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyX" desc="(D)D" line="95"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyVector" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="103"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyVectorX" desc="(D)D" line="113"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyDirection" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D$Unit;" line="121"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="determinant" desc="()D" line="127"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linear" desc="()Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;" line="140"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linearTranspose" desc="()Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;" line="155"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;" line="169"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(D)Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;" line="183"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scale" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;" line="197"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scale" desc="(D)Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;" line="211"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;)Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;" line="226"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="premultiply" desc="(Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;)Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;" line="241"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inverse" desc="()Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;" line="251"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="265"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="282"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="297"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([D)Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;" line="319"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/util/function/UnaryOperator;)Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;" line="334"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="identity" desc="()Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;" line="355"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTranslation" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;" line="363"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTranslation" desc="(D)Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;" line="371"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createScale" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;" line="379"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createScale" desc="(D)Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;" line="387"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;)Lorg/apache/commons/geometry/euclidean/oned/AffineTransformMatrix1D;" line="399"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="332"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="64"/><counter type="COMPLEXITY" missed="0" covered="35"/><counter type="METHOD" missed="0" covered="29"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/oned/Interval" sourcefilename="Interval.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMin" desc="()D" line="68"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMax" desc="()D" line="77"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinBoundary" desc="()Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;" line="88"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxBoundary" desc="()Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;" line="99"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasMinBoundary" desc="()Z" line="106"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasMaxBoundary" desc="()Z" line="113"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInfinite" desc="()Z" line="122"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFinite" desc="()Z" line="131"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classify" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/core/RegionLocation;" line="137"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classify" desc="(D)Lorg/apache/commons/geometry/core/RegionLocation;" line="146"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyWithBoundary" desc="(DLorg/apache/commons/geometry/euclidean/oned/OrientedPoint;)Lorg/apache/commons/geometry/core/RegionLocation;" line="163"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(D)Z" line="186"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="project" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="202"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/oned/Interval;" line="235"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="253"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFull" desc="()Z" line="259"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()D" line="265"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBoundarySize" desc="()D" line="279"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCentroid" desc="()Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="285"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Lorg/apache/commons/geometry/core/partitioning/Hyperplane;)Lorg/apache/commons/geometry/core/partitioning/Split;" line="298"><counter type="INSTRUCTION" missed="0" covered="93"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTree" desc="()Lorg/apache/commons/geometry/euclidean/oned/RegionBSPTree1D;" line="337"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="343"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(DDLorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/oned/Interval;" line="364"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;Lorg/apache/commons/geometry/euclidean/oned/Vector1D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/oned/Interval;" line="394"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;)Lorg/apache/commons/geometry/euclidean/oned/Interval;" line="411"><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="BRANCH" missed="0" covered="32"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="min" desc="(DLorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/oned/Interval;" line="443"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="max" desc="(DLorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/oned/Interval;" line="452"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="point" desc="(DLorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/oned/Interval;" line="461"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="full" desc="()Lorg/apache/commons/geometry/euclidean/oned/Interval;" line="470"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateBoundaryRelationship" desc="(Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;)V" line="481"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateIntervalValues" desc="(DD)V" line="503"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="630"/><counter type="BRANCH" missed="2" covered="134"/><counter type="LINE" missed="0" covered="136"/><counter type="COMPLEXITY" missed="2" covered="99"/><counter type="METHOD" missed="0" covered="33"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/oned/RegionBSPTree1D" sourcefilename="RegionBSPTree1D.java"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Z)V" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="()Lorg/apache/commons/geometry/euclidean/oned/RegionBSPTree1D;" line="61"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/apache/commons/geometry/euclidean/oned/Interval;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classify" desc="(D)Lorg/apache/commons/geometry/core/RegionLocation;" line="81"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(D)Z" line="91"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBoundarySize" desc="()D" line="101"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="project" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="109"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Lorg/apache/commons/geometry/core/partitioning/Hyperplane;)Lorg/apache/commons/geometry/core/partitioning/Split;" line="125"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMin" desc="()D" line="134"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMax" desc="()D" line="155"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toIntervals" desc="()Ljava/util/List;" line="177"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createInterval" desc="(Lorg/apache/commons/geometry/euclidean/oned/RegionBSPTree1D$BoundaryPair;Lorg/apache/commons/geometry/euclidean/oned/RegionBSPTree1D$BoundaryPair;)Lorg/apache/commons/geometry/euclidean/oned/Interval;" line="220"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitInsideIntervals" desc="(Ljava/util/function/BiConsumer;)V" line="243"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createNode" desc="()Lorg/apache/commons/geometry/euclidean/oned/RegionBSPTree1D$RegionNode1D;" line="253"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeRegionSizeProperties" desc="()Lorg/apache/commons/geometry/core/partitioning/bsp/AbstractRegionBSPTree$RegionSizeProperties;" line="259"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swapsInsideOutside" desc="(Lorg/apache/commons/geometry/core/Transform;)Z" line="274"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="full" desc="()Lorg/apache/commons/geometry/euclidean/oned/RegionBSPTree1D;" line="281"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="empty" desc="()Lorg/apache/commons/geometry/euclidean/oned/RegionBSPTree1D;" line="288"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Lorg/apache/commons/geometry/euclidean/oned/Interval;[Lorg/apache/commons/geometry/euclidean/oned/Interval;)Lorg/apache/commons/geometry/euclidean/oned/RegionBSPTree1D;" line="299"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/lang/Iterable;)Lorg/apache/commons/geometry/euclidean/oned/RegionBSPTree1D;" line="313"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intervalToTree" desc="(Lorg/apache/commons/geometry/euclidean/oned/Interval;)Lorg/apache/commons/geometry/euclidean/oned/RegionBSPTree1D;" line="327"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toIntervals$0" desc="(Ljava/util/List;Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;)V" line="179"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="358"/><counter type="BRANCH" missed="0" covered="40"/><counter type="LINE" missed="0" covered="89"/><counter type="COMPLEXITY" missed="0" covered="44"/><counter type="METHOD" missed="0" covered="24"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/oned/RegionBSPTree1D$BoundaryPair" sourcefilename="RegionBSPTree1D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;)V" line="422"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMin" desc="()Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;" line="431"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMax" desc="()Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;" line="438"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinValue" desc="()D" line="447"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/oned/OrientedPoint" sourcefilename="OrientedPoint.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;ZLorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPoint" desc="()Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLocation" desc="()D" line="75"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDirection" desc="()Lorg/apache/commons/geometry/euclidean/oned/Vector1D$Unit;" line="82"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPositiveFacing" desc="()Z" line="92"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="()Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;" line="98"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Lorg/apache/commons/geometry/core/Transform;)Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;" line="104"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)D" line="128"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="(D)D" line="138"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classify" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/core/partitioning/HyperplaneLocation;" line="145"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classify" desc="(D)Lorg/apache/commons/geometry/core/partitioning/HyperplaneLocation;" line="156"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="similarOrientation" desc="(Lorg/apache/commons/geometry/core/partitioning/Hyperplane;)Z" line="170"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="project" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="176"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="span" desc="()Lorg/apache/commons/geometry/core/partitioning/HyperplaneConvexSubset;" line="187"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eq" desc="(Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Z" line="203"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="210"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="223"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="239"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="256"/><counter type="BRANCH" missed="0" covered="28"/><counter type="LINE" missed="0" covered="55"/><counter type="COMPLEXITY" missed="0" covered="32"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/oned/RegionBSPTree1D$RegionSizePropertiesVisitor" sourcefilename="RegionBSPTree1D.java"><method name="accept" desc="(Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;)V" line="520"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRegionSizeProperties" desc="()Lorg/apache/commons/geometry/core/partitioning/bsp/AbstractRegionBSPTree$RegionSizeProperties;" line="538"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/oned/RegionBSPTree1D$NodeRegionVisitor" sourcefilename="RegionBSPTree1D.java"><method name="accept" desc="(Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;)V" line="490"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInterval" desc="()Lorg/apache/commons/geometry/euclidean/oned/Interval;" line="498"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/oned/Vector1D" sourcefilename="Vector1D.java"><method name="&lt;init&gt;" desc="(D)V" line="71"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getX" desc="()D" line="80"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDimension" desc="()I" line="86"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNaN" desc="()Z" line="92"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInfinite" desc="()Z" line="98"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFinite" desc="()Z" line="104"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vectorTo" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="110"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="directionTo" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D$Unit;" line="116"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lerp" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;D)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="122"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getZero" desc="()Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="130"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="norm" desc="()D" line="136"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normSq" desc="()D" line="142"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withNorm" desc="(D)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="148"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="155"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(DLorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="161"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="167"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(DLorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="173"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negate" desc="()Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="179"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalize" desc="()Lorg/apache/commons/geometry/euclidean/oned/Vector1D$Unit;" line="185"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalizeOrNull" desc="()Lorg/apache/commons/geometry/euclidean/oned/Vector1D$Unit;" line="191"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(D)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="197"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)D" line="203"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distanceSq" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)D" line="209"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dot" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)D" line="215"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="angle" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)D" line="225"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Ljava/util/function/UnaryOperator;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="241"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eq" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Z" line="247"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="258"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="285"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="302"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(D)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="310"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/lang/String;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="320"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)I" line="52"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="300"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="0" covered="63"/><counter type="COMPLEXITY" missed="0" covered="47"/><counter type="METHOD" missed="0" covered="34"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/oned/OrientedPoints" sourcefilename="OrientedPoints.java"><method name="fromLocationAndDirection" desc="(DZLorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;" line="38"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromPointAndDirection" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;ZLorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;" line="50"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromPointAndDirection" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;Lorg/apache/commons/geometry/euclidean/oned/Vector1D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;" line="63"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createPositiveFacing" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;" line="79"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createPositiveFacing" desc="(DLorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;" line="89"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createNegativeFacing" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;" line="99"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createNegativeFacing" desc="(DLorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/oned/OrientedPoint;" line="109"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/oned/Vector1D$Sum" sourcefilename="Vector1D.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)V" line="432"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D$Sum;" line="439"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addScaled" desc="(DLorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D$Sum;" line="446"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lorg/apache/commons/geometry/euclidean/oned/Vector1D;" line="453"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="()Lorg/apache/commons/geometry/euclidean/oned/Vector1D$Sum;" line="460"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D$Sum;" line="468"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/commons/geometry/euclidean/oned/Vector1D;[Lorg/apache/commons/geometry/euclidean/oned/Vector1D;)Lorg/apache/commons/geometry/euclidean/oned/Vector1D$Sum;" line="477"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="OrientedPoint.java"><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="2"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="14" mb="0" cb="2"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="2"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="9" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="8" mb="0" cb="2"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="2"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="2"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="10" mb="0" cb="2"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="16" mb="0" cb="4"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="8" mb="0" cb="0"/><line nr="214" mi="0" ci="8" mb="0" cb="0"/><line nr="215" mi="0" ci="8" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="2"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="2"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="13" mb="0" cb="4"/><line nr="233" mi="0" ci="8" mb="0" cb="2"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="240" mi="0" ci="6" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="2" mb="0" cb="0"/><line nr="304" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="0" ci="2" mb="0" cb="0"/><line nr="322" mi="0" ci="4" mb="0" cb="0"/><line nr="333" mi="0" ci="5" mb="0" cb="2"/><line nr="334" mi="0" ci="2" mb="0" cb="0"/><line nr="337" mi="0" ci="2" mb="0" cb="0"/><line nr="343" mi="0" ci="5" mb="0" cb="0"/><line nr="349" mi="0" ci="6" mb="0" cb="0"/><line nr="351" mi="0" ci="2" mb="0" cb="0"/><line nr="352" mi="0" ci="2" mb="0" cb="0"/><line nr="354" mi="0" ci="3" mb="0" cb="2"/><line nr="355" mi="0" ci="3" mb="0" cb="0"/><line nr="356" mi="0" ci="3" mb="0" cb="2"/><line nr="357" mi="0" ci="2" mb="0" cb="0"/><line nr="360" mi="0" ci="6" mb="0" cb="0"/><line nr="366" mi="0" ci="3" mb="0" cb="0"/><line nr="372" mi="0" ci="8" mb="0" cb="0"/><line nr="378" mi="0" ci="7" mb="0" cb="0"/><line nr="384" mi="0" ci="4" mb="0" cb="0"/><line nr="385" mi="0" ci="6" mb="0" cb="0"/><line nr="386" mi="0" ci="3" mb="0" cb="0"/><line nr="387" mi="0" ci="2" mb="0" cb="0"/><line nr="388" mi="0" ci="2" mb="0" cb="0"/><line nr="390" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="358"/><counter type="BRANCH" missed="0" covered="34"/><counter type="LINE" missed="0" covered="86"/><counter type="COMPLEXITY" missed="0" covered="50"/><counter type="METHOD" missed="0" covered="33"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="RegionBSPTree1D.java"><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="2"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="12" mb="0" cb="2"/><line nr="146" mi="0" ci="7" mb="0" cb="2"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="2"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="12" mb="0" cb="2"/><line nr="167" mi="0" ci="7" mb="0" cb="2"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="13" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="10" mb="0" cb="2"/><line nr="188" mi="0" ci="2" mb="0" cb="2"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="6" mb="0" cb="2"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="7" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="2"/><line nr="205" mi="0" ci="7" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="5" mb="0" cb="4"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="5" mb="0" cb="4"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="11" mb="0" cb="2"/><line nr="244" mi="0" ci="3" mb="0" cb="2"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="0" ci="6" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><line nr="288" mi="0" ci="5" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="301" mi="0" ci="16" mb="0" cb="2"/><line nr="302" mi="0" ci="3" mb="0" cb="0"/><line nr="305" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="0" ci="5" mb="0" cb="0"/><line nr="315" mi="0" ci="10" mb="0" cb="2"/><line nr="316" mi="0" ci="3" mb="0" cb="0"/><line nr="317" mi="0" ci="1" mb="0" cb="0"/><line nr="319" mi="0" ci="2" mb="0" cb="0"/><line nr="327" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="330" mi="0" ci="2" mb="0" cb="0"/><line nr="332" mi="0" ci="4" mb="0" cb="0"/><line nr="334" mi="0" ci="2" mb="0" cb="2"/><line nr="335" mi="0" ci="8" mb="0" cb="0"/><line nr="337" mi="0" ci="4" mb="0" cb="0"/><line nr="340" mi="0" ci="2" mb="0" cb="2"/><line nr="341" mi="0" ci="8" mb="0" cb="0"/><line nr="344" mi="0" ci="2" mb="0" cb="0"/><line nr="354" mi="0" ci="3" mb="0" cb="0"/><line nr="355" mi="0" ci="1" mb="0" cb="0"/><line nr="363" mi="0" ci="5" mb="0" cb="0"/><line nr="364" mi="0" ci="3" mb="0" cb="0"/><line nr="366" mi="0" ci="3" mb="0" cb="0"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="376" mi="0" ci="2" mb="0" cb="0"/><line nr="379" mi="0" ci="2" mb="0" cb="0"/><line nr="382" mi="0" ci="10" mb="0" cb="6"/><line nr="383" mi="0" ci="4" mb="0" cb="0"/><line nr="385" mi="0" ci="7" mb="0" cb="4"/><line nr="386" mi="0" ci="5" mb="0" cb="4"/><line nr="388" mi="0" ci="2" mb="0" cb="2"/><line nr="389" mi="0" ci="3" mb="0" cb="0"/><line nr="391" mi="0" ci="2" mb="0" cb="2"/><line nr="392" mi="0" ci="2" mb="0" cb="0"/><line nr="395" mi="0" ci="3" mb="0" cb="0"/><line nr="398" mi="0" ci="4" mb="0" cb="0"/><line nr="399" mi="0" ci="1" mb="0" cb="0"/><line nr="404" mi="0" ci="2" mb="0" cb="0"/><line nr="422" mi="0" ci="2" mb="0" cb="0"/><line nr="423" mi="0" ci="3" mb="0" cb="0"/><line nr="424" mi="0" ci="3" mb="0" cb="0"/><line nr="425" mi="0" ci="1" mb="0" cb="0"/><line nr="431" mi="0" ci="3" mb="0" cb="0"/><line nr="438" mi="0" ci="3" mb="0" cb="0"/><line nr="447" mi="0" ci="9" mb="0" cb="2"/><line nr="458" mi="0" ci="3" mb="0" cb="0"/><line nr="459" mi="0" ci="1" mb="0" cb="0"/><line nr="464" mi="0" ci="5" mb="0" cb="0"/><line nr="466" mi="0" ci="8" mb="0" cb="4"/><line nr="468" mi="2" ci="4" mb="1" cb="1"/><line nr="472" mi="0" ci="6" mb="0" cb="2"/><line nr="490" mi="0" ci="11" mb="0" cb="4"/><line nr="491" mi="0" ci="11" mb="0" cb="4"/><line nr="492" mi="0" ci="1" mb="0" cb="0"/><line nr="498" mi="0" ci="6" mb="0" cb="0"/><line nr="520" mi="0" ci="6" mb="0" cb="0"/><line nr="522" mi="0" ci="7" mb="0" cb="2"/><line nr="523" mi="0" ci="7" mb="0" cb="2"/><line nr="525" mi="0" ci="4" mb="0" cb="0"/><line nr="526" mi="0" ci="6" mb="0" cb="0"/><line nr="528" mi="0" ci="6" mb="0" cb="0"/><line nr="529" mi="0" ci="6" mb="0" cb="0"/><line nr="530" mi="0" ci="8" mb="0" cb="0"/><line nr="531" mi="0" ci="1" mb="0" cb="0"/><line nr="538" mi="0" ci="2" mb="0" cb="0"/><line nr="540" mi="0" ci="7" mb="0" cb="4"/><line nr="541" mi="0" ci="5" mb="0" cb="2"/><line nr="543" mi="0" ci="8" mb="0" cb="0"/><line nr="547" mi="0" ci="8" mb="0" cb="0"/><line nr="551" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="592"/><counter type="BRANCH" missed="1" covered="85"/><counter type="LINE" missed="0" covered="141"/><counter type="COMPLEXITY" missed="1" covered="80"/><counter type="METHOD" missed="0" covered="38"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="Vector1D.java"><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="4"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="2"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="2"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="11" mb="0" cb="4"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="16" mb="0" cb="2"/><line nr="155" mi="0" ci="9" mb="0" cb="0"/><line nr="161" mi="0" ci="11" mb="0" cb="0"/><line nr="167" mi="0" ci="9" mb="0" cb="0"/><line nr="173" mi="0" ci="11" mb="0" cb="0"/><line nr="179" mi="0" ci="7" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="8" mb="0" cb="0"/><line nr="203" mi="0" ci="7" mb="0" cb="0"/><line nr="209" mi="0" ci="7" mb="0" cb="0"/><line nr="215" mi="0" ci="6" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="8" mb="0" cb="2"/><line nr="241" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="7" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="2"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="261" mi="0" ci="6" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="0" cb="2"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="3" mb="0" cb="2"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="2"/><line nr="291" mi="0" ci="3" mb="0" cb="0"/><line nr="294" mi="0" ci="10" mb="0" cb="2"/><line nr="296" mi="0" ci="2" mb="0" cb="0"/><line nr="302" mi="0" ci="5" mb="0" cb="0"/><line nr="310" mi="0" ci="5" mb="0" cb="0"/><line nr="320" mi="0" ci="6" mb="0" cb="0"/><line nr="329" mi="0" ci="5" mb="0" cb="0"/><line nr="331" mi="0" ci="6" mb="0" cb="0"/><line nr="338" mi="0" ci="4" mb="0" cb="0"/><line nr="339" mi="0" ci="1" mb="0" cb="0"/><line nr="344" mi="0" ci="2" mb="0" cb="0"/><line nr="350" mi="0" ci="2" mb="0" cb="0"/><line nr="356" mi="0" ci="2" mb="0" cb="0"/><line nr="362" mi="0" ci="2" mb="0" cb="0"/><line nr="368" mi="0" ci="4" mb="0" cb="0"/><line nr="374" mi="0" ci="7" mb="0" cb="2"/><line nr="383" mi="0" ci="4" mb="0" cb="0"/><line nr="392" mi="0" ci="4" mb="0" cb="2"/><line nr="393" mi="0" ci="3" mb="0" cb="0"/><line nr="394" mi="0" ci="3" mb="0" cb="0"/><line nr="407" mi="0" ci="3" mb="0" cb="0"/><line nr="409" mi="0" ci="3" mb="0" cb="2"/><line nr="410" mi="0" ci="8" mb="0" cb="2"/><line nr="411" mi="0" ci="2" mb="0" cb="2"/><line nr="412" mi="0" ci="3" mb="0" cb="0"/><line nr="414" mi="0" ci="2" mb="0" cb="0"/><line nr="432" mi="0" ci="2" mb="0" cb="0"/><line nr="433" mi="0" ci="5" mb="0" cb="0"/><line nr="434" mi="0" ci="1" mb="0" cb="0"/><line nr="439" mi="0" ci="6" mb="0" cb="0"/><line nr="440" mi="0" ci="2" mb="0" cb="0"/><line nr="446" mi="0" ci="7" mb="0" cb="0"/><line nr="447" mi="0" ci="2" mb="0" cb="0"/><line nr="453" mi="0" ci="5" mb="0" cb="0"/><line nr="460" mi="0" ci="5" mb="0" cb="0"/><line nr="468" mi="0" ci="5" mb="0" cb="0"/><line nr="477" mi="0" ci="5" mb="0" cb="0"/><line nr="478" mi="0" ci="16" mb="0" cb="2"/><line nr="479" mi="0" ci="4" mb="0" cb="0"/><line nr="481" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="437"/><counter type="BRANCH" missed="0" covered="38"/><counter type="LINE" missed="0" covered="97"/><counter type="COMPLEXITY" missed="0" covered="71"/><counter type="METHOD" missed="0" covered="52"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="OrientedPoints.java"><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="2"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="9" mb="0" cb="2"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Interval.java"><line nr="37" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="0" cb="2"/><line nr="77" mi="0" ci="9" mb="0" cb="2"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="2"/><line nr="113" mi="0" ci="7" mb="0" cb="2"/><line nr="122" mi="0" ci="10" mb="0" cb="4"/><line nr="131" mi="0" ci="7" mb="0" cb="2"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="6" mb="0" cb="4"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="4"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="2"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="2"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="2"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="2"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="9" mb="0" cb="2"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="6" mb="0" cb="4"/><line nr="206" mi="0" ci="6" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="8" mb="0" cb="4"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="2"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="2"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="8" mb="0" cb="2"/><line nr="235" mi="0" ci="3" mb="0" cb="2"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="2"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="0" ci="10" mb="0" cb="4"/><line nr="265" mi="0" ci="3" mb="0" cb="2"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="269" mi="0" ci="6" mb="0" cb="0"/><line nr="279" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="0" cb="2"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="9" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="301" mi="0" ci="10" mb="0" cb="2"/><line nr="302" mi="0" ci="10" mb="0" cb="2"/><line nr="304" mi="0" ci="2" mb="0" cb="0"/><line nr="305" mi="0" ci="2" mb="0" cb="0"/><line nr="307" mi="0" ci="6" mb="0" cb="4"/><line nr="309" mi="0" ci="5" mb="0" cb="4"/><line nr="311" mi="0" ci="3" mb="0" cb="0"/><line nr="312" mi="0" ci="5" mb="1" cb="3"/><line nr="314" mi="0" ci="3" mb="0" cb="0"/><line nr="317" mi="0" ci="9" mb="0" cb="0"/><line nr="318" mi="0" ci="1" mb="0" cb="0"/><line nr="319" mi="0" ci="9" mb="0" cb="0"/><line nr="320" mi="0" ci="1" mb="0" cb="0"/><line nr="325" mi="0" ci="3" mb="0" cb="0"/><line nr="326" mi="0" ci="6" mb="0" cb="2"/><line nr="327" mi="0" ci="6" mb="0" cb="2"/><line nr="329" mi="0" ci="6" mb="0" cb="0"/><line nr="337" mi="0" ci="5" mb="0" cb="0"/><line nr="343" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="0" ci="6" mb="0" cb="0"/><line nr="345" mi="0" ci="2" mb="0" cb="0"/><line nr="346" mi="0" ci="3" mb="0" cb="0"/><line nr="347" mi="0" ci="2" mb="0" cb="0"/><line nr="348" mi="0" ci="3" mb="0" cb="0"/><line nr="349" mi="0" ci="2" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="0" cb="0"/><line nr="364" mi="0" ci="3" mb="0" cb="0"/><line nr="366" mi="0" ci="4" mb="0" cb="0"/><line nr="367" mi="0" ci="4" mb="0" cb="0"/><line nr="369" mi="0" ci="3" mb="0" cb="2"/><line nr="370" mi="0" ci="5" mb="0" cb="0"/><line nr="371" mi="0" ci="2" mb="0" cb="0"/><line nr="373" mi="0" ci="3" mb="0" cb="2"/><line nr="374" mi="0" ci="5" mb="0" cb="0"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="377" mi="0" ci="4" mb="0" cb="4"/><line nr="378" mi="0" ci="2" mb="0" cb="0"/><line nr="381" mi="0" ci="6" mb="0" cb="0"/><line nr="394" mi="0" ci="7" mb="0" cb="0"/><line nr="411" mi="0" ci="3" mb="0" cb="0"/><line nr="413" mi="0" ci="6" mb="0" cb="2"/><line nr="414" mi="0" ci="6" mb="0" cb="2"/><line nr="416" mi="0" ci="4" mb="0" cb="4"/><line nr="418" mi="0" ci="2" mb="0" cb="0"/><line nr="422" mi="0" ci="14" mb="0" cb="8"/><line nr="423" mi="0" ci="14" mb="0" cb="8"/><line nr="426" mi="0" ci="7" mb="0" cb="2"/><line nr="427" mi="0" ci="7" mb="0" cb="2"/><line nr="429" mi="0" ci="3" mb="0" cb="0"/><line nr="432" mi="0" ci="3" mb="0" cb="0"/><line nr="433" mi="0" ci="6" mb="0" cb="2"/><line nr="434" mi="0" ci="7" mb="0" cb="2"/><line nr="443" mi="0" ci="5" mb="0" cb="0"/><line nr="452" mi="0" ci="5" mb="0" cb="0"/><line nr="461" mi="0" ci="5" mb="0" cb="0"/><line nr="470" mi="0" ci="2" mb="0" cb="0"/><line nr="481" mi="0" ci="4" mb="0" cb="4"/><line nr="482" mi="0" ci="5" mb="0" cb="2"/><line nr="483" mi="0" ci="13" mb="0" cb="0"/><line nr="484" mi="0" ci="3" mb="0" cb="0"/><line nr="487" mi="0" ci="8" mb="0" cb="2"/><line nr="488" mi="0" ci="4" mb="1" cb="1"/><line nr="489" mi="0" ci="13" mb="0" cb="0"/><line nr="490" mi="0" ci="3" mb="0" cb="0"/><line nr="493" mi="0" ci="1" mb="0" cb="0"/><line nr="503" mi="0" ci="7" mb="0" cb="4"/><line nr="504" mi="0" ci="6" mb="0" cb="4"/><line nr="506" mi="0" ci="8" mb="0" cb="0"/><line nr="507" mi="0" ci="10" mb="0" cb="0"/><line nr="509" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="630"/><counter type="BRANCH" missed="2" covered="134"/><counter type="LINE" missed="0" covered="136"/><counter type="COMPLEXITY" missed="2" covered="99"/><counter type="METHOD" missed="0" covered="33"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AffineTransformMatrix1D.java"><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="13" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="7" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="10" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="12" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="257" mi="0" ci="6" mb="0" cb="0"/><line nr="259" mi="0" ci="6" mb="0" cb="0"/><line nr="265" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="8" mb="0" cb="0"/><line nr="269" mi="0" ci="8" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="2"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="0" cb="2"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="11" mb="0" cb="2"/><line nr="291" mi="0" ci="5" mb="0" cb="2"/><line nr="297" mi="0" ci="4" mb="0" cb="0"/><line nr="299" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="0" ci="2" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="0" cb="0"/><line nr="303" mi="0" ci="2" mb="0" cb="0"/><line nr="305" mi="0" ci="2" mb="0" cb="0"/><line nr="307" mi="0" ci="3" mb="0" cb="0"/><line nr="319" mi="0" ci="4" mb="0" cb="2"/><line nr="320" mi="0" ci="17" mb="0" cb="0"/><line nr="323" mi="0" ci="10" mb="0" cb="0"/><line nr="334" mi="0" ci="5" mb="0" cb="0"/><line nr="335" mi="0" ci="5" mb="0" cb="0"/><line nr="337" mi="0" ci="5" mb="0" cb="0"/><line nr="338" mi="0" ci="3" mb="0" cb="0"/><line nr="340" mi="0" ci="12" mb="0" cb="0"/><line nr="342" mi="0" ci="3" mb="0" cb="0"/><line nr="343" mi="0" ci="3" mb="0" cb="2"/><line nr="344" mi="0" ci="12" mb="0" cb="0"/><line nr="347" mi="0" ci="2" mb="0" cb="0"/><line nr="355" mi="0" ci="2" mb="0" cb="0"/><line nr="363" mi="0" ci="4" mb="0" cb="0"/><line nr="371" mi="0" ci="6" mb="0" cb="0"/><line nr="379" mi="0" ci="4" mb="0" cb="0"/><line nr="387" mi="0" ci="6" mb="0" cb="0"/><line nr="399" mi="0" ci="6" mb="0" cb="0"/><line nr="400" mi="0" ci="9" mb="0" cb="0"/><line nr="402" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="332"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="64"/><counter type="COMPLEXITY" missed="0" covered="35"/><counter type="METHOD" missed="0" covered="29"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="2" covered="2417"/><counter type="BRANCH" missed="3" covered="307"/><counter type="LINE" missed="0" covered="534"/><counter type="COMPLEXITY" missed="3" covered="344"/><counter type="METHOD" missed="0" covered="192"/><counter type="CLASS" missed="0" covered="14"/></package><package name="org/apache/commons/geometry/euclidean/twod/hull"><class name="org/apache/commons/geometry/euclidean/twod/hull/ConvexHull2D" sourcefilename="ConvexHull2D.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertices" desc="()Ljava/util/List;" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="()Lorg/apache/commons/geometry/euclidean/twod/path/LinePath;" line="72"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRegion" desc="()Lorg/apache/commons/geometry/euclidean/twod/ConvexArea;" line="78"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="86"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildHullPath" desc="(Ljava/util/Collection;Lorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)Lorg/apache/commons/geometry/euclidean/twod/path/LinePath;" line="102"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/geometry/euclidean/twod/hull/ConvexHull2D$Builder" sourcefilename="ConvexHull2D.java"><method name="&lt;init&gt;" desc="(ZLorg/apache/commons/numbers/core/Precision$DoubleEquivalence;)V" line="165"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/geometry/euclidean/twod/hull/ConvexHull2D$Builder;" line="181"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/util/Collection;)Lorg/apache/commons/geometry/euclidean/twod/hull/ConvexHull2D$Builder;" line="212"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/apache/commons/geometry/euclidean/twod/hull/ConvexHull2D;" line="225"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildQuadrilateral" desc="([Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)V" line="244"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkCorners" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Z" line="261"><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insideQuadrilateral" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)Z" line="296"><counter type="INSTRUCTION" missed="2" covered="89"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signedAreaPoints" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)D" line="343"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findHullVertices" desc="(Ljava/util/Collection;)Ljava/util/Collection;" line="353"><counter type="INSTRUCTION" missed="0" covered="93"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateHull" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Ljava/util/List;)V" line="400"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConvex" desc="(Ljava/util/Collection;)Z" line="429"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$findHullVertices$0" desc="(Lorg/apache/commons/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/geometry/euclidean/twod/Vector2D;)I" line="359"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="561"/><counter type="BRANCH" missed="2" covered="64"/><counter type="LINE" missed="1" covered="118"/><counter type="COMPLEXITY" missed="2" covered="43"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ConvexHull2D.java"><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="2"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="2"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="2"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="2"/><line nr="183" mi="0" ci="24" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="5" mb="0" cb="2"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="2"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="2"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="2"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="7" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="0" ci="16" mb="0" cb="2"/><line nr="246" mi="0" ci="5" mb="0" cb="2"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="2"/><line nr="262" mi="0" ci="12" mb="0" cb="0"/><line nr="263" mi="0" ci="5" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="0" ci="7" mb="0" cb="2"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="0" ci="5" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="7" mb="0" cb="2"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="0" ci="5" mb="0" cb="0"/><line nr="275" mi="0" ci="2" mb="0" cb="0"/><line nr="277" mi="0" ci="7" mb="0" cb="2"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="279" mi="0" ci="5" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="7" mb="0" cb="2"/><line nr="283" mi="0" ci="3" mb="0" cb="0"/><line nr="284" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="0" ci="2" mb="0" cb="0"/><line nr="296" mi="0" ci="10" mb="0" cb="0"/><line nr="297" mi="0" ci="6" mb="0" cb="0"/><line nr="299" mi="0" ci="8" mb="1" cb="3"/><line nr="300" mi="0" ci="2" mb="0" cb="0"/><line nr="304" mi="0" ci="5" mb="0" cb="0"/><line nr="308" mi="0" ci="9" mb="0" cb="4"/><line nr="309" mi="0" ci="2" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="0" cb="0"/><line nr="314" mi="0" ci="7" mb="0" cb="2"/><line nr="315" mi="0" ci="2" mb="0" cb="0"/><line nr="316" mi="0" ci="6" mb="0" cb="0"/><line nr="318" mi="0" ci="4" mb="1" cb="1"/><line nr="319" mi="2" ci="0" mb="0" cb="0"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="328" mi="0" ci="15" mb="0" cb="6"/><line nr="329" mi="0" ci="2" mb="0" cb="0"/><line nr="332" mi="0" ci="2" mb="0" cb="0"/><line nr="343" mi="0" ci="8" mb="0" cb="0"/><line nr="353" mi="0" ci="5" mb="0" cb="0"/><line nr="356" mi="0" ci="4" mb="0" cb="0"/><line nr="359" mi="0" ci="8" mb="0" cb="0"/><line nr="360" mi="0" ci="2" mb="0" cb="2"/><line nr="361" mi="0" ci="8" mb="0" cb="0"/><line nr="363" mi="0" ci="2" mb="0" cb="0"/><line nr="368" mi="0" ci="4" mb="0" cb="0"/><line nr="369" mi="0" ci="10" mb="0" cb="2"/><line nr="370" mi="0" ci="4" mb="0" cb="0"/><line nr="371" mi="0" ci="1" mb="0" cb="0"/><line nr="374" mi="0" ci="4" mb="0" cb="0"/><line nr="375" mi="0" ci="9" mb="0" cb="2"/><line nr="376" mi="0" ci="5" mb="0" cb="0"/><line nr="377" mi="0" ci="4" mb="0" cb="0"/><line nr="382" mi="0" ci="11" mb="0" cb="0"/><line nr="383" mi="0" ci="8" mb="0" cb="2"/><line nr="384" mi="0" ci="7" mb="0" cb="0"/><line nr="386" mi="0" ci="8" mb="0" cb="2"/><line nr="387" mi="0" ci="7" mb="0" cb="0"/><line nr="390" mi="0" ci="2" mb="0" cb="0"/><line nr="400" mi="0" ci="4" mb="0" cb="2"/><line nr="401" mi="0" ci="3" mb="0" cb="0"/><line nr="402" mi="0" ci="7" mb="0" cb="0"/><line nr="403" mi="0" ci="7" mb="0" cb="0"/><line nr="405" mi="0" ci="8" mb="0" cb="0"/><line nr="406" mi="0" ci="5" mb="0" cb="2"/><line nr="408" mi="0" ci="3" mb="0" cb="2"/><line nr="409" mi="0" ci="5" mb="0" cb="0"/><line nr="411" mi="0" ci="6" mb="0" cb="0"/><line nr="412" mi="0" ci="4" mb="0" cb="0"/><line nr="414" mi="0" ci="1" mb="0" cb="0"/><line nr="415" mi="0" ci="4" mb="0" cb="2"/><line nr="416" mi="0" ci="6" mb="0" cb="0"/><line nr="420" mi="0" ci="1" mb="0" cb="0"/><line nr="421" mi="0" ci="4" mb="0" cb="0"/><line nr="422" mi="0" ci="1" mb="0" cb="0"/><line nr="429" mi="0" ci="3" mb="0" cb="0"/><line nr="431" mi="0" ci="3" mb="0" cb="2"/><line nr="433" mi="0" ci="2" mb="0" cb="0"/><line nr="436" mi="0" ci="3" mb="0" cb="0"/><line nr="438" mi="0" ci="4" mb="0" cb="0"/><line nr="439" mi="0" ci="4" mb="0" cb="0"/><line nr="440" mi="0" ci="4" mb="0" cb="0"/><line nr="445" mi="0" ci="3" mb="0" cb="2"/><line nr="446" mi="0" ci="4" mb="0" cb="0"/><line nr="447" mi="0" ci="4" mb="0" cb="0"/><line nr="450" mi="0" ci="8" mb="0" cb="2"/><line nr="451" mi="0" ci="2" mb="0" cb="0"/><line nr="454" mi="0" ci="2" mb="0" cb="0"/><line nr="455" mi="0" ci="3" mb="0" cb="0"/><line nr="458" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="633"/><counter type="BRANCH" missed="2" covered="70"/><counter type="LINE" missed="1" covered="139"/><counter type="COMPLEXITY" missed="2" covered="52"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="2" covered="633"/><counter type="BRANCH" missed="2" covered="70"/><counter type="LINE" missed="1" covered="139"/><counter type="COMPLEXITY" missed="2" covered="52"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="2"/></package><counter type="INSTRUCTION" missed="13" covered="26833"/><counter type="BRANCH" missed="47" covered="2103"/><counter type="LINE" missed="4" covered="5444"/><counter type="COMPLEXITY" missed="47" covered="2586"/><counter type="METHOD" missed="0" covered="1558"/><counter type="CLASS" missed="0" covered="140"/></report>